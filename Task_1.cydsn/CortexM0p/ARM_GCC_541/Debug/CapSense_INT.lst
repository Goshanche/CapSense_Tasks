ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_SsCSDPostScan,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_SsCSDPostScan, %function
  24              	CapSense_SsCSDPostScan:
  25              	.LFB3:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_INT.c"
   1:Generated_Source\PSoC4/CapSense_INT.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_INT.c **** * \file CapSense_INT.c
   3:Generated_Source\PSoC4/CapSense_INT.c **** * \version 7.0
   4:Generated_Source\PSoC4/CapSense_INT.c **** *
   5:Generated_Source\PSoC4/CapSense_INT.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_INT.c **** *   This file contains the source code for implementation of the Component's
   7:Generated_Source\PSoC4/CapSense_INT.c **** *   Interrupt Service Routine (ISR).
   8:Generated_Source\PSoC4/CapSense_INT.c **** *
   9:Generated_Source\PSoC4/CapSense_INT.c **** * \see CapSense v7.0 Datasheet
  10:Generated_Source\PSoC4/CapSense_INT.c **** *
  11:Generated_Source\PSoC4/CapSense_INT.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_INT.c **** * Copyright (2016-2019), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_INT.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_INT.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_INT.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_INT.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_INT.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_INT.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_INT.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_INT.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_INT.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_INT.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_INT.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_INT.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_INT.c **** *
  26:Generated_Source\PSoC4/CapSense_INT.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_INT.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_INT.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_INT.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_INT.c **** * materials described herein. Cypress does not assume any liability arising out
  31:Generated_Source\PSoC4/CapSense_INT.c **** * of the application or use of any product or circuit described herein. Cypress
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 2


  32:Generated_Source\PSoC4/CapSense_INT.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_INT.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_INT.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_INT.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_INT.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_INT.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_INT.c **** #include "cytypes.h"
  40:Generated_Source\PSoC4/CapSense_INT.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_INT.c **** #include "CapSense_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_INT.c **** #include "CapSense_Structure.h"
  43:Generated_Source\PSoC4/CapSense_INT.c **** #include "CapSense_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_INT.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  45:Generated_Source\PSoC4/CapSense_INT.c ****     #include "CapSense_SensingCSD_LL.h"
  46:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
  47:Generated_Source\PSoC4/CapSense_INT.c **** #include "cyapicallbacks.h"
  48:Generated_Source\PSoC4/CapSense_INT.c **** 
  49:Generated_Source\PSoC4/CapSense_INT.c **** /*******************************************************************************
  50:Generated_Source\PSoC4/CapSense_INT.c **** * Static Function Prototypes
  51:Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
  52:Generated_Source\PSoC4/CapSense_INT.c **** /**
  53:Generated_Source\PSoC4/CapSense_INT.c **** * \cond SECTION_C_INTERNAL
  54:Generated_Source\PSoC4/CapSense_INT.c **** * \addtogroup group_c_internal
  55:Generated_Source\PSoC4/CapSense_INT.c **** * \{
  56:Generated_Source\PSoC4/CapSense_INT.c **** */
  57:Generated_Source\PSoC4/CapSense_INT.c **** 
  58:Generated_Source\PSoC4/CapSense_INT.c **** #if (((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN)) && \
  59:Generated_Source\PSoC4/CapSense_INT.c ****      (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN))
  60:Generated_Source\PSoC4/CapSense_INT.c ****     static void CapSense_SsNextFrequencyScan(void);
  61:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* (((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN)) && \
  62:Generated_Source\PSoC4/CapSense_INT.c ****             (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)) */
  63:Generated_Source\PSoC4/CapSense_INT.c **** 
  64:Generated_Source\PSoC4/CapSense_INT.c **** #if ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN))
  65:Generated_Source\PSoC4/CapSense_INT.c ****     static void CapSense_SsCSDPostScan(void);
  66:Generated_Source\PSoC4/CapSense_INT.c ****     static void CapSense_SsCSDInitNextScan(void);
  67:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN)) */
  68:Generated_Source\PSoC4/CapSense_INT.c **** /** \}
  69:Generated_Source\PSoC4/CapSense_INT.c **** * \endcond */
  70:Generated_Source\PSoC4/CapSense_INT.c **** 
  71:Generated_Source\PSoC4/CapSense_INT.c **** 
  72:Generated_Source\PSoC4/CapSense_INT.c **** /**
  73:Generated_Source\PSoC4/CapSense_INT.c **** * \cond SECTION_C_INTERRUPT
  74:Generated_Source\PSoC4/CapSense_INT.c **** * \addtogroup group_c_interrupt
  75:Generated_Source\PSoC4/CapSense_INT.c **** * \{
  76:Generated_Source\PSoC4/CapSense_INT.c **** */
  77:Generated_Source\PSoC4/CapSense_INT.c **** 
  78:Generated_Source\PSoC4/CapSense_INT.c **** 
  79:Generated_Source\PSoC4/CapSense_INT.c **** #if ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN))
  80:Generated_Source\PSoC4/CapSense_INT.c **** 
  81:Generated_Source\PSoC4/CapSense_INT.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  82:Generated_Source\PSoC4/CapSense_INT.c ****     /* Fourth-generation HW block part */
  83:Generated_Source\PSoC4/CapSense_INT.c **** 
  84:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
  85:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostSingleScan
  86:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
  87:Generated_Source\PSoC4/CapSense_INT.c ****     *
  88:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 3


  89:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the single-sensor scanning implementation.
  90:Generated_Source\PSoC4/CapSense_INT.c ****     *
  91:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
  92:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
  93:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_CSDScanExt() function.
  94:Generated_Source\PSoC4/CapSense_INT.c ****     *
  95:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed for Third-generation HW block:
  96:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
  97:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
  98:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
  99:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Update the Scan Counter.
 100:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Reset the BUSY flag.
 101:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Enable the CSD interrupt.
 102:Generated_Source\PSoC4/CapSense_INT.c ****     *
 103:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed for Fourth-generation HW block:
 104:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Check if the raw data is not noisy.
 105:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 106:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Configure and start the scan for the next frequency if the
 107:Generated_Source\PSoC4/CapSense_INT.c ****     *      multi-frequency is enabled.
 108:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Update the Scan Counter.
 109:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Reset the BUSY flag.
 110:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Enable the CSD interrupt.
 111:Generated_Source\PSoC4/CapSense_INT.c ****     *
 112:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next frequency
 113:Generated_Source\PSoC4/CapSense_INT.c ****     *  channels when multi-frequency scanning is enabled.
 114:Generated_Source\PSoC4/CapSense_INT.c ****     *
 115:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user code
 116:Generated_Source\PSoC4/CapSense_INT.c ****     *  from macros specified in Component's generated code. Refer to the
 117:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 118:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 119:Generated_Source\PSoC4/CapSense_INT.c ****     *
 120:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 121:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostSingleScan)
 122:Generated_Source\PSoC4/CapSense_INT.c ****     {
 123:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 124:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 125:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 126:Generated_Source\PSoC4/CapSense_INT.c **** 
 127:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 128:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 129:Generated_Source\PSoC4/CapSense_INT.c **** 
 130:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 131:Generated_Source\PSoC4/CapSense_INT.c ****             if ((CapSense_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CapSense_RESULT_VAL1_PTR) &
 132:Generated_Source\PSoC4/CapSense_INT.c ****                                                         CapSense_RESULT_VAL1_BAD_CONVS_MASK) >>
 133:Generated_Source\PSoC4/CapSense_INT.c ****                                                         CapSense_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 134:Generated_Source\PSoC4/CapSense_INT.c ****                                                         (0u < CapSense_badConversionsNum))
 135:Generated_Source\PSoC4/CapSense_INT.c ****             {
 136:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Decrement bad conversions number */
 137:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_badConversionsNum--;
 138:Generated_Source\PSoC4/CapSense_INT.c **** 
 139:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Start the re-scan */
 140:Generated_Source\PSoC4/CapSense_INT.c ****                 CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_AZ0_SKIP_MASK |
 141:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_AZ1_SKIP_MASK |
 142:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_START_MASK);
 143:Generated_Source\PSoC4/CapSense_INT.c ****             }
 144:Generated_Source\PSoC4/CapSense_INT.c ****             else
 145:Generated_Source\PSoC4/CapSense_INT.c ****             {
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 4


 146:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 147:Generated_Source\PSoC4/CapSense_INT.c **** 
 148:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDPostScan();
 149:Generated_Source\PSoC4/CapSense_INT.c **** 
 150:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 151:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 152:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 153:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Scan the next channel */
 154:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsNextFrequencyScan();
 155:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 156:Generated_Source\PSoC4/CapSense_INT.c ****                 else
 157:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 158:Generated_Source\PSoC4/CapSense_INT.c ****                     /* All channels are scanned. Set IMO to zero channel */
 159:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 160:Generated_Source\PSoC4/CapSense_INT.c **** 
 161:Generated_Source\PSoC4/CapSense_INT.c ****                     #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 162:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 163:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 164:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 165:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 166:Generated_Source\PSoC4/CapSense_INT.c **** 
 167:Generated_Source\PSoC4/CapSense_INT.c ****                     #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 168:Generated_Source\PSoC4/CapSense_INT.c ****                         /* Disable Fourth-generation HW block */
 169:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
 170:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
 171:Generated_Source\PSoC4/CapSense_INT.c **** 
 172:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Update Scan Counter */
 173:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_dsRam.scanCounter++;
 174:Generated_Source\PSoC4/CapSense_INT.c **** 
 175:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Sensor is totally scanned. Reset BUSY flag */
 176:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_dsRam.status &= ~(CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
 177:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 178:Generated_Source\PSoC4/CapSense_INT.c ****             #else
 179:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 180:Generated_Source\PSoC4/CapSense_INT.c ****                     #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 181:Generated_Source\PSoC4/CapSense_INT.c ****                         /* Disable Fourth-generation HW block */
 182:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
 183:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
 184:Generated_Source\PSoC4/CapSense_INT.c **** 
 185:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Update Scan Counter */
 186:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_dsRam.scanCounter++;
 187:Generated_Source\PSoC4/CapSense_INT.c **** 
 188:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Sensor is totally scanned. Reset BUSY flag */
 189:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_dsRam.status &= ~(CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
 190:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 191:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 192:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 193:Generated_Source\PSoC4/CapSense_INT.c ****         }
 194:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 195:Generated_Source\PSoC4/CapSense_INT.c **** 
 196:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 197:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 198:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 199:Generated_Source\PSoC4/CapSense_INT.c ****     }
 200:Generated_Source\PSoC4/CapSense_INT.c **** 
 201:Generated_Source\PSoC4/CapSense_INT.c **** 
 202:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 5


 203:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostMultiScan
 204:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 205:Generated_Source\PSoC4/CapSense_INT.c ****     *
 206:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
 207:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the multiple-sensor scanning
 208:Generated_Source\PSoC4/CapSense_INT.c ****     *  implementation.
 209:Generated_Source\PSoC4/CapSense_INT.c ****     *
 210:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 211:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 212:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_Scan() or CapSense_ScanAllWidgets() APIs.
 213:Generated_Source\PSoC4/CapSense_INT.c ****     *
 214:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed:
 215:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
 216:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 217:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 218:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned).
 219:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Update the Scan Counter.
 220:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Reset the BUSY flag.
 221:Generated_Source\PSoC4/CapSense_INT.c ****     *    7. Enable the CSD interrupt.
 222:Generated_Source\PSoC4/CapSense_INT.c ****     *
 223:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 224:Generated_Source\PSoC4/CapSense_INT.c ****     *  widget has more than one sensor.
 225:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 226:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() APIs are called and the project has
 227:Generated_Source\PSoC4/CapSense_INT.c ****     *  more than one widget.
 228:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 229:Generated_Source\PSoC4/CapSense_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 230:Generated_Source\PSoC4/CapSense_INT.c ****     *
 231:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user
 232:Generated_Source\PSoC4/CapSense_INT.c ****     *  code from macros specified in Component's generated code. Refer to the
 233:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 234:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 235:Generated_Source\PSoC4/CapSense_INT.c ****     *
 236:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 237:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostMultiScan)
 238:Generated_Source\PSoC4/CapSense_INT.c ****     {
 239:Generated_Source\PSoC4/CapSense_INT.c ****         /* Declare and initialize ptr to sensor IO structure to appropriate address */
 240:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_FLASH_IO_STRUCT const *curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
 241:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 242:Generated_Source\PSoC4/CapSense_INT.c ****                                                           + CapSense_sensorIndex;
 243:Generated_Source\PSoC4/CapSense_INT.c **** 
 244:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 245:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 246:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 247:Generated_Source\PSoC4/CapSense_INT.c **** 
 248:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 249:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 250:Generated_Source\PSoC4/CapSense_INT.c **** 
 251:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 252:Generated_Source\PSoC4/CapSense_INT.c ****             if ((CapSense_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CapSense_RESULT_VAL1_PTR) &
 253:Generated_Source\PSoC4/CapSense_INT.c ****                                                       CapSense_RESULT_VAL1_BAD_CONVS_MASK) >>
 254:Generated_Source\PSoC4/CapSense_INT.c ****                                                       CapSense_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 255:Generated_Source\PSoC4/CapSense_INT.c ****                                                       (0u < CapSense_badConversionsNum))
 256:Generated_Source\PSoC4/CapSense_INT.c ****             {
 257:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Decrement bad conversions number */
 258:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_badConversionsNum--;
 259:Generated_Source\PSoC4/CapSense_INT.c **** 
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 6


 260:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Start the re-scan */
 261:Generated_Source\PSoC4/CapSense_INT.c ****                 CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_AZ0_SKIP_MASK |
 262:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_AZ1_SKIP_MASK |
 263:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_START_MASK);
 264:Generated_Source\PSoC4/CapSense_INT.c ****             }
 265:Generated_Source\PSoC4/CapSense_INT.c ****             else
 266:Generated_Source\PSoC4/CapSense_INT.c ****             {
 267:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 268:Generated_Source\PSoC4/CapSense_INT.c **** 
 269:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDPostScan();
 270:Generated_Source\PSoC4/CapSense_INT.c **** 
 271:Generated_Source\PSoC4/CapSense_INT.c ****             /* Disable sensor when all frequency channels are scanned */
 272:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 273:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 == CapSense_scanFreqIndex)
 274:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 275:Generated_Source\PSoC4/CapSense_INT.c ****             {
 276:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Disable sensor */
 277:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_CSDDisconnectSns(curSnsIOPtr);
 278:Generated_Source\PSoC4/CapSense_INT.c ****             }
 279:Generated_Source\PSoC4/CapSense_INT.c **** 
 280:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 281:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 282:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 283:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Scan the next channel */
 284:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsNextFrequencyScan();
 285:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 286:Generated_Source\PSoC4/CapSense_INT.c ****                 else
 287:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 288:Generated_Source\PSoC4/CapSense_INT.c ****                      /* All channels are scanned. Set IMO to zero channel */
 289:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 290:Generated_Source\PSoC4/CapSense_INT.c **** 
 291:Generated_Source\PSoC4/CapSense_INT.c ****                     #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 292:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 293:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 294:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 295:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 296:Generated_Source\PSoC4/CapSense_INT.c **** 
 297:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Scan the next sensor */
 298:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsCSDInitNextScan();
 299:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 300:Generated_Source\PSoC4/CapSense_INT.c ****             #else
 301:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Scan the next sensor */
 302:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDInitNextScan();
 303:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 304:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 305:Generated_Source\PSoC4/CapSense_INT.c ****             }
 306:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 307:Generated_Source\PSoC4/CapSense_INT.c **** 
 308:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 309:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 310:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 311:Generated_Source\PSoC4/CapSense_INT.c ****     }
 312:Generated_Source\PSoC4/CapSense_INT.c **** 
 313:Generated_Source\PSoC4/CapSense_INT.c **** 
 314:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 315:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 316:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostMultiScanGanged
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 7


 317:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 318:Generated_Source\PSoC4/CapSense_INT.c ****     *
 319:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
 320:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the multiple-sensor scanning
 321:Generated_Source\PSoC4/CapSense_INT.c ****     *  implementation for ganged sensors.
 322:Generated_Source\PSoC4/CapSense_INT.c ****     *
 323:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 324:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 325:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_Scan() API for a ganged sensor or the
 326:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() API in the project with ganged sensors.
 327:Generated_Source\PSoC4/CapSense_INT.c ****     *
 328:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed:
 329:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
 330:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 331:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 332:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned).
 333:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Update the Scan Counter.
 334:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Reset the BUSY flag.
 335:Generated_Source\PSoC4/CapSense_INT.c ****     *    7. Enable the CSD interrupt.
 336:Generated_Source\PSoC4/CapSense_INT.c ****     *
 337:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 338:Generated_Source\PSoC4/CapSense_INT.c ****     *  widget has more than one sensor.
 339:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 340:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() APIs are called and the project has
 341:Generated_Source\PSoC4/CapSense_INT.c ****     *  more than one widget.
 342:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 343:Generated_Source\PSoC4/CapSense_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 344:Generated_Source\PSoC4/CapSense_INT.c ****     *
 345:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user
 346:Generated_Source\PSoC4/CapSense_INT.c ****     *  code from macros specified in Component's generated code. Refer to the
 347:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 348:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 349:Generated_Source\PSoC4/CapSense_INT.c ****     *
 350:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 351:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostMultiScanGanged)
 352:Generated_Source\PSoC4/CapSense_INT.c ****     {
 353:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 354:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 355:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 356:Generated_Source\PSoC4/CapSense_INT.c **** 
 357:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 358:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 359:Generated_Source\PSoC4/CapSense_INT.c **** 
 360:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 361:Generated_Source\PSoC4/CapSense_INT.c ****             if ((CapSense_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CapSense_RESULT_VAL1_PTR) &
 362:Generated_Source\PSoC4/CapSense_INT.c ****                                                       CapSense_RESULT_VAL1_BAD_CONVS_MASK) >>
 363:Generated_Source\PSoC4/CapSense_INT.c ****                                                       CapSense_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 364:Generated_Source\PSoC4/CapSense_INT.c ****                                                       (0u < CapSense_badConversionsNum))
 365:Generated_Source\PSoC4/CapSense_INT.c ****             {
 366:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Decrement bad conversions number */
 367:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_badConversionsNum--;
 368:Generated_Source\PSoC4/CapSense_INT.c **** 
 369:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Start the re-scan */
 370:Generated_Source\PSoC4/CapSense_INT.c ****                 CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_AZ0_SKIP_MASK |
 371:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_AZ1_SKIP_MASK |
 372:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_START_MASK);
 373:Generated_Source\PSoC4/CapSense_INT.c ****             }
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 8


 374:Generated_Source\PSoC4/CapSense_INT.c ****             else
 375:Generated_Source\PSoC4/CapSense_INT.c ****             {
 376:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 377:Generated_Source\PSoC4/CapSense_INT.c **** 
 378:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDPostScan();
 379:Generated_Source\PSoC4/CapSense_INT.c **** 
 380:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 381:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 == CapSense_scanFreqIndex)
 382:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 383:Generated_Source\PSoC4/CapSense_INT.c ****             {
 384:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDDisconnectSnsExt((uint32)CapSense_widgetIndex, (uint32)CapSense_senso
 385:Generated_Source\PSoC4/CapSense_INT.c ****             }
 386:Generated_Source\PSoC4/CapSense_INT.c **** 
 387:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 388:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 389:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 390:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Scan the next channel */
 391:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsNextFrequencyScan();
 392:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 393:Generated_Source\PSoC4/CapSense_INT.c ****                 else
 394:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 395:Generated_Source\PSoC4/CapSense_INT.c ****                     /* All channels are scanned. Set IMO to zero channel */
 396:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 397:Generated_Source\PSoC4/CapSense_INT.c **** 
 398:Generated_Source\PSoC4/CapSense_INT.c ****                     #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 399:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 400:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 401:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 402:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 403:Generated_Source\PSoC4/CapSense_INT.c **** 
 404:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Scan the next sensor */
 405:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsCSDInitNextScan();
 406:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 407:Generated_Source\PSoC4/CapSense_INT.c ****             #else
 408:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next sensor */
 409:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDInitNextScan();
 410:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 411:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 412:Generated_Source\PSoC4/CapSense_INT.c ****             }
 413:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 414:Generated_Source\PSoC4/CapSense_INT.c **** 
 415:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 416:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 417:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 418:Generated_Source\PSoC4/CapSense_INT.c ****     }
 419:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 420:Generated_Source\PSoC4/CapSense_INT.c **** 
 421:Generated_Source\PSoC4/CapSense_INT.c **** #else
 422:Generated_Source\PSoC4/CapSense_INT.c **** 
 423:Generated_Source\PSoC4/CapSense_INT.c ****     /* Third-generation HW block part */
 424:Generated_Source\PSoC4/CapSense_INT.c **** 
 425:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 426:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostSingleScan
 427:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 428:Generated_Source\PSoC4/CapSense_INT.c ****     *
 429:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
 430:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the single-sensor scanning implementation.
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 9


 431:Generated_Source\PSoC4/CapSense_INT.c ****     *
 432:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 433:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 434:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_CSDScanExt() function.
 435:Generated_Source\PSoC4/CapSense_INT.c ****     *
 436:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed for Third-generation HW block:
 437:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
 438:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 439:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 440:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Update the Scan Counter.
 441:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Reset the BUSY flag.
 442:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Enable the CSD interrupt.
 443:Generated_Source\PSoC4/CapSense_INT.c ****     *
 444:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed for Fourth-generation HW block:
 445:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Check if the raw data is not noisy.
 446:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 447:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Configure and start the scan for the next frequency if the
 448:Generated_Source\PSoC4/CapSense_INT.c ****     *      multi-frequency is enabled.
 449:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Update the Scan Counter.
 450:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Reset the BUSY flag.
 451:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Enable the CSD interrupt.
 452:Generated_Source\PSoC4/CapSense_INT.c ****     *
 453:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next frequency
 454:Generated_Source\PSoC4/CapSense_INT.c ****     *  channels when multi-frequency scanning is enabled.
 455:Generated_Source\PSoC4/CapSense_INT.c ****     *
 456:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user code
 457:Generated_Source\PSoC4/CapSense_INT.c ****     *  from macros specified in Component's generated code. Refer to the
 458:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 459:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 460:Generated_Source\PSoC4/CapSense_INT.c ****     *
 461:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 462:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostSingleScan)
 463:Generated_Source\PSoC4/CapSense_INT.c ****     {
 464:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 465:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 466:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 467:Generated_Source\PSoC4/CapSense_INT.c **** 
 468:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 469:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 470:Generated_Source\PSoC4/CapSense_INT.c **** 
 471:Generated_Source\PSoC4/CapSense_INT.c ****         /* Read Rawdata */
 472:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDPostScan();
 473:Generated_Source\PSoC4/CapSense_INT.c **** 
 474:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 475:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 476:Generated_Source\PSoC4/CapSense_INT.c ****             {
 477:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Connect Vref Buffer to AMUX bus. Third-generation HW block is enabled */
 478:Generated_Source\PSoC4/CapSense_INT.c ****                 CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CON
 479:Generated_Source\PSoC4/CapSense_INT.c **** 
 480:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsNextFrequencyScan();
 481:Generated_Source\PSoC4/CapSense_INT.c ****             }
 482:Generated_Source\PSoC4/CapSense_INT.c ****             else
 483:Generated_Source\PSoC4/CapSense_INT.c ****             {
 484:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 485:Generated_Source\PSoC4/CapSense_INT.c **** 
 486:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 487:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 10


 488:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 489:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 490:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 491:Generated_Source\PSoC4/CapSense_INT.c **** 
 492:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 493:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Disable Third-generation HW block. Connect Vref Buffer to AMUX bus */
 494:Generated_Source\PSoC4/CapSense_INT.c ****                     #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
 495:Generated_Source\PSoC4/CapSense_INT.c ****                          (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 496:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CMOD_PRECHA
 497:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 498:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECH
 499:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif
 500:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 501:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Connect Vref Buffer to AMUX bus. Third-generation HW block is enabled */
 502:Generated_Source\PSoC4/CapSense_INT.c ****                     CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE
 503:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif
 504:Generated_Source\PSoC4/CapSense_INT.c **** 
 505:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Update Scan Counter */
 506:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_dsRam.scanCounter++;
 507:Generated_Source\PSoC4/CapSense_INT.c **** 
 508:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Sensor is totally scanned. Reset BUSY flag */
 509:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_dsRam.status &= ~(CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
 510:Generated_Source\PSoC4/CapSense_INT.c ****             }
 511:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 512:Generated_Source\PSoC4/CapSense_INT.c ****             {
 513:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 514:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Disable Third-generation HW block. Connect Vref Buffer to AMUX bus */
 515:Generated_Source\PSoC4/CapSense_INT.c ****                     #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
 516:Generated_Source\PSoC4/CapSense_INT.c ****                          (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 517:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CMOD_PRECHA
 518:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 519:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECH
 520:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif
 521:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 522:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Connect Vref Buffer to AMUX bus. Third-generation HW block is enabled */
 523:Generated_Source\PSoC4/CapSense_INT.c ****                     CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE
 524:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif
 525:Generated_Source\PSoC4/CapSense_INT.c **** 
 526:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Update Scan Counter */
 527:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_dsRam.scanCounter++;
 528:Generated_Source\PSoC4/CapSense_INT.c **** 
 529:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Sensor is totally scanned. Reset BUSY flag */
 530:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_dsRam.status &= ~(CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
 531:Generated_Source\PSoC4/CapSense_INT.c ****             }
 532:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 533:Generated_Source\PSoC4/CapSense_INT.c **** 
 534:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 535:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 536:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 537:Generated_Source\PSoC4/CapSense_INT.c ****     }
 538:Generated_Source\PSoC4/CapSense_INT.c **** 
 539:Generated_Source\PSoC4/CapSense_INT.c **** 
 540:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 541:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostMultiScan
 542:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 543:Generated_Source\PSoC4/CapSense_INT.c ****     *
 544:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 11


 545:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the multiple-sensor scanning
 546:Generated_Source\PSoC4/CapSense_INT.c ****     *  implementation.
 547:Generated_Source\PSoC4/CapSense_INT.c ****     *
 548:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 549:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 550:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_Scan() or CapSense_ScanAllWidgets() APIs.
 551:Generated_Source\PSoC4/CapSense_INT.c ****     *
 552:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed:
 553:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
 554:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 555:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 556:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned).
 557:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Update the Scan Counter.
 558:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Reset the BUSY flag.
 559:Generated_Source\PSoC4/CapSense_INT.c ****     *    7. Enable the CSD interrupt.
 560:Generated_Source\PSoC4/CapSense_INT.c ****     *
 561:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 562:Generated_Source\PSoC4/CapSense_INT.c ****     *  widget has more than one sensor.
 563:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 564:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() APIs are called and the project has
 565:Generated_Source\PSoC4/CapSense_INT.c ****     *  more than one widget.
 566:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 567:Generated_Source\PSoC4/CapSense_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 568:Generated_Source\PSoC4/CapSense_INT.c ****     *
 569:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user
 570:Generated_Source\PSoC4/CapSense_INT.c ****     *  code from macros specified in Component's generated code. Refer to the
 571:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 572:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 573:Generated_Source\PSoC4/CapSense_INT.c ****     *
 574:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 575:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostMultiScan)
 576:Generated_Source\PSoC4/CapSense_INT.c ****     {
 577:Generated_Source\PSoC4/CapSense_INT.c ****         /* Declare and initialize ptr to sensor IO structure to appropriate address        */
 578:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_FLASH_IO_STRUCT const *curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
 579:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 580:Generated_Source\PSoC4/CapSense_INT.c ****                                                           + CapSense_sensorIndex;
 581:Generated_Source\PSoC4/CapSense_INT.c **** 
 582:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 583:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 584:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 585:Generated_Source\PSoC4/CapSense_INT.c **** 
 586:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 587:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 588:Generated_Source\PSoC4/CapSense_INT.c **** 
 589:Generated_Source\PSoC4/CapSense_INT.c ****          /* Read Rawdata */
 590:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDPostScan();
 591:Generated_Source\PSoC4/CapSense_INT.c **** 
 592:Generated_Source\PSoC4/CapSense_INT.c ****         /* Connect Vref Buffer to AMUX bus */
 593:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CONFIG_CSD_
 594:Generated_Source\PSoC4/CapSense_INT.c **** 
 595:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 596:Generated_Source\PSoC4/CapSense_INT.c ****             /* Disable sensor when all frequency channels are scanned */
 597:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 == CapSense_scanFreqIndex)
 598:Generated_Source\PSoC4/CapSense_INT.c ****             {
 599:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Disable sensor */
 600:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_CSDDisconnectSns(curSnsIOPtr);
 601:Generated_Source\PSoC4/CapSense_INT.c ****             }
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 12


 602:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 603:Generated_Source\PSoC4/CapSense_INT.c ****             /* Disable sensor */
 604:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_CSDDisconnectSns(curSnsIOPtr);
 605:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 606:Generated_Source\PSoC4/CapSense_INT.c **** 
 607:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 608:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 609:Generated_Source\PSoC4/CapSense_INT.c ****             {
 610:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next channel */
 611:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsNextFrequencyScan();
 612:Generated_Source\PSoC4/CapSense_INT.c ****             }
 613:Generated_Source\PSoC4/CapSense_INT.c ****             else
 614:Generated_Source\PSoC4/CapSense_INT.c ****             {
 615:Generated_Source\PSoC4/CapSense_INT.c ****                  /* All channels are scanned. Set IMO to zero channel */
 616:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 617:Generated_Source\PSoC4/CapSense_INT.c **** 
 618:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 619:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 620:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 621:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 622:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 623:Generated_Source\PSoC4/CapSense_INT.c **** 
 624:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next sensor */
 625:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDInitNextScan();
 626:Generated_Source\PSoC4/CapSense_INT.c ****             }
 627:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 628:Generated_Source\PSoC4/CapSense_INT.c ****             /* Scan the next sensor */
 629:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDInitNextScan();
 630:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 631:Generated_Source\PSoC4/CapSense_INT.c **** 
 632:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 633:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 634:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 635:Generated_Source\PSoC4/CapSense_INT.c ****     }
 636:Generated_Source\PSoC4/CapSense_INT.c **** 
 637:Generated_Source\PSoC4/CapSense_INT.c **** 
 638:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 639:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 640:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostMultiScanGanged
 641:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 642:Generated_Source\PSoC4/CapSense_INT.c ****     *
 643:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
 644:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the multiple-sensor scanning
 645:Generated_Source\PSoC4/CapSense_INT.c ****     *  implementation for ganged sensors.
 646:Generated_Source\PSoC4/CapSense_INT.c ****     *
 647:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 648:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 649:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_Scan() API for a ganged sensor or the
 650:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() API in the project with ganged sensors.
 651:Generated_Source\PSoC4/CapSense_INT.c ****     *
 652:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed:
 653:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
 654:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 655:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 656:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned).
 657:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Update the Scan Counter.
 658:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Reset the BUSY flag.
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 13


 659:Generated_Source\PSoC4/CapSense_INT.c ****     *    7. Enable the CSD interrupt.
 660:Generated_Source\PSoC4/CapSense_INT.c ****     *
 661:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 662:Generated_Source\PSoC4/CapSense_INT.c ****     *  widget has more than one sensor.
 663:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 664:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() APIs are called and the project has
 665:Generated_Source\PSoC4/CapSense_INT.c ****     *  more than one widget.
 666:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 667:Generated_Source\PSoC4/CapSense_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 668:Generated_Source\PSoC4/CapSense_INT.c ****     *
 669:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user
 670:Generated_Source\PSoC4/CapSense_INT.c ****     *  code from macros specified in Component's generated code. Refer to the
 671:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 672:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 673:Generated_Source\PSoC4/CapSense_INT.c ****     *
 674:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 675:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostMultiScanGanged)
 676:Generated_Source\PSoC4/CapSense_INT.c ****     {
 677:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 678:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 679:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 680:Generated_Source\PSoC4/CapSense_INT.c **** 
 681:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 682:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 683:Generated_Source\PSoC4/CapSense_INT.c **** 
 684:Generated_Source\PSoC4/CapSense_INT.c ****          /* Read Rawdata */
 685:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDPostScan();
 686:Generated_Source\PSoC4/CapSense_INT.c **** 
 687:Generated_Source\PSoC4/CapSense_INT.c ****         /* Connect Vref Buffer to AMUX bus */
 688:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CONFIG_CSD_
 689:Generated_Source\PSoC4/CapSense_INT.c **** 
 690:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 691:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 == CapSense_scanFreqIndex)
 692:Generated_Source\PSoC4/CapSense_INT.c ****             {
 693:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDDisconnectSnsExt((uint32)CapSense_widgetIndex, (uint32)CapSense_senso
 694:Generated_Source\PSoC4/CapSense_INT.c ****             }
 695:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 696:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDDisconnectSnsExt((uint32)CapSense_widgetIndex, (uint32)CapSense_sensorInd
 697:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 698:Generated_Source\PSoC4/CapSense_INT.c **** 
 699:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 700:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 701:Generated_Source\PSoC4/CapSense_INT.c ****             {
 702:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next channel */
 703:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsNextFrequencyScan();
 704:Generated_Source\PSoC4/CapSense_INT.c ****             }
 705:Generated_Source\PSoC4/CapSense_INT.c ****             else
 706:Generated_Source\PSoC4/CapSense_INT.c ****             {
 707:Generated_Source\PSoC4/CapSense_INT.c ****                 /* All channels are scanned. Set IMO to zero channel */
 708:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 709:Generated_Source\PSoC4/CapSense_INT.c **** 
 710:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 711:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 712:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 713:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 714:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 715:Generated_Source\PSoC4/CapSense_INT.c **** 
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 14


 716:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next sensor */
 717:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDInitNextScan();
 718:Generated_Source\PSoC4/CapSense_INT.c ****             }
 719:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 720:Generated_Source\PSoC4/CapSense_INT.c ****              /* Scan the next sensor */
 721:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDInitNextScan();
 722:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 723:Generated_Source\PSoC4/CapSense_INT.c **** 
 724:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 725:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 726:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 727:Generated_Source\PSoC4/CapSense_INT.c ****     }
 728:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 729:Generated_Source\PSoC4/CapSense_INT.c **** 
 730:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 731:Generated_Source\PSoC4/CapSense_INT.c **** 
 732:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN)) */
 733:Generated_Source\PSoC4/CapSense_INT.c **** 
 734:Generated_Source\PSoC4/CapSense_INT.c **** /** \}
 735:Generated_Source\PSoC4/CapSense_INT.c ****  * \endcond */
 736:Generated_Source\PSoC4/CapSense_INT.c **** 
 737:Generated_Source\PSoC4/CapSense_INT.c **** 
 738:Generated_Source\PSoC4/CapSense_INT.c **** #if ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN))
 739:Generated_Source\PSoC4/CapSense_INT.c **** 
 740:Generated_Source\PSoC4/CapSense_INT.c **** /*******************************************************************************
 741:Generated_Source\PSoC4/CapSense_INT.c **** * Function Name: CapSense_SsCSDPostScan
 742:Generated_Source\PSoC4/CapSense_INT.c **** ****************************************************************************//**
 743:Generated_Source\PSoC4/CapSense_INT.c **** *
 744:Generated_Source\PSoC4/CapSense_INT.c **** * \brief
 745:Generated_Source\PSoC4/CapSense_INT.c **** *   This function reads rawdata and releases required HW resources after scan.
 746:Generated_Source\PSoC4/CapSense_INT.c **** *
 747:Generated_Source\PSoC4/CapSense_INT.c **** * \details
 748:Generated_Source\PSoC4/CapSense_INT.c **** *   This function performs following tasks after scan:
 749:Generated_Source\PSoC4/CapSense_INT.c **** *   - Reads SlotResult from Raw Counter;
 750:Generated_Source\PSoC4/CapSense_INT.c **** *   - Inits bad Conversions number;
 751:Generated_Source\PSoC4/CapSense_INT.c **** *   - Disconnects Vrefhi from AMUBUF positive input;
 752:Generated_Source\PSoC4/CapSense_INT.c **** *   - Disconnects AMUBUF output from CSDBUSB with sych PHI2+HSCMP;
 753:Generated_Source\PSoC4/CapSense_INT.c **** *   - Opens HCBV and HCBG switches.
 754:Generated_Source\PSoC4/CapSense_INT.c **** *
 755:Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
 756:Generated_Source\PSoC4/CapSense_INT.c **** static void CapSense_SsCSDPostScan(void)
 757:Generated_Source\PSoC4/CapSense_INT.c **** {
  27              		.loc 1 757 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 758:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 759:Generated_Source\PSoC4/CapSense_INT.c **** 
 760:Generated_Source\PSoC4/CapSense_INT.c ****         uint32 tmpRawData;
 761:Generated_Source\PSoC4/CapSense_INT.c ****         uint32 tmpMaxCount;
 762:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 763:Generated_Source\PSoC4/CapSense_INT.c ****                                             CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2Wd
  32              		.loc 1 763 0
  33 0000 0F4B     		ldr	r3, .L4
  34 0002 1B78     		ldrb	r3, [r3]
 762:Generated_Source\PSoC4/CapSense_INT.c ****                                             CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2Wd
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 15


  35              		.loc 1 762 0
  36 0004 2C22     		movs	r2, #44
  37 0006 5343     		muls	r3, r2
  38 0008 0E4A     		ldr	r2, .L4+4
  39 000a D318     		adds	r3, r2, r3
  40 000c 5B68     		ldr	r3, [r3, #4]
  41              	.LVL0:
 764:Generated_Source\PSoC4/CapSense_INT.c **** 
 765:Generated_Source\PSoC4/CapSense_INT.c ****         /* Read SlotResult from Raw Counter */
 766:Generated_Source\PSoC4/CapSense_INT.c ****         tmpRawData = CapSense_RESULT_VAL1_VALUE_MASK & CY_GET_REG32(CapSense_COUNTER_PTR);
  42              		.loc 1 766 0
  43 000e 0E4A     		ldr	r2, .L4+8
  44 0010 1168     		ldr	r1, [r2]
  45 0012 0A04     		lsls	r2, r1, #16
  46 0014 120C     		lsrs	r2, r2, #16
  47              	.LVL1:
 767:Generated_Source\PSoC4/CapSense_INT.c **** 
 768:Generated_Source\PSoC4/CapSense_INT.c ****         tmpMaxCount = ((1uL << ptrWdgt->resolution) - 1uL);
  48              		.loc 1 768 0
  49 0016 1888     		ldrh	r0, [r3]
  50 0018 0123     		movs	r3, #1
  51              	.LVL2:
  52 001a 8340     		lsls	r3, r3, r0
  53 001c 013B     		subs	r3, r3, #1
  54              	.LVL3:
 769:Generated_Source\PSoC4/CapSense_INT.c ****         if(tmpRawData < tmpMaxCount)
  55              		.loc 1 769 0
  56 001e 9A42     		cmp	r2, r3
  57 0020 06D2     		bcs	.L2
 770:Generated_Source\PSoC4/CapSense_INT.c ****         {
 771:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] = LO16(tmpRawData);
  58              		.loc 1 771 0
  59 0022 0A4B     		ldr	r3, .L4+12
  60              	.LVL4:
  61 0024 1A68     		ldr	r2, [r3]
  62              	.LVL5:
  63 0026 0A4B     		ldr	r3, .L4+16
  64 0028 1B78     		ldrb	r3, [r3]
  65 002a 5B00     		lsls	r3, r3, #1
  66 002c D152     		strh	r1, [r2, r3]
  67 002e 05E0     		b	.L1
  68              	.LVL6:
  69              	.L2:
 772:Generated_Source\PSoC4/CapSense_INT.c ****         }
 773:Generated_Source\PSoC4/CapSense_INT.c ****         else
 774:Generated_Source\PSoC4/CapSense_INT.c ****         {
 775:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] = LO16(tmpMaxCount);
  70              		.loc 1 775 0
  71 0030 064A     		ldr	r2, .L4+12
  72              	.LVL7:
  73 0032 1168     		ldr	r1, [r2]
  74              	.LVL8:
  75 0034 064A     		ldr	r2, .L4+16
  76 0036 1278     		ldrb	r2, [r2]
  77 0038 5200     		lsls	r2, r2, #1
  78 003a 8B52     		strh	r3, [r1, r2]
  79              	.LVL9:
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 16


  80              	.L1:
 776:Generated_Source\PSoC4/CapSense_INT.c ****         }
 777:Generated_Source\PSoC4/CapSense_INT.c **** 
 778:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 779:Generated_Source\PSoC4/CapSense_INT.c ****             /* Init bad Conversions number */
 780:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_badConversionsNum = CapSense_BAD_CONVERSIONS_NUM;
 781:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 782:Generated_Source\PSoC4/CapSense_INT.c **** 
 783:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 784:Generated_Source\PSoC4/CapSense_INT.c ****             /* Open HCBV and HCBG switches */
 785:Generated_Source\PSoC4/CapSense_INT.c ****             CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR, CapSense_SW_SHIELD_SEL_SW_HCBV_STATIC_OPEN |
 786:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SW_SHIELD_SEL_SW_HCBG_STATIC_
 787:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 788:Generated_Source\PSoC4/CapSense_INT.c **** 
 789:Generated_Source\PSoC4/CapSense_INT.c ****     #else
 790:Generated_Source\PSoC4/CapSense_INT.c **** 
 791:Generated_Source\PSoC4/CapSense_INT.c ****         /* Read SlotResult from Raw Counter */
 792:Generated_Source\PSoC4/CapSense_INT.c ****        CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] = (uint16)CY_GET_REG32(CapSense_COUNTER_P
 793:Generated_Source\PSoC4/CapSense_INT.c **** 
 794:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 795:Generated_Source\PSoC4/CapSense_INT.c **** }
  81              		.loc 1 795 0
  82              		@ sp needed
  83 003c 7047     		bx	lr
  84              	.L5:
  85 003e C046     		.align	2
  86              	.L4:
  87 0040 00000000 		.word	CapSense_widgetIndex
  88 0044 00000000 		.word	CapSense_dsFlash
  89 0048 D0000B40 		.word	1074462928
  90 004c 00000000 		.word	CapSense_curRamSnsPtr
  91 0050 00000000 		.word	CapSense_scanFreqIndex
  92              		.cfi_endproc
  93              	.LFE3:
  94              		.size	CapSense_SsCSDPostScan, .-CapSense_SsCSDPostScan
  95              		.section	.text.CapSense_SsCSDInitNextScan,"ax",%progbits
  96              		.align	2
  97              		.code	16
  98              		.thumb_func
  99              		.type	CapSense_SsCSDInitNextScan, %function
 100              	CapSense_SsCSDInitNextScan:
 101              	.LFB4:
 796:Generated_Source\PSoC4/CapSense_INT.c **** 
 797:Generated_Source\PSoC4/CapSense_INT.c **** 
 798:Generated_Source\PSoC4/CapSense_INT.c **** /*******************************************************************************
 799:Generated_Source\PSoC4/CapSense_INT.c **** * Function Name: CapSense_SsCSDInitNextScan
 800:Generated_Source\PSoC4/CapSense_INT.c **** ****************************************************************************//**
 801:Generated_Source\PSoC4/CapSense_INT.c **** *
 802:Generated_Source\PSoC4/CapSense_INT.c **** * \brief
 803:Generated_Source\PSoC4/CapSense_INT.c **** *   This function initializes the next sensor scan.
 804:Generated_Source\PSoC4/CapSense_INT.c **** *
 805:Generated_Source\PSoC4/CapSense_INT.c **** * \details
 806:Generated_Source\PSoC4/CapSense_INT.c **** *   The function increments the sensor index, updates sense clock for matrix
 807:Generated_Source\PSoC4/CapSense_INT.c **** *   or touchpad widgets only, sets up Compensation IDAC, enables the sensor and
 808:Generated_Source\PSoC4/CapSense_INT.c **** *   scans it. When all the sensors are scanned it continues to set up the next widget
 809:Generated_Source\PSoC4/CapSense_INT.c **** *   until all the widgets are scanned. The CSD block is disabled when all the widgets are
 810:Generated_Source\PSoC4/CapSense_INT.c **** *   scanned.
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 17


 811:Generated_Source\PSoC4/CapSense_INT.c **** *
 812:Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
 813:Generated_Source\PSoC4/CapSense_INT.c **** static void CapSense_SsCSDInitNextScan(void)
 814:Generated_Source\PSoC4/CapSense_INT.c **** {
 102              		.loc 1 814 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106 0000 70B5     		push	{r4, r5, r6, lr}
 107              		.cfi_def_cfa_offset 16
 108              		.cfi_offset 4, -16
 109              		.cfi_offset 5, -12
 110              		.cfi_offset 6, -8
 111              		.cfi_offset 14, -4
 815:Generated_Source\PSoC4/CapSense_INT.c ****     /* Declare and initialize ptr to widget and sensor structures to appropriate address */
 816:Generated_Source\PSoC4/CapSense_INT.c ****     #if (((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) || \
 817:Generated_Source\PSoC4/CapSense_INT.c ****           (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)) || \
 818:Generated_Source\PSoC4/CapSense_INT.c ****           (((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) && \
 819:Generated_Source\PSoC4/CapSense_INT.c ****           (CapSense_ENABLE == CapSense_CSDV2) && \
 820:Generated_Source\PSoC4/CapSense_INT.c ****           (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN))))
 821:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 822:Generated_Source\PSoC4/CapSense_INT.c ****                                                         CapSense_dsFlash.wdgtArray[CapSense_widgetI
 112              		.loc 1 822 0
 113 0002 234C     		ldr	r4, .L10
 114 0004 2278     		ldrb	r2, [r4]
 821:Generated_Source\PSoC4/CapSense_INT.c ****                                                         CapSense_dsFlash.wdgtArray[CapSense_widgetI
 115              		.loc 1 821 0
 116 0006 2349     		ldr	r1, .L10+4
 117 0008 2C23     		movs	r3, #44
 118 000a 5A43     		muls	r2, r3
 119 000c 8A18     		adds	r2, r1, r2
 120 000e 5068     		ldr	r0, [r2, #4]
 121              	.LVL10:
 823:Generated_Source\PSoC4/CapSense_INT.c ****     #endif
 824:Generated_Source\PSoC4/CapSense_INT.c **** 
 825:Generated_Source\PSoC4/CapSense_INT.c ****     /* Check if all the sensors are scanned in widget */
 826:Generated_Source\PSoC4/CapSense_INT.c ****     if (((uint8)CapSense_dsFlash.wdgtArray[(CapSense_widgetIndex)].totalNumSns - 1u) > CapSense_sen
 122              		.loc 1 826 0
 123 0010 2278     		ldrb	r2, [r4]
 124 0012 5343     		muls	r3, r2
 125 0014 CB18     		adds	r3, r1, r3
 126 0016 1A7E     		ldrb	r2, [r3, #24]
 127 0018 013A     		subs	r2, r2, #1
 128 001a 1F4B     		ldr	r3, .L10+8
 129 001c 1B78     		ldrb	r3, [r3]
 130 001e DBB2     		uxtb	r3, r3
 131 0020 9A42     		cmp	r2, r3
 132 0022 1DD9     		bls	.L7
 827:Generated_Source\PSoC4/CapSense_INT.c ****     {
 828:Generated_Source\PSoC4/CapSense_INT.c ****         /* Increment sensor index to configure next sensor in widget */
 829:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_sensorIndex++;
 133              		.loc 1 829 0
 134 0024 1C4C     		ldr	r4, .L10+8
 135 0026 2378     		ldrb	r3, [r4]
 136 0028 0133     		adds	r3, r3, #1
 137 002a DBB2     		uxtb	r3, r3
 138 002c 2370     		strb	r3, [r4]
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 18


 830:Generated_Source\PSoC4/CapSense_INT.c **** 
 831:Generated_Source\PSoC4/CapSense_INT.c ****         /* Update global pointer to CapSense_RAM_SNS_STRUCT to current sensor  */
 832:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_curRamSnsPtr = (CapSense_RAM_SNS_STRUCT *)
 139              		.loc 1 832 0
 140 002e 184D     		ldr	r5, .L10
 141 0030 2B78     		ldrb	r3, [r5]
 833:Generated_Source\PSoC4/CapSense_INT.c ****                                                   CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].
 142              		.loc 1 833 0
 143 0032 2C22     		movs	r2, #44
 144 0034 5343     		muls	r3, r2
 145 0036 CB18     		adds	r3, r1, r3
 146 0038 9968     		ldr	r1, [r3, #8]
 834:Generated_Source\PSoC4/CapSense_INT.c ****                                                   + CapSense_sensorIndex;
 147              		.loc 1 834 0
 148 003a 2378     		ldrb	r3, [r4]
 149 003c DBB2     		uxtb	r3, r3
 150 003e 9A00     		lsls	r2, r3, #2
 151 0040 D318     		adds	r3, r2, r3
 152 0042 5A00     		lsls	r2, r3, #1
 153 0044 8A18     		adds	r2, r1, r2
 832:Generated_Source\PSoC4/CapSense_INT.c ****                                                   CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].
 154              		.loc 1 832 0
 155 0046 154B     		ldr	r3, .L10+12
 156 0048 1A60     		str	r2, [r3]
 835:Generated_Source\PSoC4/CapSense_INT.c **** 
 836:Generated_Source\PSoC4/CapSense_INT.c ****         /* Configure clock divider to row or column */
 837:Generated_Source\PSoC4/CapSense_INT.c ****         #if ((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) && \
 838:Generated_Source\PSoC4/CapSense_INT.c ****              (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN))
 839:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDConfigClock();
 840:Generated_Source\PSoC4/CapSense_INT.c **** 
 841:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_CSDV2)
 842:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Set up scanning resolution */
 843:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDCalculateScanDuration(ptrWdgt);
 844:Generated_Source\PSoC4/CapSense_INT.c ****             #endif
 845:Generated_Source\PSoC4/CapSense_INT.c ****         #endif
 846:Generated_Source\PSoC4/CapSense_INT.c **** 
 847:Generated_Source\PSoC4/CapSense_INT.c ****         /* Setup Compensation IDAC for next sensor in widget */
 848:Generated_Source\PSoC4/CapSense_INT.c ****         #if ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) || \
 849:Generated_Source\PSoC4/CapSense_INT.c ****              (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN))
 850:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDSetUpIdacs(ptrWdgt);
 157              		.loc 1 850 0
 158 004a FFF7FEFF 		bl	CapSense_SsCSDSetUpIdacs
 159              	.LVL11:
 851:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) || \
 852:Generated_Source\PSoC4/CapSense_INT.c ****                    (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)) */
 853:Generated_Source\PSoC4/CapSense_INT.c **** 
 854:Generated_Source\PSoC4/CapSense_INT.c ****         /* Enable sensor */
 855:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDConnectSensorExt((uint32)CapSense_widgetIndex, (uint32)CapSense_sensorIndex);
 160              		.loc 1 855 0
 161 004e 2878     		ldrb	r0, [r5]
 162 0050 C0B2     		uxtb	r0, r0
 163 0052 2178     		ldrb	r1, [r4]
 164 0054 C9B2     		uxtb	r1, r1
 165 0056 FFF7FEFF 		bl	CapSense_SsCSDConnectSensorExt
 166              	.LVL12:
 856:Generated_Source\PSoC4/CapSense_INT.c **** 
 857:Generated_Source\PSoC4/CapSense_INT.c ****         /* Proceed scanning */
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 19


 858:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDStartSample();
 167              		.loc 1 858 0
 168 005a FFF7FEFF 		bl	CapSense_SsCSDStartSample
 169              	.LVL13:
 170 005e 16E0     		b	.L6
 171              	.LVL14:
 172              	.L7:
 859:Generated_Source\PSoC4/CapSense_INT.c ****     }
 860:Generated_Source\PSoC4/CapSense_INT.c ****     /* Call scan next widget API if requested, if not, complete the scan  */
 861:Generated_Source\PSoC4/CapSense_INT.c ****     else
 862:Generated_Source\PSoC4/CapSense_INT.c ****     {
 863:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_sensorIndex = 0u;
 173              		.loc 1 863 0
 174 0060 0022     		movs	r2, #0
 175 0062 0D4B     		ldr	r3, .L10+8
 176 0064 1A70     		strb	r2, [r3]
 864:Generated_Source\PSoC4/CapSense_INT.c **** 
 865:Generated_Source\PSoC4/CapSense_INT.c ****         /* Current widget is totally scanned. Reset WIDGET BUSY flag */
 866:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_dsRam.status &= ~CapSense_WDGT_SW_STS_BUSY;
 177              		.loc 1 866 0
 178 0066 0E4A     		ldr	r2, .L10+16
 179 0068 D168     		ldr	r1, [r2, #12]
 180 006a 0E4B     		ldr	r3, .L10+20
 181 006c 0B40     		ands	r3, r1
 182 006e D360     		str	r3, [r2, #12]
 867:Generated_Source\PSoC4/CapSense_INT.c **** 
 868:Generated_Source\PSoC4/CapSense_INT.c ****         /* Check if all the widgets have been scanned */
 869:Generated_Source\PSoC4/CapSense_INT.c ****         if (CapSense_ENABLE == CapSense_requestScanAllWidget)
 183              		.loc 1 869 0
 184 0070 0D4B     		ldr	r3, .L10+24
 185 0072 1B78     		ldrb	r3, [r3]
 186 0074 012B     		cmp	r3, #1
 187 0076 02D1     		bne	.L9
 870:Generated_Source\PSoC4/CapSense_INT.c ****         {
 871:Generated_Source\PSoC4/CapSense_INT.c ****             /* Configure and begin scanning next widget */
 872:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsPostAllWidgetsScan();
 188              		.loc 1 872 0
 189 0078 FFF7FEFF 		bl	CapSense_SsPostAllWidgetsScan
 190              	.LVL15:
 191 007c 07E0     		b	.L6
 192              	.LVL16:
 193              	.L9:
 873:Generated_Source\PSoC4/CapSense_INT.c ****         }
 874:Generated_Source\PSoC4/CapSense_INT.c ****         else
 875:Generated_Source\PSoC4/CapSense_INT.c ****         {
 876:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 877:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
 878:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Disable the CSD block */
 879:Generated_Source\PSoC4/CapSense_INT.c ****                     CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
 880:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 881:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Disable the CSD block. Connect Vref Buffer to AMUX bus */
 882:Generated_Source\PSoC4/CapSense_INT.c ****                     #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
 883:Generated_Source\PSoC4/CapSense_INT.c ****                          (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 884:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CMOD_PRECHA
 885:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 886:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECH
 887:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 20


 888:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif
 889:Generated_Source\PSoC4/CapSense_INT.c ****             #endif
 890:Generated_Source\PSoC4/CapSense_INT.c **** 
 891:Generated_Source\PSoC4/CapSense_INT.c ****             /* All widgets are totally scanned. Reset BUSY flag */
 892:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
 194              		.loc 1 892 0
 195 007e 084B     		ldr	r3, .L10+16
 196 0080 DA68     		ldr	r2, [r3, #12]
 197 0082 8021     		movs	r1, #128
 198 0084 8A43     		bics	r2, r1
 199 0086 DA60     		str	r2, [r3, #12]
 893:Generated_Source\PSoC4/CapSense_INT.c **** 
 894:Generated_Source\PSoC4/CapSense_INT.c ****             /* Update scan Counter */
 895:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_dsRam.scanCounter++;
 200              		.loc 1 895 0
 201 0088 1A89     		ldrh	r2, [r3, #8]
 202 008a 0132     		adds	r2, r2, #1
 203 008c 1A81     		strh	r2, [r3, #8]
 204              	.LVL17:
 205              	.L6:
 896:Generated_Source\PSoC4/CapSense_INT.c ****         }
 897:Generated_Source\PSoC4/CapSense_INT.c ****     }
 898:Generated_Source\PSoC4/CapSense_INT.c **** }
 206              		.loc 1 898 0
 207              		@ sp needed
 208 008e 70BD     		pop	{r4, r5, r6, pc}
 209              	.L11:
 210              		.align	2
 211              	.L10:
 212 0090 00000000 		.word	CapSense_widgetIndex
 213 0094 00000000 		.word	CapSense_dsFlash
 214 0098 00000000 		.word	CapSense_sensorIndex
 215 009c 00000000 		.word	CapSense_curRamSnsPtr
 216 00a0 00000000 		.word	CapSense_dsRam
 217 00a4 FFFFFEFF 		.word	-65537
 218 00a8 00000000 		.word	CapSense_requestScanAllWidget
 219              		.cfi_endproc
 220              	.LFE4:
 221              		.size	CapSense_SsCSDInitNextScan, .-CapSense_SsCSDInitNextScan
 222              		.section	.text.CapSense_CSDPostSingleScan,"ax",%progbits
 223              		.align	2
 224              		.global	CapSense_CSDPostSingleScan
 225              		.code	16
 226              		.thumb_func
 227              		.type	CapSense_CSDPostSingleScan, %function
 228              	CapSense_CSDPostSingleScan:
 229              	.LFB1:
 122:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 230              		.loc 1 122 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234 0000 10B5     		push	{r4, lr}
 235              		.cfi_def_cfa_offset 8
 236              		.cfi_offset 4, -8
 237              		.cfi_offset 14, -4
 128:Generated_Source\PSoC4/CapSense_INT.c **** 
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 21


 238              		.loc 1 128 0
 239 0002 8322     		movs	r2, #131
 240 0004 5200     		lsls	r2, r2, #1
 241 0006 064B     		ldr	r3, .L13
 242 0008 1A60     		str	r2, [r3]
 148:Generated_Source\PSoC4/CapSense_INT.c **** 
 243              		.loc 1 148 0
 244 000a FFF7FEFF 		bl	CapSense_SsCSDPostScan
 245              	.LVL18:
 186:Generated_Source\PSoC4/CapSense_INT.c **** 
 246              		.loc 1 186 0
 247 000e 054B     		ldr	r3, .L13+4
 248 0010 1A89     		ldrh	r2, [r3, #8]
 249 0012 0132     		adds	r2, r2, #1
 250 0014 1A81     		strh	r2, [r3, #8]
 189:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 251              		.loc 1 189 0
 252 0016 D968     		ldr	r1, [r3, #12]
 253 0018 034A     		ldr	r2, .L13+8
 254 001a 0A40     		ands	r2, r1
 255 001c DA60     		str	r2, [r3, #12]
 199:Generated_Source\PSoC4/CapSense_INT.c **** 
 256              		.loc 1 199 0
 257              		@ sp needed
 258 001e 10BD     		pop	{r4, pc}
 259              	.L14:
 260              		.align	2
 261              	.L13:
 262 0020 F0000B40 		.word	1074462960
 263 0024 00000000 		.word	CapSense_dsRam
 264 0028 7FFFFEFF 		.word	-65665
 265              		.cfi_endproc
 266              	.LFE1:
 267              		.size	CapSense_CSDPostSingleScan, .-CapSense_CSDPostSingleScan
 268              		.section	.text.CapSense_CSDPostMultiScan,"ax",%progbits
 269              		.align	2
 270              		.global	CapSense_CSDPostMultiScan
 271              		.code	16
 272              		.thumb_func
 273              		.type	CapSense_CSDPostMultiScan, %function
 274              	CapSense_CSDPostMultiScan:
 275              	.LFB2:
 238:Generated_Source\PSoC4/CapSense_INT.c ****         /* Declare and initialize ptr to sensor IO structure to appropriate address */
 276              		.loc 1 238 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280 0000 10B5     		push	{r4, lr}
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 4, -8
 283              		.cfi_offset 14, -4
 240:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 284              		.loc 1 240 0
 285 0002 0C4B     		ldr	r3, .L16
 286 0004 1B78     		ldrb	r3, [r3]
 241:Generated_Source\PSoC4/CapSense_INT.c ****                                                           + CapSense_sensorIndex;
 287              		.loc 1 241 0
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 22


 288 0006 2C22     		movs	r2, #44
 289 0008 5343     		muls	r3, r2
 290 000a 0B4A     		ldr	r2, .L16+4
 291 000c 9C58     		ldr	r4, [r3, r2]
 242:Generated_Source\PSoC4/CapSense_INT.c **** 
 292              		.loc 1 242 0
 293 000e 0B4B     		ldr	r3, .L16+8
 294 0010 1A78     		ldrb	r2, [r3]
 295 0012 D2B2     		uxtb	r2, r2
 296 0014 D100     		lsls	r1, r2, #3
 297 0016 8A1A     		subs	r2, r1, r2
 298 0018 9300     		lsls	r3, r2, #2
 240:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 299              		.loc 1 240 0
 300 001a E418     		adds	r4, r4, r3
 301              	.LVL19:
 249:Generated_Source\PSoC4/CapSense_INT.c **** 
 302              		.loc 1 249 0
 303 001c 8322     		movs	r2, #131
 304 001e 5200     		lsls	r2, r2, #1
 305 0020 074B     		ldr	r3, .L16+12
 306 0022 1A60     		str	r2, [r3]
 269:Generated_Source\PSoC4/CapSense_INT.c **** 
 307              		.loc 1 269 0
 308 0024 FFF7FEFF 		bl	CapSense_SsCSDPostScan
 309              	.LVL20:
 277:Generated_Source\PSoC4/CapSense_INT.c ****             }
 310              		.loc 1 277 0
 311 0028 2000     		movs	r0, r4
 312 002a FFF7FEFF 		bl	CapSense_CSDDisconnectSns
 313              	.LVL21:
 302:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 314              		.loc 1 302 0
 315 002e FFF7FEFF 		bl	CapSense_SsCSDInitNextScan
 316              	.LVL22:
 311:Generated_Source\PSoC4/CapSense_INT.c **** 
 317              		.loc 1 311 0
 318              		@ sp needed
 319              	.LVL23:
 320 0032 10BD     		pop	{r4, pc}
 321              	.L17:
 322              		.align	2
 323              	.L16:
 324 0034 00000000 		.word	CapSense_widgetIndex
 325 0038 00000000 		.word	CapSense_dsFlash
 326 003c 00000000 		.word	CapSense_sensorIndex
 327 0040 F0000B40 		.word	1074462960
 328              		.cfi_endproc
 329              	.LFE2:
 330              		.size	CapSense_CSDPostMultiScan, .-CapSense_CSDPostMultiScan
 331              		.text
 332              	.Letext0:
 333              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 334              		.file 3 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 335              		.file 4 "Generated_Source\\PSoC4\\CapSense_SmartSense_LL.h"
 336              		.file 5 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 337              		.file 6 "Generated_Source\\PSoC4\\CapSense_Sensing.h"
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 23


 338              		.file 7 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.h"
 339              		.section	.debug_info,"",%progbits
 340              	.Ldebug_info0:
 341 0000 11080000 		.4byte	0x811
 342 0004 0400     		.2byte	0x4
 343 0006 00000000 		.4byte	.Ldebug_abbrev0
 344 000a 04       		.byte	0x4
 345 000b 01       		.uleb128 0x1
 346 000c F3000000 		.4byte	.LASF119
 347 0010 0C       		.byte	0xc
 348 0011 5A030000 		.4byte	.LASF120
 349 0015 85020000 		.4byte	.LASF121
 350 0019 00000000 		.4byte	.Ldebug_ranges0+0
 351 001d 00000000 		.4byte	0
 352 0021 00000000 		.4byte	.Ldebug_line0
 353 0025 02       		.uleb128 0x2
 354 0026 01       		.byte	0x1
 355 0027 06       		.byte	0x6
 356 0028 02060000 		.4byte	.LASF0
 357 002c 02       		.uleb128 0x2
 358 002d 01       		.byte	0x1
 359 002e 08       		.byte	0x8
 360 002f 80030000 		.4byte	.LASF1
 361 0033 02       		.uleb128 0x2
 362 0034 02       		.byte	0x2
 363 0035 05       		.byte	0x5
 364 0036 AA000000 		.4byte	.LASF2
 365 003a 02       		.uleb128 0x2
 366 003b 02       		.byte	0x2
 367 003c 07       		.byte	0x7
 368 003d CA040000 		.4byte	.LASF3
 369 0041 02       		.uleb128 0x2
 370 0042 04       		.byte	0x4
 371 0043 05       		.byte	0x5
 372 0044 C7020000 		.4byte	.LASF4
 373 0048 02       		.uleb128 0x2
 374 0049 04       		.byte	0x4
 375 004a 07       		.byte	0x7
 376 004b 69050000 		.4byte	.LASF5
 377 004f 02       		.uleb128 0x2
 378 0050 08       		.byte	0x8
 379 0051 05       		.byte	0x5
 380 0052 99010000 		.4byte	.LASF6
 381 0056 02       		.uleb128 0x2
 382 0057 08       		.byte	0x8
 383 0058 07       		.byte	0x7
 384 0059 0B040000 		.4byte	.LASF7
 385 005d 03       		.uleb128 0x3
 386 005e 04       		.byte	0x4
 387 005f 05       		.byte	0x5
 388 0060 696E7400 		.ascii	"int\000"
 389 0064 02       		.uleb128 0x2
 390 0065 04       		.byte	0x4
 391 0066 07       		.byte	0x7
 392 0067 2F040000 		.4byte	.LASF8
 393 006b 04       		.uleb128 0x4
 394 006c 1D020000 		.4byte	.LASF9
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 24


 395 0070 02       		.byte	0x2
 396 0071 FB01     		.2byte	0x1fb
 397 0073 2C000000 		.4byte	0x2c
 398 0077 04       		.uleb128 0x4
 399 0078 06020000 		.4byte	.LASF10
 400 007c 02       		.byte	0x2
 401 007d FC01     		.2byte	0x1fc
 402 007f 3A000000 		.4byte	0x3a
 403 0083 04       		.uleb128 0x4
 404 0084 57050000 		.4byte	.LASF11
 405 0088 02       		.byte	0x2
 406 0089 FD01     		.2byte	0x1fd
 407 008b 48000000 		.4byte	0x48
 408 008f 02       		.uleb128 0x2
 409 0090 04       		.byte	0x4
 410 0091 04       		.byte	0x4
 411 0092 47020000 		.4byte	.LASF12
 412 0096 02       		.uleb128 0x2
 413 0097 08       		.byte	0x8
 414 0098 04       		.byte	0x4
 415 0099 7B050000 		.4byte	.LASF13
 416 009d 02       		.uleb128 0x2
 417 009e 01       		.byte	0x1
 418 009f 08       		.byte	0x8
 419 00a0 A4020000 		.4byte	.LASF14
 420 00a4 05       		.uleb128 0x5
 421 00a5 6B000000 		.4byte	0x6b
 422 00a9 04       		.uleb128 0x4
 423 00aa 64040000 		.4byte	.LASF15
 424 00ae 02       		.byte	0x2
 425 00af A702     		.2byte	0x2a7
 426 00b1 B5000000 		.4byte	0xb5
 427 00b5 05       		.uleb128 0x5
 428 00b6 83000000 		.4byte	0x83
 429 00ba 04       		.uleb128 0x4
 430 00bb B7030000 		.4byte	.LASF16
 431 00bf 03       		.byte	0x3
 432 00c0 2201     		.2byte	0x122
 433 00c2 77000000 		.4byte	0x77
 434 00c6 04       		.uleb128 0x4
 435 00c7 82040000 		.4byte	.LASF17
 436 00cb 03       		.byte	0x3
 437 00cc 2601     		.2byte	0x126
 438 00ce 6B000000 		.4byte	0x6b
 439 00d2 06       		.uleb128 0x6
 440 00d3 0C       		.byte	0xc
 441 00d4 04       		.byte	0x4
 442 00d5 75       		.byte	0x75
 443 00d6 2F010000 		.4byte	0x12f
 444 00da 07       		.uleb128 0x7
 445 00db 3C040000 		.4byte	.LASF18
 446 00df 04       		.byte	0x4
 447 00e0 7A       		.byte	0x7a
 448 00e1 77000000 		.4byte	0x77
 449 00e5 00       		.byte	0
 450 00e6 07       		.uleb128 0x7
 451 00e7 4E040000 		.4byte	.LASF19
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 25


 452 00eb 04       		.byte	0x4
 453 00ec 7E       		.byte	0x7e
 454 00ed 77000000 		.4byte	0x77
 455 00f1 02       		.byte	0x2
 456 00f2 07       		.uleb128 0x7
 457 00f3 BE010000 		.4byte	.LASF20
 458 00f7 04       		.byte	0x4
 459 00f8 82       		.byte	0x82
 460 00f9 77000000 		.4byte	0x77
 461 00fd 04       		.byte	0x4
 462 00fe 07       		.uleb128 0x7
 463 00ff C5010000 		.4byte	.LASF21
 464 0103 04       		.byte	0x4
 465 0104 86       		.byte	0x86
 466 0105 77000000 		.4byte	0x77
 467 0109 06       		.byte	0x6
 468 010a 07       		.uleb128 0x7
 469 010b CC010000 		.4byte	.LASF22
 470 010f 04       		.byte	0x4
 471 0110 8A       		.byte	0x8a
 472 0111 77000000 		.4byte	0x77
 473 0115 08       		.byte	0x8
 474 0116 07       		.uleb128 0x7
 475 0117 48030000 		.4byte	.LASF23
 476 011b 04       		.byte	0x4
 477 011c 8E       		.byte	0x8e
 478 011d 6B000000 		.4byte	0x6b
 479 0121 0A       		.byte	0xa
 480 0122 07       		.uleb128 0x7
 481 0123 EE010000 		.4byte	.LASF24
 482 0127 04       		.byte	0x4
 483 0128 92       		.byte	0x92
 484 0129 6B000000 		.4byte	0x6b
 485 012d 0B       		.byte	0xb
 486 012e 00       		.byte	0
 487 012f 08       		.uleb128 0x8
 488 0130 B8060000 		.4byte	.LASF25
 489 0134 04       		.byte	0x4
 490 0135 93       		.byte	0x93
 491 0136 D2000000 		.4byte	0xd2
 492 013a 06       		.uleb128 0x6
 493 013b 14       		.byte	0x14
 494 013c 05       		.byte	0x5
 495 013d AD       		.byte	0xad
 496 013e DF010000 		.4byte	0x1df
 497 0142 07       		.uleb128 0x7
 498 0143 BF040000 		.4byte	.LASF26
 499 0147 05       		.byte	0x5
 500 0148 B2       		.byte	0xb2
 501 0149 77000000 		.4byte	0x77
 502 014d 00       		.byte	0
 503 014e 07       		.uleb128 0x7
 504 014f 17030000 		.4byte	.LASF27
 505 0153 05       		.byte	0x5
 506 0154 B7       		.byte	0xb7
 507 0155 BA000000 		.4byte	0xba
 508 0159 02       		.byte	0x2
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 26


 509 015a 07       		.uleb128 0x7
 510 015b F5010000 		.4byte	.LASF28
 511 015f 05       		.byte	0x5
 512 0160 BC       		.byte	0xbc
 513 0161 6B000000 		.4byte	0x6b
 514 0165 04       		.byte	0x4
 515 0166 07       		.uleb128 0x7
 516 0167 33050000 		.4byte	.LASF29
 517 016b 05       		.byte	0x5
 518 016c C1       		.byte	0xc1
 519 016d 6B000000 		.4byte	0x6b
 520 0171 05       		.byte	0x5
 521 0172 07       		.uleb128 0x7
 522 0173 28030000 		.4byte	.LASF30
 523 0177 05       		.byte	0x5
 524 0178 C7       		.byte	0xc7
 525 0179 6B000000 		.4byte	0x6b
 526 017d 06       		.byte	0x6
 527 017e 07       		.uleb128 0x7
 528 017f BD000000 		.4byte	.LASF31
 529 0183 05       		.byte	0x5
 530 0184 CD       		.byte	0xcd
 531 0185 6B000000 		.4byte	0x6b
 532 0189 07       		.byte	0x7
 533 018a 07       		.uleb128 0x7
 534 018b 65000000 		.4byte	.LASF32
 535 018f 05       		.byte	0x5
 536 0190 D4       		.byte	0xd4
 537 0191 C6000000 		.4byte	0xc6
 538 0195 08       		.byte	0x8
 539 0196 07       		.uleb128 0x7
 540 0197 8D000000 		.4byte	.LASF33
 541 019b 05       		.byte	0x5
 542 019c DB       		.byte	0xdb
 543 019d DF010000 		.4byte	0x1df
 544 01a1 09       		.byte	0x9
 545 01a2 07       		.uleb128 0x7
 546 01a3 4B000000 		.4byte	.LASF34
 547 01a7 05       		.byte	0x5
 548 01a8 E0       		.byte	0xe0
 549 01a9 6B000000 		.4byte	0x6b
 550 01ad 0A       		.byte	0xa
 551 01ae 07       		.uleb128 0x7
 552 01af 29020000 		.4byte	.LASF35
 553 01b3 05       		.byte	0x5
 554 01b4 E8       		.byte	0xe8
 555 01b5 77000000 		.4byte	0x77
 556 01b9 0C       		.byte	0xc
 557 01ba 07       		.uleb128 0x7
 558 01bb B1010000 		.4byte	.LASF36
 559 01bf 05       		.byte	0x5
 560 01c0 ED       		.byte	0xed
 561 01c1 6B000000 		.4byte	0x6b
 562 01c5 0E       		.byte	0xe
 563 01c6 07       		.uleb128 0x7
 564 01c7 43060000 		.4byte	.LASF37
 565 01cb 05       		.byte	0x5
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 27


 566 01cc F3       		.byte	0xf3
 567 01cd 77000000 		.4byte	0x77
 568 01d1 10       		.byte	0x10
 569 01d2 07       		.uleb128 0x7
 570 01d3 50050000 		.4byte	.LASF38
 571 01d7 05       		.byte	0x5
 572 01d8 F8       		.byte	0xf8
 573 01d9 77000000 		.4byte	0x77
 574 01dd 12       		.byte	0x12
 575 01de 00       		.byte	0
 576 01df 09       		.uleb128 0x9
 577 01e0 6B000000 		.4byte	0x6b
 578 01e4 EF010000 		.4byte	0x1ef
 579 01e8 0A       		.uleb128 0xa
 580 01e9 EF010000 		.4byte	0x1ef
 581 01ed 00       		.byte	0
 582 01ee 00       		.byte	0
 583 01ef 02       		.uleb128 0x2
 584 01f0 04       		.byte	0x4
 585 01f1 07       		.byte	0x7
 586 01f2 C8000000 		.4byte	.LASF39
 587 01f6 08       		.uleb128 0x8
 588 01f7 75060000 		.4byte	.LASF40
 589 01fb 05       		.byte	0x5
 590 01fc F9       		.byte	0xf9
 591 01fd 3A010000 		.4byte	0x13a
 592 0201 06       		.uleb128 0x6
 593 0202 16       		.byte	0x16
 594 0203 05       		.byte	0x5
 595 0204 FE       		.byte	0xfe
 596 0205 C0020000 		.4byte	0x2c0
 597 0209 0B       		.uleb128 0xb
 598 020a BF040000 		.4byte	.LASF26
 599 020e 05       		.byte	0x5
 600 020f 0301     		.2byte	0x103
 601 0211 77000000 		.4byte	0x77
 602 0215 00       		.byte	0
 603 0216 0B       		.uleb128 0xb
 604 0217 17030000 		.4byte	.LASF27
 605 021b 05       		.byte	0x5
 606 021c 0801     		.2byte	0x108
 607 021e BA000000 		.4byte	0xba
 608 0222 02       		.byte	0x2
 609 0223 0B       		.uleb128 0xb
 610 0224 F5010000 		.4byte	.LASF28
 611 0228 05       		.byte	0x5
 612 0229 0D01     		.2byte	0x10d
 613 022b 6B000000 		.4byte	0x6b
 614 022f 04       		.byte	0x4
 615 0230 0B       		.uleb128 0xb
 616 0231 33050000 		.4byte	.LASF29
 617 0235 05       		.byte	0x5
 618 0236 1201     		.2byte	0x112
 619 0238 6B000000 		.4byte	0x6b
 620 023c 05       		.byte	0x5
 621 023d 0B       		.uleb128 0xb
 622 023e 28030000 		.4byte	.LASF30
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 28


 623 0242 05       		.byte	0x5
 624 0243 1801     		.2byte	0x118
 625 0245 6B000000 		.4byte	0x6b
 626 0249 06       		.byte	0x6
 627 024a 0B       		.uleb128 0xb
 628 024b BD000000 		.4byte	.LASF31
 629 024f 05       		.byte	0x5
 630 0250 1E01     		.2byte	0x11e
 631 0252 6B000000 		.4byte	0x6b
 632 0256 07       		.byte	0x7
 633 0257 0B       		.uleb128 0xb
 634 0258 65000000 		.4byte	.LASF32
 635 025c 05       		.byte	0x5
 636 025d 2501     		.2byte	0x125
 637 025f C6000000 		.4byte	0xc6
 638 0263 08       		.byte	0x8
 639 0264 0B       		.uleb128 0xb
 640 0265 8D000000 		.4byte	.LASF33
 641 0269 05       		.byte	0x5
 642 026a 2C01     		.2byte	0x12c
 643 026c DF010000 		.4byte	0x1df
 644 0270 09       		.byte	0x9
 645 0271 0B       		.uleb128 0xb
 646 0272 4B000000 		.4byte	.LASF34
 647 0276 05       		.byte	0x5
 648 0277 3101     		.2byte	0x131
 649 0279 6B000000 		.4byte	0x6b
 650 027d 0A       		.byte	0xa
 651 027e 0B       		.uleb128 0xb
 652 027f 29020000 		.4byte	.LASF35
 653 0283 05       		.byte	0x5
 654 0284 3901     		.2byte	0x139
 655 0286 77000000 		.4byte	0x77
 656 028a 0C       		.byte	0xc
 657 028b 0B       		.uleb128 0xb
 658 028c B1010000 		.4byte	.LASF36
 659 0290 05       		.byte	0x5
 660 0291 3E01     		.2byte	0x13e
 661 0293 6B000000 		.4byte	0x6b
 662 0297 0E       		.byte	0xe
 663 0298 0B       		.uleb128 0xb
 664 0299 43060000 		.4byte	.LASF37
 665 029d 05       		.byte	0x5
 666 029e 4401     		.2byte	0x144
 667 02a0 77000000 		.4byte	0x77
 668 02a4 10       		.byte	0x10
 669 02a5 0B       		.uleb128 0xb
 670 02a6 50050000 		.4byte	.LASF38
 671 02aa 05       		.byte	0x5
 672 02ab 4901     		.2byte	0x149
 673 02ad 77000000 		.4byte	0x77
 674 02b1 12       		.byte	0x12
 675 02b2 0B       		.uleb128 0xb
 676 02b3 6C060000 		.4byte	.LASF41
 677 02b7 05       		.byte	0x5
 678 02b8 4E01     		.2byte	0x14e
 679 02ba C0020000 		.4byte	0x2c0
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 29


 680 02be 14       		.byte	0x14
 681 02bf 00       		.byte	0
 682 02c0 09       		.uleb128 0x9
 683 02c1 77000000 		.4byte	0x77
 684 02c5 D0020000 		.4byte	0x2d0
 685 02c9 0A       		.uleb128 0xa
 686 02ca EF010000 		.4byte	0x1ef
 687 02ce 00       		.byte	0
 688 02cf 00       		.byte	0
 689 02d0 04       		.uleb128 0x4
 690 02d1 09070000 		.4byte	.LASF42
 691 02d5 05       		.byte	0x5
 692 02d6 4F01     		.2byte	0x14f
 693 02d8 01020000 		.4byte	0x201
 694 02dc 0C       		.uleb128 0xc
 695 02dd 16       		.byte	0x16
 696 02de 05       		.byte	0x5
 697 02df 5501     		.2byte	0x155
 698 02e1 F3020000 		.4byte	0x2f3
 699 02e5 0B       		.uleb128 0xb
 700 02e6 5E060000 		.4byte	.LASF43
 701 02ea 05       		.byte	0x5
 702 02eb 5A01     		.2byte	0x15a
 703 02ed D0020000 		.4byte	0x2d0
 704 02f1 00       		.byte	0
 705 02f2 00       		.byte	0
 706 02f3 04       		.uleb128 0x4
 707 02f4 59020000 		.4byte	.LASF44
 708 02f8 05       		.byte	0x5
 709 02f9 5B01     		.2byte	0x15b
 710 02fb DC020000 		.4byte	0x2dc
 711 02ff 0C       		.uleb128 0xc
 712 0300 0A       		.byte	0xa
 713 0301 05       		.byte	0x5
 714 0302 6101     		.2byte	0x161
 715 0304 57030000 		.4byte	0x357
 716 0308 0D       		.uleb128 0xd
 717 0309 72617700 		.ascii	"raw\000"
 718 030d 05       		.byte	0x5
 719 030e 6601     		.2byte	0x166
 720 0310 C0020000 		.4byte	0x2c0
 721 0314 00       		.byte	0
 722 0315 0B       		.uleb128 0xb
 723 0316 3B000000 		.4byte	.LASF45
 724 031a 05       		.byte	0x5
 725 031b 6B01     		.2byte	0x16b
 726 031d C0020000 		.4byte	0x2c0
 727 0321 02       		.byte	0x2
 728 0322 0B       		.uleb128 0xb
 729 0323 9C050000 		.4byte	.LASF46
 730 0327 05       		.byte	0x5
 731 0328 7101     		.2byte	0x171
 732 032a DF010000 		.4byte	0x1df
 733 032e 04       		.byte	0x4
 734 032f 0B       		.uleb128 0xb
 735 0330 70000000 		.4byte	.LASF47
 736 0334 05       		.byte	0x5
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 30


 737 0335 7601     		.2byte	0x176
 738 0337 BA000000 		.4byte	0xba
 739 033b 06       		.byte	0x6
 740 033c 0B       		.uleb128 0xb
 741 033d D0050000 		.4byte	.LASF48
 742 0341 05       		.byte	0x5
 743 0342 7B01     		.2byte	0x17b
 744 0344 57030000 		.4byte	0x357
 745 0348 08       		.byte	0x8
 746 0349 0B       		.uleb128 0xb
 747 034a 85010000 		.4byte	.LASF49
 748 034e 05       		.byte	0x5
 749 034f 8001     		.2byte	0x180
 750 0351 DF010000 		.4byte	0x1df
 751 0355 09       		.byte	0x9
 752 0356 00       		.byte	0
 753 0357 09       		.uleb128 0x9
 754 0358 C6000000 		.4byte	0xc6
 755 035c 67030000 		.4byte	0x367
 756 0360 0A       		.uleb128 0xa
 757 0361 EF010000 		.4byte	0x1ef
 758 0365 00       		.byte	0
 759 0366 00       		.byte	0
 760 0367 04       		.uleb128 0x4
 761 0368 6A040000 		.4byte	.LASF50
 762 036c 05       		.byte	0x5
 763 036d 8101     		.2byte	0x181
 764 036f FF020000 		.4byte	0x2ff
 765 0373 0C       		.uleb128 0xc
 766 0374 32       		.byte	0x32
 767 0375 05       		.byte	0x5
 768 0376 8701     		.2byte	0x187
 769 0378 8A030000 		.4byte	0x38a
 770 037c 0B       		.uleb128 0xb
 771 037d 5E060000 		.4byte	.LASF43
 772 0381 05       		.byte	0x5
 773 0382 8C01     		.2byte	0x18c
 774 0384 8A030000 		.4byte	0x38a
 775 0388 00       		.byte	0
 776 0389 00       		.byte	0
 777 038a 09       		.uleb128 0x9
 778 038b 67030000 		.4byte	0x367
 779 038f 9A030000 		.4byte	0x39a
 780 0393 0A       		.uleb128 0xa
 781 0394 EF010000 		.4byte	0x1ef
 782 0398 04       		.byte	0x4
 783 0399 00       		.byte	0
 784 039a 04       		.uleb128 0x4
 785 039b EE030000 		.4byte	.LASF51
 786 039f 05       		.byte	0x5
 787 03a0 8D01     		.2byte	0x18d
 788 03a2 73030000 		.4byte	0x373
 789 03a6 0C       		.uleb128 0xc
 790 03a7 70       		.byte	0x70
 791 03a8 05       		.byte	0x5
 792 03a9 9301     		.2byte	0x193
 793 03ab A7040000 		.4byte	0x4a7
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 31


 794 03af 0B       		.uleb128 0xb
 795 03b0 EA000000 		.4byte	.LASF52
 796 03b4 05       		.byte	0x5
 797 03b5 9A01     		.2byte	0x19a
 798 03b7 77000000 		.4byte	0x77
 799 03bb 00       		.byte	0
 800 03bc 0B       		.uleb128 0xb
 801 03bd FD010000 		.4byte	.LASF53
 802 03c1 05       		.byte	0x5
 803 03c2 9F01     		.2byte	0x19f
 804 03c4 77000000 		.4byte	0x77
 805 03c8 02       		.byte	0x2
 806 03c9 0B       		.uleb128 0xb
 807 03ca A4040000 		.4byte	.LASF54
 808 03ce 05       		.byte	0x5
 809 03cf A401     		.2byte	0x1a4
 810 03d1 77000000 		.4byte	0x77
 811 03d5 04       		.byte	0x4
 812 03d6 0B       		.uleb128 0xb
 813 03d7 33030000 		.4byte	.LASF55
 814 03db 05       		.byte	0x5
 815 03dc AA01     		.2byte	0x1aa
 816 03de 77000000 		.4byte	0x77
 817 03e2 06       		.byte	0x6
 818 03e3 0B       		.uleb128 0xb
 819 03e4 27050000 		.4byte	.LASF56
 820 03e8 05       		.byte	0x5
 821 03e9 AF01     		.2byte	0x1af
 822 03eb 77000000 		.4byte	0x77
 823 03ef 08       		.byte	0x8
 824 03f0 0B       		.uleb128 0xb
 825 03f1 9D040000 		.4byte	.LASF57
 826 03f5 05       		.byte	0x5
 827 03f6 B401     		.2byte	0x1b4
 828 03f8 B5000000 		.4byte	0xb5
 829 03fc 0C       		.byte	0xc
 830 03fd 0B       		.uleb128 0xb
 831 03fe 43040000 		.4byte	.LASF58
 832 0402 05       		.byte	0x5
 833 0403 BA01     		.2byte	0x1ba
 834 0405 A7040000 		.4byte	0x4a7
 835 0409 10       		.byte	0x10
 836 040a 0B       		.uleb128 0xb
 837 040b 4F030000 		.4byte	.LASF59
 838 040f 05       		.byte	0x5
 839 0410 C101     		.2byte	0x1c1
 840 0412 A7040000 		.4byte	0x4a7
 841 0416 14       		.byte	0x14
 842 0417 0B       		.uleb128 0xb
 843 0418 EA060000 		.4byte	.LASF60
 844 041c 05       		.byte	0x5
 845 041d D101     		.2byte	0x1d1
 846 041f DF010000 		.4byte	0x1df
 847 0423 18       		.byte	0x18
 848 0424 0B       		.uleb128 0xb
 849 0425 8E010000 		.4byte	.LASF61
 850 0429 05       		.byte	0x5
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 32


 851 042a D701     		.2byte	0x1d7
 852 042c 77000000 		.4byte	0x77
 853 0430 1A       		.byte	0x1a
 854 0431 0B       		.uleb128 0xb
 855 0432 1D050000 		.4byte	.LASF62
 856 0436 05       		.byte	0x5
 857 0437 DC01     		.2byte	0x1dc
 858 0439 6B000000 		.4byte	0x6b
 859 043d 1C       		.byte	0x1c
 860 043e 0B       		.uleb128 0xb
 861 043f 16000000 		.4byte	.LASF63
 862 0443 05       		.byte	0x5
 863 0444 E101     		.2byte	0x1e1
 864 0446 F3020000 		.4byte	0x2f3
 865 044a 1E       		.byte	0x1e
 866 044b 0B       		.uleb128 0xb
 867 044c F7040000 		.4byte	.LASF64
 868 0450 05       		.byte	0x5
 869 0451 E601     		.2byte	0x1e6
 870 0453 9A030000 		.4byte	0x39a
 871 0457 34       		.byte	0x34
 872 0458 0B       		.uleb128 0xb
 873 0459 91060000 		.4byte	.LASF65
 874 045d 05       		.byte	0x5
 875 045e EB01     		.2byte	0x1eb
 876 0460 6B000000 		.4byte	0x6b
 877 0464 66       		.byte	0x66
 878 0465 0B       		.uleb128 0xb
 879 0466 75020000 		.4byte	.LASF66
 880 046a 05       		.byte	0x5
 881 046b F001     		.2byte	0x1f0
 882 046d 6B000000 		.4byte	0x6b
 883 0471 67       		.byte	0x67
 884 0472 0B       		.uleb128 0xb
 885 0473 AC040000 		.4byte	.LASF67
 886 0477 05       		.byte	0x5
 887 0478 F501     		.2byte	0x1f5
 888 047a 77000000 		.4byte	0x77
 889 047e 68       		.byte	0x68
 890 047f 0B       		.uleb128 0xb
 891 0480 1F000000 		.4byte	.LASF68
 892 0484 05       		.byte	0x5
 893 0485 FA01     		.2byte	0x1fa
 894 0487 C0020000 		.4byte	0x2c0
 895 048b 6A       		.byte	0x6a
 896 048c 0B       		.uleb128 0xb
 897 048d 5E050000 		.4byte	.LASF69
 898 0491 05       		.byte	0x5
 899 0492 FF01     		.2byte	0x1ff
 900 0494 6B000000 		.4byte	0x6b
 901 0498 6C       		.byte	0x6c
 902 0499 0B       		.uleb128 0xb
 903 049a 55040000 		.4byte	.LASF70
 904 049e 05       		.byte	0x5
 905 049f 0402     		.2byte	0x204
 906 04a1 6B000000 		.4byte	0x6b
 907 04a5 6D       		.byte	0x6d
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 33


 908 04a6 00       		.byte	0
 909 04a7 09       		.uleb128 0x9
 910 04a8 83000000 		.4byte	0x83
 911 04ac B7040000 		.4byte	0x4b7
 912 04b0 0A       		.uleb128 0xa
 913 04b1 EF010000 		.4byte	0x1ef
 914 04b5 00       		.byte	0
 915 04b6 00       		.byte	0
 916 04b7 04       		.uleb128 0x4
 917 04b8 3C050000 		.4byte	.LASF71
 918 04bc 05       		.byte	0x5
 919 04bd 0502     		.2byte	0x205
 920 04bf A6030000 		.4byte	0x3a6
 921 04c3 0C       		.uleb128 0xc
 922 04c4 1C       		.byte	0x1c
 923 04c5 05       		.byte	0x5
 924 04c6 0B02     		.2byte	0x20b
 925 04c8 42050000 		.4byte	0x542
 926 04cc 0B       		.uleb128 0xb
 927 04cd B4000000 		.4byte	.LASF72
 928 04d1 05       		.byte	0x5
 929 04d2 1002     		.2byte	0x210
 930 04d4 42050000 		.4byte	0x542
 931 04d8 00       		.byte	0
 932 04d9 0B       		.uleb128 0xb
 933 04da 95000000 		.4byte	.LASF73
 934 04de 05       		.byte	0x5
 935 04df 1502     		.2byte	0x215
 936 04e1 42050000 		.4byte	0x542
 937 04e5 04       		.byte	0x4
 938 04e6 0B       		.uleb128 0xb
 939 04e7 C5050000 		.4byte	.LASF74
 940 04eb 05       		.byte	0x5
 941 04ec 1A02     		.2byte	0x21a
 942 04ee 42050000 		.4byte	0x542
 943 04f2 08       		.byte	0x8
 944 04f3 0B       		.uleb128 0xb
 945 04f4 23020000 		.4byte	.LASF75
 946 04f8 05       		.byte	0x5
 947 04f9 1F02     		.2byte	0x21f
 948 04fb 42050000 		.4byte	0x542
 949 04ff 0C       		.byte	0xc
 950 0500 0B       		.uleb128 0xb
 951 0501 A7010000 		.4byte	.LASF76
 952 0505 05       		.byte	0x5
 953 0506 2402     		.2byte	0x224
 954 0508 83000000 		.4byte	0x83
 955 050c 10       		.byte	0x10
 956 050d 0B       		.uleb128 0xb
 957 050e CB050000 		.4byte	.LASF77
 958 0512 05       		.byte	0x5
 959 0513 2902     		.2byte	0x229
 960 0515 83000000 		.4byte	0x83
 961 0519 14       		.byte	0x14
 962 051a 0B       		.uleb128 0xb
 963 051b A4050000 		.4byte	.LASF78
 964 051f 05       		.byte	0x5
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 34


 965 0520 2E02     		.2byte	0x22e
 966 0522 6B000000 		.4byte	0x6b
 967 0526 18       		.byte	0x18
 968 0527 0B       		.uleb128 0xb
 969 0528 E7020000 		.4byte	.LASF79
 970 052c 05       		.byte	0x5
 971 052d 3302     		.2byte	0x233
 972 052f 6B000000 		.4byte	0x6b
 973 0533 19       		.byte	0x19
 974 0534 0B       		.uleb128 0xb
 975 0535 D0020000 		.4byte	.LASF80
 976 0539 05       		.byte	0x5
 977 053a 3802     		.2byte	0x238
 978 053c 6B000000 		.4byte	0x6b
 979 0540 1A       		.byte	0x1a
 980 0541 00       		.byte	0
 981 0542 0E       		.uleb128 0xe
 982 0543 04       		.byte	0x4
 983 0544 A9000000 		.4byte	0xa9
 984 0548 04       		.uleb128 0x4
 985 0549 EF020000 		.4byte	.LASF81
 986 054d 05       		.byte	0x5
 987 054e 3902     		.2byte	0x239
 988 0550 C3040000 		.4byte	0x4c3
 989 0554 0C       		.uleb128 0xc
 990 0555 2C       		.byte	0x2c
 991 0556 05       		.byte	0x5
 992 0557 6C02     		.2byte	0x26c
 993 0559 07060000 		.4byte	0x607
 994 055d 0B       		.uleb128 0xb
 995 055e DD060000 		.4byte	.LASF82
 996 0562 05       		.byte	0x5
 997 0563 7502     		.2byte	0x275
 998 0565 07060000 		.4byte	0x607
 999 0569 00       		.byte	0
 1000 056a 0B       		.uleb128 0xb
 1001 056b 81000000 		.4byte	.LASF83
 1002 056f 05       		.byte	0x5
 1003 0570 7C02     		.2byte	0x27c
 1004 0572 0E060000 		.4byte	0x60e
 1005 0576 04       		.byte	0x4
 1006 0577 0B       		.uleb128 0xb
 1007 0578 F7050000 		.4byte	.LASF84
 1008 057c 05       		.byte	0x5
 1009 057d 8202     		.2byte	0x282
 1010 057f 10060000 		.4byte	0x610
 1011 0583 08       		.byte	0x8
 1012 0584 0B       		.uleb128 0xb
 1013 0585 0E060000 		.4byte	.LASF85
 1014 0589 05       		.byte	0x5
 1015 058a 8802     		.2byte	0x288
 1016 058c 0E060000 		.4byte	0x60e
 1017 0590 0C       		.byte	0xc
 1018 0591 0B       		.uleb128 0xb
 1019 0592 0D020000 		.4byte	.LASF86
 1020 0596 05       		.byte	0x5
 1021 0597 8F02     		.2byte	0x28f
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 35


 1022 0599 16060000 		.4byte	0x616
 1023 059d 10       		.byte	0x10
 1024 059e 0B       		.uleb128 0xb
 1025 059f 22040000 		.4byte	.LASF87
 1026 05a3 05       		.byte	0x5
 1027 05a4 9402     		.2byte	0x294
 1028 05a6 83000000 		.4byte	0x83
 1029 05aa 14       		.byte	0x14
 1030 05ab 0B       		.uleb128 0xb
 1031 05ac 75000000 		.4byte	.LASF88
 1032 05b0 05       		.byte	0x5
 1033 05b1 9B02     		.2byte	0x29b
 1034 05b3 77000000 		.4byte	0x77
 1035 05b7 18       		.byte	0x18
 1036 05b8 0B       		.uleb128 0xb
 1037 05b9 D6020000 		.4byte	.LASF89
 1038 05bd 05       		.byte	0x5
 1039 05be A202     		.2byte	0x2a2
 1040 05c0 6B000000 		.4byte	0x6b
 1041 05c4 1A       		.byte	0x1a
 1042 05c5 0B       		.uleb128 0xb
 1043 05c6 20030000 		.4byte	.LASF90
 1044 05ca 05       		.byte	0x5
 1045 05cb AC02     		.2byte	0x2ac
 1046 05cd 6B000000 		.4byte	0x6b
 1047 05d1 1B       		.byte	0x1b
 1048 05d2 0B       		.uleb128 0xb
 1049 05d3 2F000000 		.4byte	.LASF91
 1050 05d7 05       		.byte	0x5
 1051 05d8 B102     		.2byte	0x2b1
 1052 05da 77000000 		.4byte	0x77
 1053 05de 1C       		.byte	0x1c
 1054 05df 0B       		.uleb128 0xb
 1055 05e0 8E030000 		.4byte	.LASF92
 1056 05e4 05       		.byte	0x5
 1057 05e5 BA02     		.2byte	0x2ba
 1058 05e7 83000000 		.4byte	0x83
 1059 05eb 20       		.byte	0x20
 1060 05ec 0B       		.uleb128 0xb
 1061 05ed 41070000 		.4byte	.LASF93
 1062 05f1 05       		.byte	0x5
 1063 05f2 C202     		.2byte	0x2c2
 1064 05f4 1C060000 		.4byte	0x61c
 1065 05f8 24       		.byte	0x24
 1066 05f9 0B       		.uleb128 0xb
 1067 05fa 9B000000 		.4byte	.LASF94
 1068 05fe 05       		.byte	0x5
 1069 05ff C702     		.2byte	0x2c7
 1070 0601 6B000000 		.4byte	0x6b
 1071 0605 28       		.byte	0x28
 1072 0606 00       		.byte	0
 1073 0607 0E       		.uleb128 0xe
 1074 0608 04       		.byte	0x4
 1075 0609 0D060000 		.4byte	0x60d
 1076 060d 0F       		.uleb128 0xf
 1077 060e 10       		.uleb128 0x10
 1078 060f 04       		.byte	0x4
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 36


 1079 0610 0E       		.uleb128 0xe
 1080 0611 04       		.byte	0x4
 1081 0612 67030000 		.4byte	0x367
 1082 0616 0E       		.uleb128 0xe
 1083 0617 04       		.byte	0x4
 1084 0618 6B000000 		.4byte	0x6b
 1085 061c 0E       		.uleb128 0xe
 1086 061d 04       		.byte	0x4
 1087 061e 2F010000 		.4byte	0x12f
 1088 0622 04       		.uleb128 0x4
 1089 0623 D1000000 		.4byte	.LASF95
 1090 0627 05       		.byte	0x5
 1091 0628 C802     		.2byte	0x2c8
 1092 062a 54050000 		.4byte	0x554
 1093 062e 0C       		.uleb128 0xc
 1094 062f 2C       		.byte	0x2c
 1095 0630 05       		.byte	0x5
 1096 0631 CE02     		.2byte	0x2ce
 1097 0633 45060000 		.4byte	0x645
 1098 0637 0B       		.uleb128 0xb
 1099 0638 39060000 		.4byte	.LASF96
 1100 063c 05       		.byte	0x5
 1101 063d D302     		.2byte	0x2d3
 1102 063f 45060000 		.4byte	0x645
 1103 0643 00       		.byte	0
 1104 0644 00       		.byte	0
 1105 0645 09       		.uleb128 0x9
 1106 0646 22060000 		.4byte	0x622
 1107 064a 55060000 		.4byte	0x655
 1108 064e 0A       		.uleb128 0xa
 1109 064f EF010000 		.4byte	0x1ef
 1110 0653 00       		.byte	0
 1111 0654 00       		.byte	0
 1112 0655 04       		.uleb128 0x4
 1113 0656 00000000 		.4byte	.LASF97
 1114 065a 05       		.byte	0x5
 1115 065b D402     		.2byte	0x2d4
 1116 065d 2E060000 		.4byte	0x62e
 1117 0661 02       		.uleb128 0x2
 1118 0662 08       		.byte	0x8
 1119 0663 04       		.byte	0x4
 1120 0664 3C030000 		.4byte	.LASF98
 1121 0668 11       		.uleb128 0x11
 1122 0669 30020000 		.4byte	.LASF102
 1123 066d 01       		.byte	0x1
 1124 066e F402     		.2byte	0x2f4
 1125 0670 00000000 		.4byte	.LFB3
 1126 0674 54000000 		.4byte	.LFE3-.LFB3
 1127 0678 01       		.uleb128 0x1
 1128 0679 9C       		.byte	0x9c
 1129 067a AF060000 		.4byte	0x6af
 1130 067e 12       		.uleb128 0x12
 1131 067f 40000000 		.4byte	.LASF99
 1132 0683 01       		.byte	0x1
 1133 0684 F802     		.2byte	0x2f8
 1134 0686 83000000 		.4byte	0x83
 1135 068a 00000000 		.4byte	.LLST0
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 37


 1136 068e 12       		.uleb128 0x12
 1137 068f 59000000 		.4byte	.LASF100
 1138 0693 01       		.byte	0x1
 1139 0694 F902     		.2byte	0x2f9
 1140 0696 83000000 		.4byte	0x83
 1141 069a 40000000 		.4byte	.LLST1
 1142 069e 12       		.uleb128 0x12
 1143 069f DF020000 		.4byte	.LASF101
 1144 06a3 01       		.byte	0x1
 1145 06a4 FA02     		.2byte	0x2fa
 1146 06a6 AF060000 		.4byte	0x6af
 1147 06aa 80000000 		.4byte	.LLST2
 1148 06ae 00       		.byte	0
 1149 06af 0E       		.uleb128 0xe
 1150 06b0 04       		.byte	0x4
 1151 06b1 B5060000 		.4byte	0x6b5
 1152 06b5 13       		.uleb128 0x13
 1153 06b6 F6010000 		.4byte	0x1f6
 1154 06ba 11       		.uleb128 0x11
 1155 06bb 1E060000 		.4byte	.LASF103
 1156 06bf 01       		.byte	0x1
 1157 06c0 2D03     		.2byte	0x32d
 1158 06c2 00000000 		.4byte	.LFB4
 1159 06c6 AC000000 		.4byte	.LFE4-.LFB4
 1160 06ca 01       		.uleb128 0x1
 1161 06cb 9C       		.byte	0x9c
 1162 06cc 05070000 		.4byte	0x705
 1163 06d0 12       		.uleb128 0x12
 1164 06d1 DF020000 		.4byte	.LASF101
 1165 06d5 01       		.byte	0x1
 1166 06d6 3503     		.2byte	0x335
 1167 06d8 05070000 		.4byte	0x705
 1168 06dc 93000000 		.4byte	.LLST3
 1169 06e0 14       		.uleb128 0x14
 1170 06e1 4E000000 		.4byte	.LVL11
 1171 06e5 D9070000 		.4byte	0x7d9
 1172 06e9 14       		.uleb128 0x14
 1173 06ea 5A000000 		.4byte	.LVL12
 1174 06ee E5070000 		.4byte	0x7e5
 1175 06f2 14       		.uleb128 0x14
 1176 06f3 5E000000 		.4byte	.LVL13
 1177 06f7 F1070000 		.4byte	0x7f1
 1178 06fb 14       		.uleb128 0x14
 1179 06fc 7C000000 		.4byte	.LVL15
 1180 0700 FD070000 		.4byte	0x7fd
 1181 0704 00       		.byte	0
 1182 0705 0E       		.uleb128 0xe
 1183 0706 04       		.byte	0x4
 1184 0707 F6010000 		.4byte	0x1f6
 1185 070b 15       		.uleb128 0x15
 1186 070c D3010000 		.4byte	.LASF104
 1187 0710 01       		.byte	0x1
 1188 0711 79       		.byte	0x79
 1189 0712 00000000 		.4byte	.LFB1
 1190 0716 2C000000 		.4byte	.LFE1-.LFB1
 1191 071a 01       		.uleb128 0x1
 1192 071b 9C       		.byte	0x9c
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 38


 1193 071c 2A070000 		.4byte	0x72a
 1194 0720 14       		.uleb128 0x14
 1195 0721 0E000000 		.4byte	.LVL18
 1196 0725 68060000 		.4byte	0x668
 1197 0729 00       		.byte	0
 1198 072a 15       		.uleb128 0x15
 1199 072b 82050000 		.4byte	.LASF105
 1200 072f 01       		.byte	0x1
 1201 0730 ED       		.byte	0xed
 1202 0731 00000000 		.4byte	.LFB2
 1203 0735 44000000 		.4byte	.LFE2-.LFB2
 1204 0739 01       		.uleb128 0x1
 1205 073a 9C       		.byte	0x9c
 1206 073b 75070000 		.4byte	0x775
 1207 073f 16       		.uleb128 0x16
 1208 0740 4D020000 		.4byte	.LASF106
 1209 0744 01       		.byte	0x1
 1210 0745 F0       		.byte	0xf0
 1211 0746 75070000 		.4byte	0x775
 1212 074a BC000000 		.4byte	.LLST4
 1213 074e 14       		.uleb128 0x14
 1214 074f 28000000 		.4byte	.LVL20
 1215 0753 68060000 		.4byte	0x668
 1216 0757 17       		.uleb128 0x17
 1217 0758 2E000000 		.4byte	.LVL21
 1218 075c 08080000 		.4byte	0x808
 1219 0760 6B070000 		.4byte	0x76b
 1220 0764 18       		.uleb128 0x18
 1221 0765 01       		.uleb128 0x1
 1222 0766 50       		.byte	0x50
 1223 0767 02       		.uleb128 0x2
 1224 0768 74       		.byte	0x74
 1225 0769 00       		.sleb128 0
 1226 076a 00       		.byte	0
 1227 076b 14       		.uleb128 0x14
 1228 076c 32000000 		.4byte	.LVL22
 1229 0770 BA060000 		.4byte	0x6ba
 1230 0774 00       		.byte	0
 1231 0775 0E       		.uleb128 0xe
 1232 0776 04       		.byte	0x4
 1233 0777 7B070000 		.4byte	0x77b
 1234 077b 13       		.uleb128 0x13
 1235 077c 48050000 		.4byte	0x548
 1236 0780 19       		.uleb128 0x19
 1237 0781 08030000 		.4byte	.LASF107
 1238 0785 05       		.byte	0x5
 1239 0786 6804     		.2byte	0x468
 1240 0788 B7040000 		.4byte	0x4b7
 1241 078c 19       		.uleb128 0x19
 1242 078d 4D060000 		.4byte	.LASF108
 1243 0791 05       		.byte	0x5
 1244 0792 6904     		.2byte	0x469
 1245 0794 98070000 		.4byte	0x798
 1246 0798 13       		.uleb128 0x13
 1247 0799 55060000 		.4byte	0x655
 1248 079d 1A       		.uleb128 0x1a
 1249 079e A2030000 		.4byte	.LASF109
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 39


 1250 07a2 06       		.byte	0x6
 1251 07a3 B1       		.byte	0xb1
 1252 07a4 A4000000 		.4byte	0xa4
 1253 07a8 1A       		.uleb128 0x1a
 1254 07a9 F4060000 		.4byte	.LASF110
 1255 07ad 06       		.byte	0x6
 1256 07ae B2       		.byte	0xb2
 1257 07af A4000000 		.4byte	0xa4
 1258 07b3 1A       		.uleb128 0x1a
 1259 07b4 FF040000 		.4byte	.LASF111
 1260 07b8 06       		.byte	0x6
 1261 07b9 B3       		.byte	0xb3
 1262 07ba 6B000000 		.4byte	0x6b
 1263 07be 1A       		.uleb128 0x1a
 1264 07bf AF050000 		.4byte	.LASF112
 1265 07c3 06       		.byte	0x6
 1266 07c4 B5       		.byte	0xb5
 1267 07c5 10060000 		.4byte	0x610
 1268 07c9 1A       		.uleb128 0x1a
 1269 07ca A1060000 		.4byte	.LASF113
 1270 07ce 06       		.byte	0x6
 1271 07cf BC       		.byte	0xbc
 1272 07d0 D4070000 		.4byte	0x7d4
 1273 07d4 13       		.uleb128 0x13
 1274 07d5 6B000000 		.4byte	0x6b
 1275 07d9 1B       		.uleb128 0x1b
 1276 07da DE050000 		.4byte	.LASF114
 1277 07de DE050000 		.4byte	.LASF114
 1278 07e2 07       		.byte	0x7
 1279 07e3 A301     		.2byte	0x1a3
 1280 07e5 1B       		.uleb128 0x1b
 1281 07e6 CF030000 		.4byte	.LASF115
 1282 07ea CF030000 		.4byte	.LASF115
 1283 07ee 07       		.byte	0x7
 1284 07ef B101     		.2byte	0x1b1
 1285 07f1 1B       		.uleb128 0x1b
 1286 07f2 DD040000 		.4byte	.LASF116
 1287 07f6 DD040000 		.4byte	.LASF116
 1288 07fa 07       		.byte	0x7
 1289 07fb A201     		.2byte	0x1a2
 1290 07fd 1C       		.uleb128 0x1c
 1291 07fe A9020000 		.4byte	.LASF117
 1292 0802 A9020000 		.4byte	.LASF117
 1293 0806 06       		.byte	0x6
 1294 0807 83       		.byte	0x83
 1295 0808 1B       		.uleb128 0x1b
 1296 0809 27070000 		.4byte	.LASF118
 1297 080d 27070000 		.4byte	.LASF118
 1298 0811 07       		.byte	0x7
 1299 0812 9201     		.2byte	0x192
 1300 0814 00       		.byte	0
 1301              		.section	.debug_abbrev,"",%progbits
 1302              	.Ldebug_abbrev0:
 1303 0000 01       		.uleb128 0x1
 1304 0001 11       		.uleb128 0x11
 1305 0002 01       		.byte	0x1
 1306 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 40


 1307 0004 0E       		.uleb128 0xe
 1308 0005 13       		.uleb128 0x13
 1309 0006 0B       		.uleb128 0xb
 1310 0007 03       		.uleb128 0x3
 1311 0008 0E       		.uleb128 0xe
 1312 0009 1B       		.uleb128 0x1b
 1313 000a 0E       		.uleb128 0xe
 1314 000b 55       		.uleb128 0x55
 1315 000c 17       		.uleb128 0x17
 1316 000d 11       		.uleb128 0x11
 1317 000e 01       		.uleb128 0x1
 1318 000f 10       		.uleb128 0x10
 1319 0010 17       		.uleb128 0x17
 1320 0011 00       		.byte	0
 1321 0012 00       		.byte	0
 1322 0013 02       		.uleb128 0x2
 1323 0014 24       		.uleb128 0x24
 1324 0015 00       		.byte	0
 1325 0016 0B       		.uleb128 0xb
 1326 0017 0B       		.uleb128 0xb
 1327 0018 3E       		.uleb128 0x3e
 1328 0019 0B       		.uleb128 0xb
 1329 001a 03       		.uleb128 0x3
 1330 001b 0E       		.uleb128 0xe
 1331 001c 00       		.byte	0
 1332 001d 00       		.byte	0
 1333 001e 03       		.uleb128 0x3
 1334 001f 24       		.uleb128 0x24
 1335 0020 00       		.byte	0
 1336 0021 0B       		.uleb128 0xb
 1337 0022 0B       		.uleb128 0xb
 1338 0023 3E       		.uleb128 0x3e
 1339 0024 0B       		.uleb128 0xb
 1340 0025 03       		.uleb128 0x3
 1341 0026 08       		.uleb128 0x8
 1342 0027 00       		.byte	0
 1343 0028 00       		.byte	0
 1344 0029 04       		.uleb128 0x4
 1345 002a 16       		.uleb128 0x16
 1346 002b 00       		.byte	0
 1347 002c 03       		.uleb128 0x3
 1348 002d 0E       		.uleb128 0xe
 1349 002e 3A       		.uleb128 0x3a
 1350 002f 0B       		.uleb128 0xb
 1351 0030 3B       		.uleb128 0x3b
 1352 0031 05       		.uleb128 0x5
 1353 0032 49       		.uleb128 0x49
 1354 0033 13       		.uleb128 0x13
 1355 0034 00       		.byte	0
 1356 0035 00       		.byte	0
 1357 0036 05       		.uleb128 0x5
 1358 0037 35       		.uleb128 0x35
 1359 0038 00       		.byte	0
 1360 0039 49       		.uleb128 0x49
 1361 003a 13       		.uleb128 0x13
 1362 003b 00       		.byte	0
 1363 003c 00       		.byte	0
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 41


 1364 003d 06       		.uleb128 0x6
 1365 003e 13       		.uleb128 0x13
 1366 003f 01       		.byte	0x1
 1367 0040 0B       		.uleb128 0xb
 1368 0041 0B       		.uleb128 0xb
 1369 0042 3A       		.uleb128 0x3a
 1370 0043 0B       		.uleb128 0xb
 1371 0044 3B       		.uleb128 0x3b
 1372 0045 0B       		.uleb128 0xb
 1373 0046 01       		.uleb128 0x1
 1374 0047 13       		.uleb128 0x13
 1375 0048 00       		.byte	0
 1376 0049 00       		.byte	0
 1377 004a 07       		.uleb128 0x7
 1378 004b 0D       		.uleb128 0xd
 1379 004c 00       		.byte	0
 1380 004d 03       		.uleb128 0x3
 1381 004e 0E       		.uleb128 0xe
 1382 004f 3A       		.uleb128 0x3a
 1383 0050 0B       		.uleb128 0xb
 1384 0051 3B       		.uleb128 0x3b
 1385 0052 0B       		.uleb128 0xb
 1386 0053 49       		.uleb128 0x49
 1387 0054 13       		.uleb128 0x13
 1388 0055 38       		.uleb128 0x38
 1389 0056 0B       		.uleb128 0xb
 1390 0057 00       		.byte	0
 1391 0058 00       		.byte	0
 1392 0059 08       		.uleb128 0x8
 1393 005a 16       		.uleb128 0x16
 1394 005b 00       		.byte	0
 1395 005c 03       		.uleb128 0x3
 1396 005d 0E       		.uleb128 0xe
 1397 005e 3A       		.uleb128 0x3a
 1398 005f 0B       		.uleb128 0xb
 1399 0060 3B       		.uleb128 0x3b
 1400 0061 0B       		.uleb128 0xb
 1401 0062 49       		.uleb128 0x49
 1402 0063 13       		.uleb128 0x13
 1403 0064 00       		.byte	0
 1404 0065 00       		.byte	0
 1405 0066 09       		.uleb128 0x9
 1406 0067 01       		.uleb128 0x1
 1407 0068 01       		.byte	0x1
 1408 0069 49       		.uleb128 0x49
 1409 006a 13       		.uleb128 0x13
 1410 006b 01       		.uleb128 0x1
 1411 006c 13       		.uleb128 0x13
 1412 006d 00       		.byte	0
 1413 006e 00       		.byte	0
 1414 006f 0A       		.uleb128 0xa
 1415 0070 21       		.uleb128 0x21
 1416 0071 00       		.byte	0
 1417 0072 49       		.uleb128 0x49
 1418 0073 13       		.uleb128 0x13
 1419 0074 2F       		.uleb128 0x2f
 1420 0075 0B       		.uleb128 0xb
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 42


 1421 0076 00       		.byte	0
 1422 0077 00       		.byte	0
 1423 0078 0B       		.uleb128 0xb
 1424 0079 0D       		.uleb128 0xd
 1425 007a 00       		.byte	0
 1426 007b 03       		.uleb128 0x3
 1427 007c 0E       		.uleb128 0xe
 1428 007d 3A       		.uleb128 0x3a
 1429 007e 0B       		.uleb128 0xb
 1430 007f 3B       		.uleb128 0x3b
 1431 0080 05       		.uleb128 0x5
 1432 0081 49       		.uleb128 0x49
 1433 0082 13       		.uleb128 0x13
 1434 0083 38       		.uleb128 0x38
 1435 0084 0B       		.uleb128 0xb
 1436 0085 00       		.byte	0
 1437 0086 00       		.byte	0
 1438 0087 0C       		.uleb128 0xc
 1439 0088 13       		.uleb128 0x13
 1440 0089 01       		.byte	0x1
 1441 008a 0B       		.uleb128 0xb
 1442 008b 0B       		.uleb128 0xb
 1443 008c 3A       		.uleb128 0x3a
 1444 008d 0B       		.uleb128 0xb
 1445 008e 3B       		.uleb128 0x3b
 1446 008f 05       		.uleb128 0x5
 1447 0090 01       		.uleb128 0x1
 1448 0091 13       		.uleb128 0x13
 1449 0092 00       		.byte	0
 1450 0093 00       		.byte	0
 1451 0094 0D       		.uleb128 0xd
 1452 0095 0D       		.uleb128 0xd
 1453 0096 00       		.byte	0
 1454 0097 03       		.uleb128 0x3
 1455 0098 08       		.uleb128 0x8
 1456 0099 3A       		.uleb128 0x3a
 1457 009a 0B       		.uleb128 0xb
 1458 009b 3B       		.uleb128 0x3b
 1459 009c 05       		.uleb128 0x5
 1460 009d 49       		.uleb128 0x49
 1461 009e 13       		.uleb128 0x13
 1462 009f 38       		.uleb128 0x38
 1463 00a0 0B       		.uleb128 0xb
 1464 00a1 00       		.byte	0
 1465 00a2 00       		.byte	0
 1466 00a3 0E       		.uleb128 0xe
 1467 00a4 0F       		.uleb128 0xf
 1468 00a5 00       		.byte	0
 1469 00a6 0B       		.uleb128 0xb
 1470 00a7 0B       		.uleb128 0xb
 1471 00a8 49       		.uleb128 0x49
 1472 00a9 13       		.uleb128 0x13
 1473 00aa 00       		.byte	0
 1474 00ab 00       		.byte	0
 1475 00ac 0F       		.uleb128 0xf
 1476 00ad 26       		.uleb128 0x26
 1477 00ae 00       		.byte	0
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 43


 1478 00af 00       		.byte	0
 1479 00b0 00       		.byte	0
 1480 00b1 10       		.uleb128 0x10
 1481 00b2 0F       		.uleb128 0xf
 1482 00b3 00       		.byte	0
 1483 00b4 0B       		.uleb128 0xb
 1484 00b5 0B       		.uleb128 0xb
 1485 00b6 00       		.byte	0
 1486 00b7 00       		.byte	0
 1487 00b8 11       		.uleb128 0x11
 1488 00b9 2E       		.uleb128 0x2e
 1489 00ba 01       		.byte	0x1
 1490 00bb 03       		.uleb128 0x3
 1491 00bc 0E       		.uleb128 0xe
 1492 00bd 3A       		.uleb128 0x3a
 1493 00be 0B       		.uleb128 0xb
 1494 00bf 3B       		.uleb128 0x3b
 1495 00c0 05       		.uleb128 0x5
 1496 00c1 27       		.uleb128 0x27
 1497 00c2 19       		.uleb128 0x19
 1498 00c3 11       		.uleb128 0x11
 1499 00c4 01       		.uleb128 0x1
 1500 00c5 12       		.uleb128 0x12
 1501 00c6 06       		.uleb128 0x6
 1502 00c7 40       		.uleb128 0x40
 1503 00c8 18       		.uleb128 0x18
 1504 00c9 9742     		.uleb128 0x2117
 1505 00cb 19       		.uleb128 0x19
 1506 00cc 01       		.uleb128 0x1
 1507 00cd 13       		.uleb128 0x13
 1508 00ce 00       		.byte	0
 1509 00cf 00       		.byte	0
 1510 00d0 12       		.uleb128 0x12
 1511 00d1 34       		.uleb128 0x34
 1512 00d2 00       		.byte	0
 1513 00d3 03       		.uleb128 0x3
 1514 00d4 0E       		.uleb128 0xe
 1515 00d5 3A       		.uleb128 0x3a
 1516 00d6 0B       		.uleb128 0xb
 1517 00d7 3B       		.uleb128 0x3b
 1518 00d8 05       		.uleb128 0x5
 1519 00d9 49       		.uleb128 0x49
 1520 00da 13       		.uleb128 0x13
 1521 00db 02       		.uleb128 0x2
 1522 00dc 17       		.uleb128 0x17
 1523 00dd 00       		.byte	0
 1524 00de 00       		.byte	0
 1525 00df 13       		.uleb128 0x13
 1526 00e0 26       		.uleb128 0x26
 1527 00e1 00       		.byte	0
 1528 00e2 49       		.uleb128 0x49
 1529 00e3 13       		.uleb128 0x13
 1530 00e4 00       		.byte	0
 1531 00e5 00       		.byte	0
 1532 00e6 14       		.uleb128 0x14
 1533 00e7 898201   		.uleb128 0x4109
 1534 00ea 00       		.byte	0
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 44


 1535 00eb 11       		.uleb128 0x11
 1536 00ec 01       		.uleb128 0x1
 1537 00ed 31       		.uleb128 0x31
 1538 00ee 13       		.uleb128 0x13
 1539 00ef 00       		.byte	0
 1540 00f0 00       		.byte	0
 1541 00f1 15       		.uleb128 0x15
 1542 00f2 2E       		.uleb128 0x2e
 1543 00f3 01       		.byte	0x1
 1544 00f4 3F       		.uleb128 0x3f
 1545 00f5 19       		.uleb128 0x19
 1546 00f6 03       		.uleb128 0x3
 1547 00f7 0E       		.uleb128 0xe
 1548 00f8 3A       		.uleb128 0x3a
 1549 00f9 0B       		.uleb128 0xb
 1550 00fa 3B       		.uleb128 0x3b
 1551 00fb 0B       		.uleb128 0xb
 1552 00fc 27       		.uleb128 0x27
 1553 00fd 19       		.uleb128 0x19
 1554 00fe 11       		.uleb128 0x11
 1555 00ff 01       		.uleb128 0x1
 1556 0100 12       		.uleb128 0x12
 1557 0101 06       		.uleb128 0x6
 1558 0102 40       		.uleb128 0x40
 1559 0103 18       		.uleb128 0x18
 1560 0104 9742     		.uleb128 0x2117
 1561 0106 19       		.uleb128 0x19
 1562 0107 01       		.uleb128 0x1
 1563 0108 13       		.uleb128 0x13
 1564 0109 00       		.byte	0
 1565 010a 00       		.byte	0
 1566 010b 16       		.uleb128 0x16
 1567 010c 34       		.uleb128 0x34
 1568 010d 00       		.byte	0
 1569 010e 03       		.uleb128 0x3
 1570 010f 0E       		.uleb128 0xe
 1571 0110 3A       		.uleb128 0x3a
 1572 0111 0B       		.uleb128 0xb
 1573 0112 3B       		.uleb128 0x3b
 1574 0113 0B       		.uleb128 0xb
 1575 0114 49       		.uleb128 0x49
 1576 0115 13       		.uleb128 0x13
 1577 0116 02       		.uleb128 0x2
 1578 0117 17       		.uleb128 0x17
 1579 0118 00       		.byte	0
 1580 0119 00       		.byte	0
 1581 011a 17       		.uleb128 0x17
 1582 011b 898201   		.uleb128 0x4109
 1583 011e 01       		.byte	0x1
 1584 011f 11       		.uleb128 0x11
 1585 0120 01       		.uleb128 0x1
 1586 0121 31       		.uleb128 0x31
 1587 0122 13       		.uleb128 0x13
 1588 0123 01       		.uleb128 0x1
 1589 0124 13       		.uleb128 0x13
 1590 0125 00       		.byte	0
 1591 0126 00       		.byte	0
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 45


 1592 0127 18       		.uleb128 0x18
 1593 0128 8A8201   		.uleb128 0x410a
 1594 012b 00       		.byte	0
 1595 012c 02       		.uleb128 0x2
 1596 012d 18       		.uleb128 0x18
 1597 012e 9142     		.uleb128 0x2111
 1598 0130 18       		.uleb128 0x18
 1599 0131 00       		.byte	0
 1600 0132 00       		.byte	0
 1601 0133 19       		.uleb128 0x19
 1602 0134 34       		.uleb128 0x34
 1603 0135 00       		.byte	0
 1604 0136 03       		.uleb128 0x3
 1605 0137 0E       		.uleb128 0xe
 1606 0138 3A       		.uleb128 0x3a
 1607 0139 0B       		.uleb128 0xb
 1608 013a 3B       		.uleb128 0x3b
 1609 013b 05       		.uleb128 0x5
 1610 013c 49       		.uleb128 0x49
 1611 013d 13       		.uleb128 0x13
 1612 013e 3F       		.uleb128 0x3f
 1613 013f 19       		.uleb128 0x19
 1614 0140 3C       		.uleb128 0x3c
 1615 0141 19       		.uleb128 0x19
 1616 0142 00       		.byte	0
 1617 0143 00       		.byte	0
 1618 0144 1A       		.uleb128 0x1a
 1619 0145 34       		.uleb128 0x34
 1620 0146 00       		.byte	0
 1621 0147 03       		.uleb128 0x3
 1622 0148 0E       		.uleb128 0xe
 1623 0149 3A       		.uleb128 0x3a
 1624 014a 0B       		.uleb128 0xb
 1625 014b 3B       		.uleb128 0x3b
 1626 014c 0B       		.uleb128 0xb
 1627 014d 49       		.uleb128 0x49
 1628 014e 13       		.uleb128 0x13
 1629 014f 3F       		.uleb128 0x3f
 1630 0150 19       		.uleb128 0x19
 1631 0151 3C       		.uleb128 0x3c
 1632 0152 19       		.uleb128 0x19
 1633 0153 00       		.byte	0
 1634 0154 00       		.byte	0
 1635 0155 1B       		.uleb128 0x1b
 1636 0156 2E       		.uleb128 0x2e
 1637 0157 00       		.byte	0
 1638 0158 3F       		.uleb128 0x3f
 1639 0159 19       		.uleb128 0x19
 1640 015a 3C       		.uleb128 0x3c
 1641 015b 19       		.uleb128 0x19
 1642 015c 6E       		.uleb128 0x6e
 1643 015d 0E       		.uleb128 0xe
 1644 015e 03       		.uleb128 0x3
 1645 015f 0E       		.uleb128 0xe
 1646 0160 3A       		.uleb128 0x3a
 1647 0161 0B       		.uleb128 0xb
 1648 0162 3B       		.uleb128 0x3b
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 46


 1649 0163 05       		.uleb128 0x5
 1650 0164 00       		.byte	0
 1651 0165 00       		.byte	0
 1652 0166 1C       		.uleb128 0x1c
 1653 0167 2E       		.uleb128 0x2e
 1654 0168 00       		.byte	0
 1655 0169 3F       		.uleb128 0x3f
 1656 016a 19       		.uleb128 0x19
 1657 016b 3C       		.uleb128 0x3c
 1658 016c 19       		.uleb128 0x19
 1659 016d 6E       		.uleb128 0x6e
 1660 016e 0E       		.uleb128 0xe
 1661 016f 03       		.uleb128 0x3
 1662 0170 0E       		.uleb128 0xe
 1663 0171 3A       		.uleb128 0x3a
 1664 0172 0B       		.uleb128 0xb
 1665 0173 3B       		.uleb128 0x3b
 1666 0174 0B       		.uleb128 0xb
 1667 0175 00       		.byte	0
 1668 0176 00       		.byte	0
 1669 0177 00       		.byte	0
 1670              		.section	.debug_loc,"",%progbits
 1671              	.Ldebug_loc0:
 1672              	.LLST0:
 1673 0000 16000000 		.4byte	.LVL1
 1674 0004 26000000 		.4byte	.LVL5
 1675 0008 0100     		.2byte	0x1
 1676 000a 52       		.byte	0x52
 1677 000b 26000000 		.4byte	.LVL5
 1678 000f 30000000 		.4byte	.LVL6
 1679 0013 0700     		.2byte	0x7
 1680 0015 71       		.byte	0x71
 1681 0016 00       		.sleb128 0
 1682 0017 40       		.byte	0x40
 1683 0018 24       		.byte	0x24
 1684 0019 40       		.byte	0x40
 1685 001a 25       		.byte	0x25
 1686 001b 9F       		.byte	0x9f
 1687 001c 30000000 		.4byte	.LVL6
 1688 0020 32000000 		.4byte	.LVL7
 1689 0024 0100     		.2byte	0x1
 1690 0026 52       		.byte	0x52
 1691 0027 32000000 		.4byte	.LVL7
 1692 002b 34000000 		.4byte	.LVL8
 1693 002f 0700     		.2byte	0x7
 1694 0031 71       		.byte	0x71
 1695 0032 00       		.sleb128 0
 1696 0033 40       		.byte	0x40
 1697 0034 24       		.byte	0x24
 1698 0035 40       		.byte	0x40
 1699 0036 25       		.byte	0x25
 1700 0037 9F       		.byte	0x9f
 1701 0038 00000000 		.4byte	0
 1702 003c 00000000 		.4byte	0
 1703              	.LLST1:
 1704 0040 1E000000 		.4byte	.LVL3
 1705 0044 24000000 		.4byte	.LVL4
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 47


 1706 0048 0100     		.2byte	0x1
 1707 004a 53       		.byte	0x53
 1708 004b 24000000 		.4byte	.LVL4
 1709 004f 30000000 		.4byte	.LVL6
 1710 0053 0700     		.2byte	0x7
 1711 0055 31       		.byte	0x31
 1712 0056 70       		.byte	0x70
 1713 0057 00       		.sleb128 0
 1714 0058 24       		.byte	0x24
 1715 0059 31       		.byte	0x31
 1716 005a 1C       		.byte	0x1c
 1717 005b 9F       		.byte	0x9f
 1718 005c 30000000 		.4byte	.LVL6
 1719 0060 3C000000 		.4byte	.LVL9
 1720 0064 0100     		.2byte	0x1
 1721 0066 53       		.byte	0x53
 1722 0067 3C000000 		.4byte	.LVL9
 1723 006b 54000000 		.4byte	.LFE3
 1724 006f 0700     		.2byte	0x7
 1725 0071 31       		.byte	0x31
 1726 0072 70       		.byte	0x70
 1727 0073 00       		.sleb128 0
 1728 0074 24       		.byte	0x24
 1729 0075 31       		.byte	0x31
 1730 0076 1C       		.byte	0x1c
 1731 0077 9F       		.byte	0x9f
 1732 0078 00000000 		.4byte	0
 1733 007c 00000000 		.4byte	0
 1734              	.LLST2:
 1735 0080 0E000000 		.4byte	.LVL0
 1736 0084 1A000000 		.4byte	.LVL2
 1737 0088 0100     		.2byte	0x1
 1738 008a 53       		.byte	0x53
 1739 008b 00000000 		.4byte	0
 1740 008f 00000000 		.4byte	0
 1741              	.LLST3:
 1742 0093 10000000 		.4byte	.LVL10
 1743 0097 4D000000 		.4byte	.LVL11-1
 1744 009b 0100     		.2byte	0x1
 1745 009d 50       		.byte	0x50
 1746 009e 60000000 		.4byte	.LVL14
 1747 00a2 7B000000 		.4byte	.LVL15-1
 1748 00a6 0100     		.2byte	0x1
 1749 00a8 50       		.byte	0x50
 1750 00a9 7E000000 		.4byte	.LVL16
 1751 00ad 8E000000 		.4byte	.LVL17
 1752 00b1 0100     		.2byte	0x1
 1753 00b3 50       		.byte	0x50
 1754 00b4 00000000 		.4byte	0
 1755 00b8 00000000 		.4byte	0
 1756              	.LLST4:
 1757 00bc 1C000000 		.4byte	.LVL19
 1758 00c0 32000000 		.4byte	.LVL23
 1759 00c4 0100     		.2byte	0x1
 1760 00c6 54       		.byte	0x54
 1761 00c7 00000000 		.4byte	0
 1762 00cb 00000000 		.4byte	0
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 48


 1763              		.section	.debug_aranges,"",%progbits
 1764 0000 34000000 		.4byte	0x34
 1765 0004 0200     		.2byte	0x2
 1766 0006 00000000 		.4byte	.Ldebug_info0
 1767 000a 04       		.byte	0x4
 1768 000b 00       		.byte	0
 1769 000c 0000     		.2byte	0
 1770 000e 0000     		.2byte	0
 1771 0010 00000000 		.4byte	.LFB3
 1772 0014 54000000 		.4byte	.LFE3-.LFB3
 1773 0018 00000000 		.4byte	.LFB4
 1774 001c AC000000 		.4byte	.LFE4-.LFB4
 1775 0020 00000000 		.4byte	.LFB1
 1776 0024 2C000000 		.4byte	.LFE1-.LFB1
 1777 0028 00000000 		.4byte	.LFB2
 1778 002c 44000000 		.4byte	.LFE2-.LFB2
 1779 0030 00000000 		.4byte	0
 1780 0034 00000000 		.4byte	0
 1781              		.section	.debug_ranges,"",%progbits
 1782              	.Ldebug_ranges0:
 1783 0000 00000000 		.4byte	.LFB3
 1784 0004 54000000 		.4byte	.LFE3
 1785 0008 00000000 		.4byte	.LFB4
 1786 000c AC000000 		.4byte	.LFE4
 1787 0010 00000000 		.4byte	.LFB1
 1788 0014 2C000000 		.4byte	.LFE1
 1789 0018 00000000 		.4byte	.LFB2
 1790 001c 44000000 		.4byte	.LFE2
 1791 0020 00000000 		.4byte	0
 1792 0024 00000000 		.4byte	0
 1793              		.section	.debug_line,"",%progbits
 1794              	.Ldebug_line0:
 1795 0000 4D010000 		.section	.debug_str,"MS",%progbits,1
 1795      0200CB00 
 1795      00000201 
 1795      FB0E0D00 
 1795      01010101 
 1796              	.LASF97:
 1797 0000 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 1797      656E7365 
 1797      5F464C41 
 1797      53485F53 
 1797      54525543 
 1798              	.LASF63:
 1799 0016 77646774 		.ascii	"wdgtList\000"
 1799      4C697374 
 1799      00
 1800              	.LASF68:
 1801 001f 736E7254 		.ascii	"snrTestRawCount\000"
 1801      65737452 
 1801      6177436F 
 1801      756E7400 
 1802              	.LASF91:
 1803 002f 78526573 		.ascii	"xResolution\000"
 1803      6F6C7574 
 1803      696F6E00 
 1804              	.LASF45:
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 49


 1805 003b 62736C6E 		.ascii	"bsln\000"
 1805      00
 1806              	.LASF99:
 1807 0040 746D7052 		.ascii	"tmpRawData\000"
 1807      61774461 
 1807      746100
 1808              	.LASF34:
 1809 004b 69646163 		.ascii	"idacGainIndex\000"
 1809      4761696E 
 1809      496E6465 
 1809      7800
 1810              	.LASF100:
 1811 0059 746D704D 		.ascii	"tmpMaxCount\000"
 1811      6178436F 
 1811      756E7400 
 1812              	.LASF32:
 1813 0065 6C6F7742 		.ascii	"lowBslnRst\000"
 1813      736C6E52 
 1813      737400
 1814              	.LASF47:
 1815 0070 64696666 		.ascii	"diff\000"
 1815      00
 1816              	.LASF88:
 1817 0075 746F7461 		.ascii	"totalNumSns\000"
 1817      6C4E756D 
 1817      536E7300 
 1818              	.LASF83:
 1819 0081 70747232 		.ascii	"ptr2WdgtRam\000"
 1819      57646774 
 1819      52616D00 
 1820              	.LASF33:
 1821 008d 69646163 		.ascii	"idacMod\000"
 1821      4D6F6400 
 1822              	.LASF73:
 1823 0095 70635074 		.ascii	"pcPtr\000"
 1823      7200
 1824              	.LASF94:
 1825 009b 69697246 		.ascii	"iirFilterCoeff\000"
 1825      696C7465 
 1825      72436F65 
 1825      666600
 1826              	.LASF2:
 1827 00aa 73686F72 		.ascii	"short int\000"
 1827      7420696E 
 1827      7400
 1828              	.LASF72:
 1829 00b4 6873696F 		.ascii	"hsiomPtr\000"
 1829      6D507472 
 1829      00
 1830              	.LASF31:
 1831 00bd 6F6E4465 		.ascii	"onDebounce\000"
 1831      626F756E 
 1831      636500
 1832              	.LASF39:
 1833 00c8 73697A65 		.ascii	"sizetype\000"
 1833      74797065 
 1833      00
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 50


 1834              	.LASF95:
 1835 00d1 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 1835      656E7365 
 1835      5F464C41 
 1835      53485F57 
 1835      445F5354 
 1836              	.LASF52:
 1837 00ea 636F6E66 		.ascii	"configId\000"
 1837      69674964 
 1837      00
 1838              	.LASF119:
 1839 00f3 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1839      43313120 
 1839      352E342E 
 1839      31203230 
 1839      31363036 
 1840 0126 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 1840      20726576 
 1840      6973696F 
 1840      6E203233 
 1840      37373135 
 1841 0159 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 1841      67202D66 
 1841      66756E63 
 1841      74696F6E 
 1841      2D736563 
 1842              	.LASF49:
 1843 0185 69646163 		.ascii	"idacComp\000"
 1843      436F6D70 
 1843      00
 1844              	.LASF61:
 1845 018e 63736430 		.ascii	"csd0Config\000"
 1845      436F6E66 
 1845      696700
 1846              	.LASF6:
 1847 0199 6C6F6E67 		.ascii	"long long int\000"
 1847      206C6F6E 
 1847      6720696E 
 1847      7400
 1848              	.LASF76:
 1849 01a7 6873696F 		.ascii	"hsiomMask\000"
 1849      6D4D6173 
 1849      6B00
 1850              	.LASF36:
 1851 01b1 736E7343 		.ascii	"snsClkSource\000"
 1851      6C6B536F 
 1851      75726365 
 1851      00
 1852              	.LASF20:
 1853 01be 70617261 		.ascii	"param2\000"
 1853      6D3200
 1854              	.LASF21:
 1855 01c5 70617261 		.ascii	"param3\000"
 1855      6D3300
 1856              	.LASF22:
 1857 01cc 70617261 		.ascii	"param4\000"
 1857      6D3400
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 51


 1858              	.LASF104:
 1859 01d3 43617053 		.ascii	"CapSense_CSDPostSingleScan\000"
 1859      656E7365 
 1859      5F435344 
 1859      506F7374 
 1859      53696E67 
 1860              	.LASF24:
 1861 01ee 70617261 		.ascii	"param6\000"
 1861      6D3600
 1862              	.LASF28:
 1863 01f5 6E6F6973 		.ascii	"noiseTh\000"
 1863      65546800 
 1864              	.LASF53:
 1865 01fd 64657669 		.ascii	"deviceId\000"
 1865      63654964 
 1865      00
 1866              	.LASF10:
 1867 0206 75696E74 		.ascii	"uint16\000"
 1867      313600
 1868              	.LASF86:
 1869 020d 70747232 		.ascii	"ptr2DebounceArr\000"
 1869      4465626F 
 1869      756E6365 
 1869      41727200 
 1870              	.LASF9:
 1871 021d 75696E74 		.ascii	"uint8\000"
 1871      3800
 1872              	.LASF75:
 1873 0223 70735074 		.ascii	"psPtr\000"
 1873      7200
 1874              	.LASF35:
 1875 0229 736E7343 		.ascii	"snsClk\000"
 1875      6C6B00
 1876              	.LASF102:
 1877 0230 43617053 		.ascii	"CapSense_SsCSDPostScan\000"
 1877      656E7365 
 1877      5F537343 
 1877      5344506F 
 1877      73745363 
 1878              	.LASF12:
 1879 0247 666C6F61 		.ascii	"float\000"
 1879      7400
 1880              	.LASF106:
 1881 024d 63757253 		.ascii	"curSnsIOPtr\000"
 1881      6E73494F 
 1881      50747200 
 1882              	.LASF44:
 1883 0259 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 1883      656E7365 
 1883      5F52414D 
 1883      5F57445F 
 1883      4C495354 
 1884              	.LASF66:
 1885 0275 736E7254 		.ascii	"snrTestSensorId\000"
 1885      65737453 
 1885      656E736F 
 1885      72496400 
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 52


 1886              	.LASF121:
 1887 0285 463A5C43 		.ascii	"F:\\CapSense_Tasks\\Task_1.cydsn\000"
 1887      61705365 
 1887      6E73655F 
 1887      5461736B 
 1887      735C5461 
 1888              	.LASF14:
 1889 02a4 63686172 		.ascii	"char\000"
 1889      00
 1890              	.LASF117:
 1891 02a9 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 1891      656E7365 
 1891      5F537350 
 1891      6F737441 
 1891      6C6C5769 
 1892              	.LASF4:
 1893 02c7 6C6F6E67 		.ascii	"long int\000"
 1893      20696E74 
 1893      00
 1894              	.LASF80:
 1895 02d0 73686966 		.ascii	"shift\000"
 1895      7400
 1896              	.LASF89:
 1897 02d6 77646774 		.ascii	"wdgtType\000"
 1897      54797065 
 1897      00
 1898              	.LASF101:
 1899 02df 70747257 		.ascii	"ptrWdgt\000"
 1899      64677400 
 1900              	.LASF79:
 1901 02e7 64725368 		.ascii	"drShift\000"
 1901      69667400 
 1902              	.LASF81:
 1903 02ef 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 1903      656E7365 
 1903      5F464C41 
 1903      53485F49 
 1903      4F5F5354 
 1904              	.LASF107:
 1905 0308 43617053 		.ascii	"CapSense_dsRam\000"
 1905      656E7365 
 1905      5F647352 
 1905      616D00
 1906              	.LASF27:
 1907 0317 66696E67 		.ascii	"fingerTh\000"
 1907      65725468 
 1907      00
 1908              	.LASF90:
 1909 0320 6E756D43 		.ascii	"numCols\000"
 1909      6F6C7300 
 1910              	.LASF30:
 1911 0328 68797374 		.ascii	"hysteresis\000"
 1911      65726573 
 1911      697300
 1912              	.LASF55:
 1913 0333 74756E65 		.ascii	"tunerCmd\000"
 1913      72436D64 
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 53


 1913      00
 1914              	.LASF98:
 1915 033c 6C6F6E67 		.ascii	"long double\000"
 1915      20646F75 
 1915      626C6500 
 1916              	.LASF23:
 1917 0348 70617261 		.ascii	"param5\000"
 1917      6D3500
 1918              	.LASF59:
 1919 034f 77646774 		.ascii	"wdgtStatus\000"
 1919      53746174 
 1919      757300
 1920              	.LASF120:
 1921 035a 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_INT.c\000"
 1921      72617465 
 1921      645F536F 
 1921      75726365 
 1921      5C50536F 
 1922              	.LASF1:
 1923 0380 756E7369 		.ascii	"unsigned char\000"
 1923      676E6564 
 1923      20636861 
 1923      7200
 1924              	.LASF92:
 1925 038e 7843656E 		.ascii	"xCentroidMultiplier\000"
 1925      74726F69 
 1925      644D756C 
 1925      7469706C 
 1925      69657200 
 1926              	.LASF109:
 1927 03a2 43617053 		.ascii	"CapSense_widgetIndex\000"
 1927      656E7365 
 1927      5F776964 
 1927      67657449 
 1927      6E646578 
 1928              	.LASF16:
 1929 03b7 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 1929      656E7365 
 1929      5F544852 
 1929      4553484F 
 1929      4C445F54 
 1930              	.LASF115:
 1931 03cf 43617053 		.ascii	"CapSense_SsCSDConnectSensorExt\000"
 1931      656E7365 
 1931      5F537343 
 1931      5344436F 
 1931      6E6E6563 
 1932              	.LASF51:
 1933 03ee 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 1933      656E7365 
 1933      5F52414D 
 1933      5F534E53 
 1933      5F4C4953 
 1934              	.LASF7:
 1935 040b 6C6F6E67 		.ascii	"long long unsigned int\000"
 1935      206C6F6E 
 1935      6720756E 
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 54


 1935      7369676E 
 1935      65642069 
 1936              	.LASF87:
 1937 0422 73746174 		.ascii	"staticConfig\000"
 1937      6963436F 
 1937      6E666967 
 1937      00
 1938              	.LASF8:
 1939 042f 756E7369 		.ascii	"unsigned int\000"
 1939      676E6564 
 1939      20696E74 
 1939      00
 1940              	.LASF18:
 1941 043c 70617261 		.ascii	"param0\000"
 1941      6D3000
 1942              	.LASF58:
 1943 0443 77646774 		.ascii	"wdgtEnable\000"
 1943      456E6162 
 1943      6C6500
 1944              	.LASF19:
 1945 044e 70617261 		.ascii	"param1\000"
 1945      6D3100
 1946              	.LASF70:
 1947 0455 7363616E 		.ascii	"scanCurrentISC\000"
 1947      43757272 
 1947      656E7449 
 1947      534300
 1948              	.LASF15:
 1949 0464 72656733 		.ascii	"reg32\000"
 1949      3200
 1950              	.LASF50:
 1951 046a 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 1951      656E7365 
 1951      5F52414D 
 1951      5F534E53 
 1951      5F535452 
 1952              	.LASF17:
 1953 0482 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 1953      656E7365 
 1953      5F4C4F57 
 1953      5F42534C 
 1953      4E5F5253 
 1954              	.LASF57:
 1955 049d 73746174 		.ascii	"status\000"
 1955      757300
 1956              	.LASF54:
 1957 04a4 6877436C 		.ascii	"hwClock\000"
 1957      6F636B00 
 1958              	.LASF67:
 1959 04ac 736E7254 		.ascii	"snrTestScanCounter\000"
 1959      65737453 
 1959      63616E43 
 1959      6F756E74 
 1959      657200
 1960              	.LASF26:
 1961 04bf 7265736F 		.ascii	"resolution\000"
 1961      6C757469 
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 55


 1961      6F6E00
 1962              	.LASF3:
 1963 04ca 73686F72 		.ascii	"short unsigned int\000"
 1963      7420756E 
 1963      7369676E 
 1963      65642069 
 1963      6E7400
 1964              	.LASF116:
 1965 04dd 43617053 		.ascii	"CapSense_SsCSDStartSample\000"
 1965      656E7365 
 1965      5F537343 
 1965      53445374 
 1965      61727453 
 1966              	.LASF64:
 1967 04f7 736E734C 		.ascii	"snsList\000"
 1967      69737400 
 1968              	.LASF111:
 1969 04ff 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 1969      656E7365 
 1969      5F726571 
 1969      75657374 
 1969      5363616E 
 1970              	.LASF62:
 1971 051d 6D6F6443 		.ascii	"modCsdClk\000"
 1971      7364436C 
 1971      6B00
 1972              	.LASF56:
 1973 0527 7363616E 		.ascii	"scanCounter\000"
 1973      436F756E 
 1973      74657200 
 1974              	.LASF29:
 1975 0533 6E4E6F69 		.ascii	"nNoiseTh\000"
 1975      73655468 
 1975      00
 1976              	.LASF71:
 1977 053c 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 1977      656E7365 
 1977      5F52414D 
 1977      5F535452 
 1977      55435400 
 1978              	.LASF38:
 1979 0550 73696750 		.ascii	"sigPFC\000"
 1979      464300
 1980              	.LASF11:
 1981 0557 75696E74 		.ascii	"uint32\000"
 1981      333200
 1982              	.LASF69:
 1983 055e 7363616E 		.ascii	"scanCsdISC\000"
 1983      43736449 
 1983      534300
 1984              	.LASF5:
 1985 0569 6C6F6E67 		.ascii	"long unsigned int\000"
 1985      20756E73 
 1985      69676E65 
 1985      6420696E 
 1985      7400
 1986              	.LASF13:
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 56


 1987 057b 646F7562 		.ascii	"double\000"
 1987      6C6500
 1988              	.LASF105:
 1989 0582 43617053 		.ascii	"CapSense_CSDPostMultiScan\000"
 1989      656E7365 
 1989      5F435344 
 1989      506F7374 
 1989      4D756C74 
 1990              	.LASF46:
 1991 059c 62736C6E 		.ascii	"bslnExt\000"
 1991      45787400 
 1992              	.LASF78:
 1993 05a4 6873696F 		.ascii	"hsiomShift\000"
 1993      6D536869 
 1993      667400
 1994              	.LASF112:
 1995 05af 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 1995      656E7365 
 1995      5F637572 
 1995      52616D53 
 1995      6E735074 
 1996              	.LASF74:
 1997 05c5 64725074 		.ascii	"drPtr\000"
 1997      7200
 1998              	.LASF77:
 1999 05cb 6D61736B 		.ascii	"mask\000"
 1999      00
 2000              	.LASF48:
 2001 05d0 6E656742 		.ascii	"negBslnRstCnt\000"
 2001      736C6E52 
 2001      7374436E 
 2001      7400
 2002              	.LASF114:
 2003 05de 43617053 		.ascii	"CapSense_SsCSDSetUpIdacs\000"
 2003      656E7365 
 2003      5F537343 
 2003      53445365 
 2003      74557049 
 2004              	.LASF84:
 2005 05f7 70747232 		.ascii	"ptr2SnsRam\000"
 2005      536E7352 
 2005      616D00
 2006              	.LASF0:
 2007 0602 7369676E 		.ascii	"signed char\000"
 2007      65642063 
 2007      68617200 
 2008              	.LASF85:
 2009 060e 70747232 		.ascii	"ptr2FltrHistory\000"
 2009      466C7472 
 2009      48697374 
 2009      6F727900 
 2010              	.LASF103:
 2011 061e 43617053 		.ascii	"CapSense_SsCSDInitNextScan\000"
 2011      656E7365 
 2011      5F537343 
 2011      5344496E 
 2011      69744E65 
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 57


 2012              	.LASF96:
 2013 0639 77646774 		.ascii	"wdgtArray\000"
 2013      41727261 
 2013      7900
 2014              	.LASF37:
 2015 0643 66696E67 		.ascii	"fingerCap\000"
 2015      65724361 
 2015      7000
 2016              	.LASF108:
 2017 064d 43617053 		.ascii	"CapSense_dsFlash\000"
 2017      656E7365 
 2017      5F647346 
 2017      6C617368 
 2017      00
 2018              	.LASF43:
 2019 065e 6C696E65 		.ascii	"linearslider0\000"
 2019      6172736C 
 2019      69646572 
 2019      3000
 2020              	.LASF41:
 2021 066c 706F7369 		.ascii	"position\000"
 2021      74696F6E 
 2021      00
 2022              	.LASF40:
 2023 0675 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 2023      656E7365 
 2023      5F52414D 
 2023      5F57445F 
 2023      42415345 
 2024              	.LASF65:
 2025 0691 736E7254 		.ascii	"snrTestWidgetId\000"
 2025      65737457 
 2025      69646765 
 2025      74496400 
 2026              	.LASF113:
 2027 06a1 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 2027      656E7365 
 2027      5F736361 
 2027      6E467265 
 2027      71496E64 
 2028              	.LASF25:
 2029 06b8 534D4152 		.ascii	"SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT\000"
 2029      5453454E 
 2029      53455F43 
 2029      53445F4E 
 2029      4F495345 
 2030              	.LASF82:
 2031 06dd 70747232 		.ascii	"ptr2SnsFlash\000"
 2031      536E7346 
 2031      6C617368 
 2031      00
 2032              	.LASF60:
 2033 06ea 736E7353 		.ascii	"snsStatus\000"
 2033      74617475 
 2033      7300
 2034              	.LASF110:
 2035 06f4 43617053 		.ascii	"CapSense_sensorIndex\000"
ARM GAS  C:\Users\adm\AppData\Local\Temp\cckpjPvU.s 			page 58


 2035      656E7365 
 2035      5F73656E 
 2035      736F7249 
 2035      6E646578 
 2036              	.LASF42:
 2037 0709 43617053 		.ascii	"CapSense_RAM_WD_SLIDER_STRUCT\000"
 2037      656E7365 
 2037      5F52414D 
 2037      5F57445F 
 2037      534C4944 
 2038              	.LASF118:
 2039 0727 43617053 		.ascii	"CapSense_CSDDisconnectSns\000"
 2039      656E7365 
 2039      5F435344 
 2039      44697363 
 2039      6F6E6E65 
 2040              	.LASF93:
 2041 0741 70747232 		.ascii	"ptr2NoiseEnvlp\000"
 2041      4E6F6973 
 2041      65456E76 
 2041      6C7000
 2042              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_uidivmod
  20              		.section	.text.CapSense_SsCalcLfsrSize,"ax",%progbits
  21              		.align	2
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_SsCalcLfsrSize, %function
  25              	CapSense_SsCalcLfsrSize:
  26              	.LFB23:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_Sensing.c **** * \file CapSense_Sensing.c
   3:Generated_Source\PSoC4/CapSense_Sensing.c **** * \version 7.0
   4:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_Sensing.c **** * \see CapSense v7.0 Datasheet
  10:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_Sensing.c **** * Copyright (2016-2019), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 2


  31:Generated_Source\PSoC4/CapSense_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
  32:Generated_Source\PSoC4/CapSense_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Structure.h"
  43:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  47:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  50:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  53:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  56:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_Adc.h"
  58:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  59:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (0u != CapSense_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_Sensing.c ****         #include "CapSense_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  69:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  70:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************
  71:Generated_Source\PSoC4/CapSense_Sensing.c **** * API Constants
  72:Generated_Source\PSoC4/CapSense_Sensing.c **** ***************************************/
  73:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  74:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MIN               (0u)
  75:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MAX               (255u)
  76:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CALIBRATION_RESOLUTION        (12u)
  77:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ          (1500u)
  78:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CAL_LEVEL                     (CapSense_CSD_RAWCOUNT_CAL_LEVEL)
  79:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CAL_UNITS                     (1000u)
  80:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CP_MAX                        (69000Lu)
  81:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  82:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  83:Generated_Source\PSoC4/CapSense_Sensing.c **** /* HW IP Block limitation */
  84:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  85:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (12600u)
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 3


  88:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
  89:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
 123:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 4


 145:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void);
 146:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
 161:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
 164:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
 165:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 168:Generated_Source\PSoC4/CapSense_Sensing.c **** /** \}
 169:Generated_Source\PSoC4/CapSense_Sensing.c **** * \endcond */
 170:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 171:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 172:Generated_Source\PSoC4/CapSense_Sensing.c **** * Defines module variables
 173:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 175:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_SENSE_METHOD_ENUM CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 176:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 177:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 178:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 179:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_scanFreqIndex = 0u;
 180:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Variable keep frequency offsets */
 181:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_immunity[CapSense_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 182:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 183:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* const allows C-compiler to do optimization */
 184:Generated_Source\PSoC4/CapSense_Sensing.c ****     const uint8 CapSense_scanFreqIndex = 0u;
 185:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 186:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 187:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Global software variables */
 188:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_widgetIndex = 0u;    /* Index of the scanning widget */
 189:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_sensorIndex = 0u;    /* Index of the scanning sensor */
 190:Generated_Source\PSoC4/CapSense_Sensing.c **** uint8 CapSense_requestScanAllWidget = 0u;
 191:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 192:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 193:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_RAM_SNS_STRUCT *CapSense_curRamSnsPtr;
 194:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 195:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) || \
 196:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSX_EN) || \
 197:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_ISX_EN))
 198:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 199:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_WD_STRUCT const *CapSense_curFlashWdgtPtr = 0u;
 200:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 201:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 5


 202:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 203:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
 204:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_SNS_STRUCT const *CapSense_curFlashSnsPtr = 0u;
 205:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 206:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 207:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 208:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_FLASH_IO_STRUCT const *CapSense_curSnsIOPtr;
 209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_IDAC_GAIN_TABLE_STRUCT const CapSense_idacGainTable[CapSense_IDAC_GAIN_NUMBER] = CapSense_
 211:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 212:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 213:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 214:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_IsBusy
 215:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 216:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 217:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 218:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 219:Generated_Source\PSoC4/CapSense_Sensing.c **** *  progress).
 220:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 221:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 222:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 223:Generated_Source\PSoC4/CapSense_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or Widget
 224:Generated_Source\PSoC4/CapSense_Sensing.c **** *  setup is made. The critical section (i.e. disable global interrupt)
 225:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is recommended for the application when the device transitions from
 226:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 227:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 228:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 229:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component:
 230:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_NOT_BUSY - No scan is in progress and a next scan
 231:Generated_Source\PSoC4/CapSense_Sensing.c **** *      can be initiated.
 232:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_SW_STS_BUSY - The previous scanning is not completed
 233:Generated_Source\PSoC4/CapSense_Sensing.c **** *      and the hardware block is busy.
 234:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 235:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** uint32 CapSense_IsBusy(void)
 237:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 238:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 239:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 240:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 241:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 242:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidget
 243:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 247:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 248:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 249:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 250:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget by executing the following tasks:
 251:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 252:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 253:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing methods are used in the Component.
 254:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 255:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 256:Generated_Source\PSoC4/CapSense_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 257:Generated_Source\PSoC4/CapSense_Sensing.c **** *       connected by the lower level SetupWidgetExt() or ConnectSns() functions
 258:Generated_Source\PSoC4/CapSense_Sensing.c ****         and not disconnected.
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 6


 259:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 260:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does not start sensor scanning, the CapSense_Scan()
 261:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 262:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 263:Generated_Source\PSoC4/CapSense_Sensing.c **** *  but only the last initialized widget is in effect.
 264:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 265:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 266:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 267:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the
 268:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 269:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_WDGT_ID.
 270:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 271:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the widget setting up operation:
 273:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 274:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 275:Generated_Source\PSoC4/CapSense_Sensing.c **** *      disabled
 276:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 277:Generated_Source\PSoC4/CapSense_Sensing.c **** *      hardware block is busy.
 278:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 279:Generated_Source\PSoC4/CapSense_Sensing.c **** *      other spurious error occurred.
 280:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 281:Generated_Source\PSoC4/CapSense_Sensing.c **** **********************************************************************************/
 282:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidget(uint32 widgetId)
 283:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 284:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 285:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 287:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 288:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 290:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 291:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 293:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 294:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 295:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 297:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 298:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 301:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 302:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 305:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 306:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 308:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 309:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 310:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 311:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 312:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 313:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 315:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 7


 316:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 317:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 318:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidget(widgetId);
 319:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 320:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 321:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 322:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 323:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 324:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidget(widgetId);
 325:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 326:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 328:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 329:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 330:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidget(widgetId);
 331:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 332:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 333:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 334:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 335:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 336:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 337:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 338:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 339:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 340:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 341:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 342:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 343:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 344:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_Scan
 345:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 346:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 347:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 348:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 349:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidget(), if no scan is in progress.
 350:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 351:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 352:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called only after the CapSense_SetupWidget()
 353:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 354:Generated_Source\PSoC4/CapSense_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_IsBusy()
 355:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 356:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 357:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 358:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 359:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 360:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 361:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 363:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 364:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************/
 365:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_Scan(void)
 366:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 367:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 368:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 370:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 371:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 8


 373:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 374:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 376:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 377:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 378:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 380:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScan();
 381:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 382:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 383:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 384:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 385:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScan();
 386:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 387:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 390:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScan();
 391:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 392:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 393:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 394:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 395:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 396:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 398:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 399:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 400:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 401:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanAllWidgets
 404:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 405:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 406:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 407:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 408:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 409:Generated_Source\PSoC4/CapSense_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 410:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 411:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 412:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 413:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 414:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_SetupWidget() and CapSense_Scan() functions are
 415:Generated_Source\PSoC4/CapSense_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 416:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_IsBusy() API prior to starting a next scan
 417:Generated_Source\PSoC4/CapSense_Sensing.c **** *  or setting up another widget.
 418:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 419:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 420:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 421:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 422:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 423:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 424:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 425:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 426:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 427:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanAllWidgets(void)
 428:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 429:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 9


 430:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 431:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 432:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 433:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
 434:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 435:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 437:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 438:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 440:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
 441:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  Set up widget first widget.
 442:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 443:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u;
 445:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex++)
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 448:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CapSense_SetupWidget(wdgtIndex);
 450:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 451:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 452:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 453:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (0u != (CapSense_TOTAL_WIDGETS - 1u))
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 455:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_TOTAL_WIDGETS - 1u) > wdgtIndex)
 456:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 457:Generated_Source\PSoC4/CapSense_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_ENABLE;
 459:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 460:Generated_Source\PSoC4/CapSense_Sensing.c ****                     else
 461:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 462:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 463:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 465:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
 466:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 467:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 468:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 469:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 470:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (0u != (CapSense_TOTAL_WIDGETS - 1u)) */
 471:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 472:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initiate scan and quit loop */
 473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 scanStatus = CapSense_Scan();
 474:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 476:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 477:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 479:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 480:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 481:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 482:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 485:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidgetExt
 486:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 10


 487:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 488:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 489:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs extended initialization for the specified widget and also performs
 490:Generated_Source\PSoC4/CapSense_Sensing.c **** *  initialization required for a specific sensor in the widget. This function
 491:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requires using the CapSense_ScanExt() function to initiate a scan.
 492:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 493:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 494:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does the same as CapSense_SetupWidget() and also
 495:Generated_Source\PSoC4/CapSense_Sensing.c **** *  does the following tasks:
 496:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Connects the first sensor of the widget.
 497:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Configures the CSD HW block to perform a scan of the specified sensor.
 498:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 499:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Once this function is called to initialize a widget and a sensor, the
 500:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function is called to scan the sensor.
 501:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 502:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called when no scanning is in progress. I.e.
 503:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_IsBusy() returns a non-busy status.
 504:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 506:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the user's specific
 507:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases (for faster execution time or pipeline scanning for example).
 508:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 509:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 510:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 511:Generated_Source\PSoC4/CapSense_Sensing.c **** *  initialization required for scanning the specific sensor in the specific
 512:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget.
 513:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense
 514:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Configuration header file defined as CapSense_<WidgetName>_WDGT_ID.
 515:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 516:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorId
 517:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
 518:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and firmware initialization required for scanning a specific sensor in a
 519:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specific widget.
 520:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the sensor ID within a specified widget can be found in the
 521:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 522:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID
 523:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 524:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 525:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 526:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - The operation is successfully completed.
 527:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 528:Generated_Source\PSoC4/CapSense_Sensing.c **** *    disabled
 529:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 530:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 531:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 532:Generated_Source\PSoC4/CapSense_Sensing.c **** *    other spurious error occurred.
 533:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 534:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 535:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidgetExt(uint32 widgetId, uint32 sensorId)
 536:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 537:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 538:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 540:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 541:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 542:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 543:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 11


 544:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 545:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 546:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 547:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 548:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 551:Generated_Source\PSoC4/CapSense_Sensing.c ****         (sensorId < CapSense_GET_SENSOR_COUNT(widgetId)))
 552:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 553:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 555:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 557:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 559:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 560:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 561:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 562:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 563:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 564:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 566:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 567:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 568:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 569:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 570:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 571:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 572:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidgetExt(widgetId, sensorId);
 573:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 574:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 575:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 576:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 577:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 578:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidgetExt(widgetId, sensorId);
 579:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 580:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 581:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 582:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 583:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 584:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidgetExt(widgetId, sensorId);
 585:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 586:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 587:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 588:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 589:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 590:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 591:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 592:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 593:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 594:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 595:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 596:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 597:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 598:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanExt
 599:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 600:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 12


 601:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Starts a conversion on the pre-configured sensor. This function requires
 603:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_SetupWidgetExt() function to set up the a
 604:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget.
 605:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 606:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function performs single scanning of one sensor in the widget configured
 608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  by the CapSense_SetupWidgetExt() function.
 609:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 610:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 611:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the user's specific
 612:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases (for faster execution time or pipeline scanning for example).
 613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called when no scanning is in progress. I.e.
 614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_IsBusy() returns a non-busy status.
 615:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 616:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The sensor must be preconfigured by using the
 617:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidgetExt() API prior to calling this function.
 618:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The sensor remains ready for a next scan if a previous scan was triggered
 619:Generated_Source\PSoC4/CapSense_Sensing.c **** *  by using the CapSense_ScanExt() function. In this case, calling
 620:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidgetExt() is not required every time before the
 621:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function. If a previous scan was triggered in
 622:Generated_Source\PSoC4/CapSense_Sensing.c **** *  any other way - CapSense_Scan(), CapSense_ScanAllWidgets() or
 623:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_RunTuner() - (see the CapSense_RunTuner() function
 624:Generated_Source\PSoC4/CapSense_Sensing.c **** *  description for more details), the sensor must be preconfigured again by
 625:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_SetupWidgetExt() API prior to calling the
 626:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function.
 627:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 628:Generated_Source\PSoC4/CapSense_Sensing.c **** *  If disconnection of the sensors is required after calling
 629:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt(), the CapSense_CSDDisconnectSns() or
 630:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_CSXDisconnectTx() or CapSense_CSXDisconnectRx()
 631:Generated_Source\PSoC4/CapSense_Sensing.c **** *  functions can be used.
 632:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 633:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 634:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 635:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 636:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 637:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 638:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 639:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 640:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 641:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanExt(void)
 642:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 643:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 644:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 645:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 646:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 647:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 648:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 649:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 650:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 651:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 652:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 653:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 654:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 655:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 656:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScanExt();
 657:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 13


 658:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 659:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 660:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 661:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScanExt();
 662:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 663:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 664:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 665:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 666:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScanExt();
 667:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 668:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 669:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 670:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 671:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 672:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 673:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 674:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 675:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 676:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 677:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 678:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 679:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitialize
 680:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 681:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 682:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 683:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 684:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 685:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 686:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 687:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 688:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 689:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 690:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 691:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 692:Generated_Source\PSoC4/CapSense_Sensing.c **** *     for the corresponding sensing mode.
 693:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 694:Generated_Source\PSoC4/CapSense_Sensing.c **** *     is enabled.
 695:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 696:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling the CapSense_Start API is the recommended method to initialize
 697:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense Component at power-up. The CapSense_SsInitialize()
 698:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 699:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 700:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 701:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return status
 702:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns status of operation:
 703:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Indicates successful initialization.
 704:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 705:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 706:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 707:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsInitialize(void)
 708:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 709:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 710:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 711:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 712:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_MFS_IMO == CapSense_MFS_METHOD))
 713:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 centerFreqTrim;
 714:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 14


 715:Generated_Source\PSoC4/CapSense_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 716:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_immunity[CapSense_FREQ_CHANNEL_0] = centerFreqTrim;
 717:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 718:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (centerFreqTrim < CapSense_IMO_FREQUENCY_OFFSET_F1)
 719:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 720:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 721:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_IMO_FREQUENCY_O
 722:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 723:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 724:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (centerFreqTrim > (CapSense_IMO_FREQUENCY_OFFSET_MAX - CapSense_IMO_FREQUENCY_OFFSE
 725:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 726:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 727:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_IMO_FREQUENCY_O
 728:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 729:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 730:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 731:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 732:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 733:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 734:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 735:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 736:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 737:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_MFS_IMO == CapSense_MFS_METHOD)) */
 738:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 739:Generated_Source\PSoC4/CapSense_Sensing.c ****     initStatus = CYRET_SUCCESS;
 740:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 741:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_DISABLE == CapSense_CSDV2)
 742:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsTrimIdacs();
 743:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 744:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 745:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
 746:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)))
 747:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsInitializeSourceSenseClk();
 748:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 749:Generated_Source\PSoC4/CapSense_Sensing.c ****               ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))) */
 750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 751:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set all IO states to the default state */
 752:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetAllIOsState((uint32)CapSense_SNS_CONNECTION_GROUND);
 753:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_dsRam.scanCurrentISC = CapSense_SNS_CONNECTION_GROUND;
 754:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSwitchSensingMode(CapSense_UNDEFINED_E);
 756:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MANY_SENSE_MODES_EN)
 757:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_EN)
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
 759:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 760:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSX_E);
 761:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_ISX_EN)
 762:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ISX_E);
 763:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 764:Generated_Source\PSoC4/CapSense_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 765:Generated_Source\PSoC4/CapSense_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 766:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 767:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 768:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (initStatus);
 769:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 770:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 771:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 15


 772:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetPinState
 774:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 775:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 776:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 777:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 778:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 779:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 780:Generated_Source\PSoC4/CapSense_Sensing.c **** *  associated with the ganged sensor is updated.
 781:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 782:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 783:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 784:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 785:Generated_Source\PSoC4/CapSense_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 786:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
 787:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 788:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 789:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function accepts the CapSense_SHIELD and
 790:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SENSOR states as an input only if there is at least
 791:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_TX_PIN
 792:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and CapSense_RX_PIN states as an input only if there is at least
 793:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSX widget in the project.
 794:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 795:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 796:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 797:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 798:Generated_Source\PSoC4/CapSense_Sensing.c **** *  automatically set the required pin states. They ignore changes
 799:Generated_Source\PSoC4/CapSense_Sensing.c **** *  in the design made by the CapSense_SetPinState() function.
 800:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 801:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 802:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 803:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 804:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensor.
 805:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense Configuration
 806:Generated_Source\PSoC4/CapSense_Sensing.c **** *  header file defined as CapSense_<WidgetName>_WDGT_ID.
 807:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 808:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorElement
 809:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 810:Generated_Source\PSoC4/CapSense_Sensing.c **** *  its pin state.
 811:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 812:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 813:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 814:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 815:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 816:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 817:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 818:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 819:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \endif
 820:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 821:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as:
 822:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_RX<RXNumber>_ID
 823:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_TX<TXNumber>_ID.
 824:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 825:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param state
 826:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the state of the sensor to be set:
 827:Generated_Source\PSoC4/CapSense_Sensing.c **** *     1. CapSense_GROUND - The pin is connected to the ground.
 828:Generated_Source\PSoC4/CapSense_Sensing.c **** *     2. CapSense_HIGHZ - The drive mode of the pin is set to High-Z
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 16


 829:Generated_Source\PSoC4/CapSense_Sensing.c **** *        Analog.
 830:Generated_Source\PSoC4/CapSense_Sensing.c **** *     3. CapSense_SHIELD - The shield signal is routed to the pin
 831:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 832:Generated_Source\PSoC4/CapSense_Sensing.c **** *     4. CapSense_SENSOR - The pin is connected to the scanning bus
 833:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method is enabled).
 834:Generated_Source\PSoC4/CapSense_Sensing.c **** *     5. CapSense_TX_PIN - The Tx or Lx signal is routed to the sensor
 835:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX or ISX sensing method is enabled).
 836:Generated_Source\PSoC4/CapSense_Sensing.c **** *     6. CapSense_RX_PIN - The pin is connected to the scanning bus
 837:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX or ISX sensing method is enabled).
 838:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 839:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 840:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 841:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 842:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 843:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdIndex;
 844:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 845:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr;
 846:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 847:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 848:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 849:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 850:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 851:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 852:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check the ganged sns flag */
 853:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[widgetId].staticConfig & CapSen
 854:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 855:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr = CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 856:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr += sensorElement;
 857:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId];
 858:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 859:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 860:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 861:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 862:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 863:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = 1u;
 864:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 865:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 866:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash
 867:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 868:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 869:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 870:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 872:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 873:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Reset HSIOM and PC registers */
 874:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 875:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 876:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 877:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 878:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 879:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (state)
 880:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 881:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_GROUND:
 882:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 883:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 884:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 885:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 17


 886:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 887:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 888:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 889:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_HIGHZ:
 890:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 891:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 892:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 893:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 894:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 895:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 896:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSOR:
 897:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Enable sensor */
 898:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDConnectSns(ioPtr);
 899:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 900:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 901:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 902:Generated_Source\PSoC4/CapSense_Sensing.c ****                 case CapSense_SHIELD:
 903:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 904:Generated_Source\PSoC4/CapSense_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 905:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_S
 906:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CyExitCriticalSection(interruptState);
 907:Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
 908:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 909:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 910:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 911:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 912:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_ISX_EN))
 913:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_TX_PIN:
 914:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 915:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_C
 916:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_GPIO_STRGDRV << i
 917:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 918:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 919:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 920:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_RX_PIN:
 921:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 922:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_A
 923:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << 
 924:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 925:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 926:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 927:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 928:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 929:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wrong state */
 930:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 931:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 932:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 933:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
 934:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 935:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 936:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 937:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 938:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 939:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDDisableMode
 940:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 941:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 942:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 18


 943:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSD mode.
 944:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 945:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 946:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 947:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 948:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 949:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 950:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  4. Disable Shield Electrodes.
 951:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 952:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 953:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void)
 954:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 955:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSDV2) && \
 956:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN))
 957:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 958:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 newRegValue;
 959:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 960:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect IDACA and IDACB */
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 962:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 964:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 965:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)) */
 966:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 967:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
 968:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_CMOD_HSIOM_MASK, 0u);
 969:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 970:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 971:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDElectrodeCheck();
 972:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 973:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 974:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 975:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 976:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_CSH_HSIOM_MASK, 0u);
 977:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 978:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 979:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 980:Generated_Source\PSoC4/CapSense_Sensing.c ****              (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
 981:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableShieldElectrodes();
 982:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 983:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 984:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 985:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 986:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 987:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 988:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 989:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableCSXMode
 990:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 991:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 992:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 993:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSX mode.
 994:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 995:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 996:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 997:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 998:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 999:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 19


1000:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1001:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void)
1002:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1003:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
1004:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_CintA_HSIOM_MASK, 0u);
1005:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
1006:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_CintB_HSIOM_MASK, 0u);
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
1008:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXElectrodeCheck();
1009:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1010:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1012:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1013:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
1014:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1015:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableISXMode
1016:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1017:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1018:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1019:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables ISX mode.
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1021:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1022:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
1023:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
1025:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1026:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void)
1028:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1029:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
1030:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_CintA_HSIOM_MASK, 0u);
1031:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
1032:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_CintB_HSIOM_MASK, 0u);
1033:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
1034:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXElectrodeCheck();
1035:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_DigPrt2_Stop();
1036:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_USES_PORT_3)
1037:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DigPrt3_Stop();
1038:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1039:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1040:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1041:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1042:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1043:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1044:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSwitchSensingMode
1045:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1046:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1047:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1048:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function changes the Сomponent settings for operation in a specified
1049:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensing mode.
1050:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1051:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1052:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function performs following tasks:
1053:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Releasing the CSD HW block.
1054:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnecting external capacitors.
1055:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Setting new mode.
1056:Generated_Source\PSoC4/CapSense_Sensing.c **** *  4. Configuring HW to the new sensing mode.
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 20


1057:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1058:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mode
1059:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the scan mode:
1060:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSD_E
1061:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSX_E
1062:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_ISX_E
1063:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_BIST_E
1064:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_UNDEFINED_E
1065:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1066:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ENUM mode)
1068:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
1070:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1071:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* The requested mode differs to the current one. Disable the current mode */
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == CapSense_currentSenseMethod)
1073:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1074:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
1075:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDDisableMode();
1076:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1077:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1078:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == CapSense_currentSenseMethod)
1079:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1080:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
1081:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableCSXMode();
1082:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1083:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1084:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == CapSense_currentSenseMethod)
1085:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1086:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
1087:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableISXMode();
1088:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1089:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1090:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == CapSense_currentSenseMethod)
1091:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1092:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1093:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistDisableMode();
1094:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1095:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1096:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
1097:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1098:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ADC_EN)
1099:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Release ADC resources */
1100:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_AdcReleaseResources();
1101:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1102:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1103:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1104:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Enable the specified mode */
1105:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == mode)
1106:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1107:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
1108:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
1109:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDInitialize();
1110:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
1111:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1112:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1113:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == mode)
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 21


1114:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1115:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
1116:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
1117:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXInitialize();
1118:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSX_E;
1119:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1120:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1121:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == mode)
1122:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1123:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
1124:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
1125:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXInitialize();
1126:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_ISX_E;
1127:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1128:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1129:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == mode)
1130:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1131:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1132:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistInitialize();
1133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_BIST_E;
1134:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1135:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1136:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
1137:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1139:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1140:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1141:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1142:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1143:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1144:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1145:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetAllIOsState
1146:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1147:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1148:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1149:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all electrodes into a default state.
1150:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1151:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1152:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
1153:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
1154:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - Strong drive.
1155:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
1156:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1157:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the ADC channels into a default state:
1158:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
1159:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - HiZ-Analog.
1160:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
1161:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1162:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly from the application
1163:Generated_Source\PSoC4/CapSense_Sensing.c **** *  layer.
1164:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1165:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1166:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetAllIOsState(uint32 state)
1167:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1168:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
1169:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1170:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 22


1171:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1172:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newPinPcVal;
1173:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newPinHsiomVal;
1174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1175:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 tmpPcDrRegValue;
1176:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 tmpHsiomRegValue;
1177:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1178:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *snsIoPtr;
1179:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1180:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(state)
1181:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1182:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_GROUND:
1183:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_STRONG;
1184:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1185:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1186:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_HIGHZ:
1187:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
1188:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1189:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1190:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_SHIELD:
1191:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
1192:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_CSD_SHIELD;
1193:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1194:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
1195:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_STRONG;
1196:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1197:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1198:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1199:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1200:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes */
1201:Generated_Source\PSoC4/CapSense_Sensing.c ****     snsIoPtr = &CapSense_ioList[0u];
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_TOTAL_ELECTRODES; loopIndex++)
1203:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1204:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
1205:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1206:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue = CY_GET_REG32 (snsIoPtr->hsiomPtr);
1207:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue &= ~(snsIoPtr->hsiomMask);
1208:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
1209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1210:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue = CY_GET_REG32 (snsIoPtr->pcPtr);
1211:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << snsIoPtr->shift);
1212:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue |=  (newPinPcVal << snsIoPtr->shift);
1213:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->pcPtr, tmpPcDrRegValue);
1214:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1215:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue |=  (newPinHsiomVal << snsIoPtr->hsiomShift);
1216:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
1217:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1218:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue = CY_GET_REG32 (snsIoPtr->drPtr);
1219:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(snsIoPtr->mask);
1220:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->drPtr, tmpPcDrRegValue);
1221:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1222:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
1223:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1224:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get next electrode */
1225:Generated_Source\PSoC4/CapSense_Sensing.c ****         snsIoPtr++;
1226:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1227:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 23


1228:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSD_EN) &&\
1229:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
1230:Generated_Source\PSoC4/CapSense_Sensing.c ****          (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
1231:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDSetShieldElectrodesState(state);
1232:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
1233:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1234:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if(CapSense_ENABLE == CapSense_ADC_EN)
1235:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ClearAdcChannels();
1236:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
1237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1238:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1239:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1240:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
1241:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1242:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsReleaseResources()
1243:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1247:Generated_Source\PSoC4/CapSense_Sensing.c **** *  default state.
1248:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1249:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1250:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The function performs following tasks:
1251:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1252:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1253:Generated_Source\PSoC4/CapSense_Sensing.c **** *     Cmod for CSD mode)
1254:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1255:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1256:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
1257:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
1258:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Resources released successfully.
1259:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1260:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1261:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1262:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsReleaseResources(void)
1263:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1264:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1265:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1266:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
1267:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1268:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1269:Generated_Source\PSoC4/CapSense_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1270:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1271:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
1272:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1273:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
1274:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableCSXMode();
1275:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1276:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1277:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
1278:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableISXMode();
1279:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1280:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1281:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
1282:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableMode();
1283:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1284:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 24


1285:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1286:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_BistDisableMode();
1287:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1288:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1289:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSetAllIOsState((uint32)CapSense_SNS_CONNECTION_GROUND);
1290:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1291:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1292:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1293:Generated_Source\PSoC4/CapSense_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1294:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1295:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1296:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1297:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1298:Generated_Source\PSoC4/CapSense_Sensing.c ****     return busyStatus;
1299:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1300:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1301:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1302:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1303:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1304:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsPostAllWidgetsScan
1305:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1306:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1307:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1308:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
1309:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1310:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1311:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is the function used by the CapSense ISR to implement multiple widget
1312:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanning.
1313:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Should not be used by the application layer.
1314:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1315:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1316:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsPostAllWidgetsScan(void)
1317:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1318:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1319:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Increment widget index
1320:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Check if all the widgets are scanned
1321:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1322:Generated_Source\PSoC4/CapSense_Sensing.c ****     */
1323:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (1u != CapSense_TOTAL_WIDGETS)
1324:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus postScanStatus;
1325:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1326:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1327:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1328:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_widgetIndex++;
1329:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1330:Generated_Source\PSoC4/CapSense_Sensing.c ****             postScanStatus = CapSense_SetupWidget((uint32)CapSense_widgetIndex);
1331:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1332:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1333:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1334:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1335:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1336:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1337:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_requestScanAllWidget = CapSense_DISABLE;
1338:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1339:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_Scan();
1340:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1341:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 25


1342:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1343:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1344:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (CapSense_ENABLE == CapSense_CSD_EN))
1345:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1346:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]
1347:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1348:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable the CSD block */
1349:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
1350:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1351:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1352:Generated_Source\PSoC4/CapSense_Sensing.c ****                            (CapSense_ENABLE == CapSense_CSD_EN)) */
1353:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update scan Counter */
1355:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCounter++;
1356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1358:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1359:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure */
1360:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1361:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1362:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1363:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
1364:Generated_Source\PSoC4/CapSense_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
1365:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1366:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1367:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1368:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1369:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1370:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1371:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1372:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1373:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
1374:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1375:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1376:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1377:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1378:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsIsrInitialize
1379:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1380:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1381:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1382:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1383:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1384:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1385:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1386:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1387:Generated_Source\PSoC4/CapSense_Sensing.c **** *  proper working of the Component.
1388:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1389:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param address
1390:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1391:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1392:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1393:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsIsrInitialize(cyisraddress address)
1394:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1395:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
1396:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1397:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1398:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 26


1399:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1400:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetModClkClockDivider
1401:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1402:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1403:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1404:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1405:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1406:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1407:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1408:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1409:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1410:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1411:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1412:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param modClk
1413:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The divider value for the modulator clock.
1414:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1415:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1416:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetModClkClockDivider(uint32 modClk)
1417:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1418:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1419:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Stop modulator clock */
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1421:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
1422:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CapSense_MODCLK_CMD_DIV_SHIFT)|
1423:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_MODCLK_CMD_DISABLE_MASK));
1424:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1425:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1426:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense modClk.
1427:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1428:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1429:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1430:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1431:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1432:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1433:Generated_Source\PSoC4/CapSense_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_MODCLK_CMD_PTR) & CapSense_MODCLK_CMD_ENABLE_MASK))
1434:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1435:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1436:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1437:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1438:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1440:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
1441:Generated_Source\PSoC4/CapSense_Sensing.c ****                   ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_MODCLK_CMD_PA_DIV_SHIFT) |
1442:Generated_Source\PSoC4/CapSense_Sensing.c ****                   CapSense_MODCLK_CMD_ENABLE_MASK));
1443:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1444:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1445:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1446:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1447:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1448:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) &
1449:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(~CapSense_ModClk__ENABLE_MASK));
1450:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1451:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1452:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Update ModClk clock divider.
1453:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1454:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1455:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_ModClk__DIVIDE
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 27


1456:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= (modClk - 1u);
1457:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, newRegValue);
1458:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1459:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set bit to enable ModClk clock. */
1460:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1461:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) |
1462:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ModClk__ENABLE_MASK);
1463:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1464:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1465:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1466:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1467:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1468:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetSnsClockDivider
1469:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1470:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1471:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1472:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1473:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the sense clock.
1474:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1475:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1476:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1477:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1478:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1479:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1480:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1481:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1482:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1483:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1484:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetSnsClockDivider(uint32 snsClk)
1485:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1486:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
1487:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1488:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1489:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1490:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense clock.
1491:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1492:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1493:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1494:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_SENSE_PERIOD_PTR);
1495:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
1496:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
1497:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
1498:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1499:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1500:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Stop sense clock clock   */
1501:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1502:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SnsClk__DIV_ID <<
1503:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CapSense_SNSCLK_CMD_DIV_SHIFT)|
1504:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SNSCLK_CMD_DISABLE_MASK));
1505:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1506:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1507:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Set divider value for sense clock.
1508:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1509:Generated_Source\PSoC4/CapSense_Sensing.c ****          * to dividing by 1.
1510:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1511:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1512:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 28


1513:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
1514:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) & CapSense_SNSCLK_CMD_ENABLE_MASK))
1515:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1516:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1517:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1518:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1519:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1520:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1521:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT) |
1522:Generated_Source\PSoC4/CapSense_Sensing.c ****                       ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_SNSCLK_CMD_PA_DIV_SHIFT) |
1523:Generated_Source\PSoC4/CapSense_Sensing.c ****                       CapSense_SNSCLK_CMD_ENABLE_MASK));
1524:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
1525:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
1526:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1527:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1528:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1529:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) &
1530:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(~(uint32)CapSense_SnsClk__ENABLE_MASK));
1531:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1532:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1533:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Update snsClk clock divider.
1534:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
1535:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1536:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_SnsClk__DI
1537:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (snsClk - 1u);
1538:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, newRegValue);
1539:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1540:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1541:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1542:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) |
1543:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_SnsClk__ENABLE_MASK);
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1545:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1546:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1547:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1548:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1549:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1550:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetClockDividers
1551:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1552:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1553:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1554:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1555:Generated_Source\PSoC4/CapSense_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1556:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1557:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1558:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1559:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1560:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1561:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1562:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1563:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1564:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1565:Generated_Source\PSoC4/CapSense_Sensing.c **** *  modClk The divider value for the modulator clock.
1566:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1567:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1568:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1569:Generated_Source\PSoC4/CapSense_Sensing.c **** {
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 29


1570:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
1571:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetModClkClockDivider(modClk);
1572:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1573:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Sns clock */
1574:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetSnsClockDivider(snsClk);
1575:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1576:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1577:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1578:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ANYMODE_AUTOCAL)
1579:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1580:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateWidget
1581:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1582:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1583:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1584:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1585:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the
1586:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget prior to calibration.
1587:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1588:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1589:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function performs exactly the same tasks as
1590:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_CalibrateAllWidgets, but only for a specified widget.
1591:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
1592:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the Enable compensation IDAC parameter.
1593:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1594:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1595:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1596:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1597:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1598:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1599:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1600:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1601:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1602:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1603:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1604:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1605:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1606:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1607:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1608:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1609:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1610:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1611:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1612:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1613:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the specified widget calibration:
1614:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1615:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1616:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1617:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1618:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1619:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1620:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateWidget(uint32 widgetId)
1621:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1622:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1623:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1624:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1626:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_TOTAL_WIDGETS <= widgetId)
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 30


1627:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1628:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1629:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1630:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1631:Generated_Source\PSoC4/CapSense_Sensing.c ****             /*
1632:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1633:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1634:Generated_Source\PSoC4/CapSense_Sensing.c ****              */
1635:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1636:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (0u != CapSense_GET_WIDGET_EN_STATUS(widgetId))
1637:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1638:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1639:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1640:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
1641:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1642:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1643:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1644:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif  /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1645:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1646:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1647:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1648:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Exit from the loop because of a fail */
1649:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
1650:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1651:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1652:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1653:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_MANY_WIDGET_METHODS_EN)
1654:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1655:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_ISX_IDAC_AUTOCAL_EN)
1656:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_ISX_E ==
1657:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1658:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1659:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1660:Generated_Source\PSoC4/CapSense_Sensing.c ****                        CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1661:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1662:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_ISX_IDAC_AUTOCAL_EN) */
1663:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1664:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1665:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN)
1666:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSX_E ==
1667:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1668:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1669:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1670:Generated_Source\PSoC4/CapSense_Sensing.c ****                        calibrateStatus = CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUN
1671:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1672:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN) */
1673:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1674:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN)
1675:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1676:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1677:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1678:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSD widget */
1679:Generated_Source\PSoC4/CapSense_Sensing.c ****                         calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOU
1680:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1681:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN) */
1682:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1683:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 31


1684:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSD_EN)
1685:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOUNT_CAL_L
1686:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1687:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1688:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSX_EN)
1689:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_L
1690:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1691:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1692:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_ISX_EN)
1693:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1694:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1695:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1696:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1697:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1698:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (0u);
1699:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1700:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1701:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1703:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1704:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1705:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateAllWidgets
1706:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1707:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1708:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1709:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1710:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
1711:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  prior to calibration.
1712:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1713:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1714:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1715:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1716:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1717:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1718:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1719:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1720:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1721:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1722:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1723:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1724:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endcond
1725:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1726:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1727:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1728:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1729:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1730:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1731:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the calibration process:
1732:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1733:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1734:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1735:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1736:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1737:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateAllWidgets(void)
1738:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1740:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 32


1741:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1743:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1744:Generated_Source\PSoC4/CapSense_Sensing.c ****             calibrateStatus |= CapSense_CalibrateWidget(wdgtIndex);
1745:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1746:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1747:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1748:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1749:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
1750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1751:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1752:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
1753:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTuneWidget
1755:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1757:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1758:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense
1759:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  operation for a desired widget.
1760:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1761:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1762:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
1763:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1764:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1765:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
1766:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1767:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1768:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1769:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of a desired widget.
1770:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1771:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1772:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1773:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1774:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1775:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
1776:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1777:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1778:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1779:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1780:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTuneWidget(uint32 widgetId)
1781:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1782:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1783:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1784:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsIndex;
1785:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 inputSnsClk;
1786:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 minSnsClkDiv;
1787:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 minSnsClkDivTmp;
1788:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1789:Generated_Source\PSoC4/CapSense_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1790:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1791:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxRaw = 0u;
1792:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxCp = 0u;
1793:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxIdacComp = 0u;
1794:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1795:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1796:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 maxCpSnsId = 0u;
1797:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 maxCpRowSnsId = 0u;
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 33


1798:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1800:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_WD_STRUCT const *ptrFlashWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1801:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidget->
1802:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
1803:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1804:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find input of sensor clock frequency */
1805:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSDV2)
1806:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1807:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = ((uint32)CYDEV_BCLK__HFCLK__KHZ / (uint32)CapSense_dsRam.modCsdClk);
1808:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1809:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for all Fourth-generation
1810:Generated_Source\PSoC4/CapSense_Sensing.c ****              * CSD HW block based devices.
1811:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1812:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_MIN_SNS_CLK_DIVIDER;
1813:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1814:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained */
1815:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1816:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1817:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for PSoC 4100 and PSoC 4200
1818:Generated_Source\PSoC4/CapSense_Sensing.c ****                device families.
1819:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1820:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_dsRam.modCsdClk;
1821:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1822:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1823:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk) >> CapSense_FLIP_FLOP
1824:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1825:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for all Fourth-generation
1826:Generated_Source\PSoC4/CapSense_Sensing.c ****              * CSD HW block based device except PSoC 4100 and PSoC 4200 device families.
1827:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1828:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_MIN_SNS_CLK_DIVIDER;
1829:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1830:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1831:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Minimum value of SnsClk divider required to ensure the CSD HW block
1832:Generated_Source\PSoC4/CapSense_Sensing.c ****          * operation in allowed frequency range.
1833:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1834:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDivTmp = inputSnsClk * CapSense_AUTOTUNE_CAL_UNITS;
1835:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDivTmp /= CapSense_CSD_SNS_FREQ_KHZ_MAX;
1836:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1837:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (minSnsClkDiv < minSnsClkDivTmp)
1838:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1839:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = minSnsClkDivTmp;
1840:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1841:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1842:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDiv = (minSnsClkDiv + (CapSense_AUTOTUNE_CAL_UNITS - 1u)) / CapSense_AUTOTUNE_CAL_
1843:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1844:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Make divider even */
1845:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (0u != (minSnsClkDiv & 0x01u))
1846:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1847:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv++;
1848:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1849:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1850:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize auto-tuning configuration structure */
1851:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkInputClock = (uint16)inputSnsClk;
1852:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_CSD_SNSCLK_R_CONST;
1853:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
1854:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.fingerCap = ptrRamWidget->fingerCap;
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 34


1855:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sigPFC = &ptrRamWidget->sigPFC;
1856:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1857:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1858:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #1:
1859:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - performing the first calibration at fixed settings
1860:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting maximum sensor Cp
1861:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sense clock frequency based on Cp
1862:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1863:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1864:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->resolution = CapSense_AUTOTUNE_CALIBRATION_RESOLUTION;
1865:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1866:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->snsClk = (uint16)(inputSnsClk / CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ);
1867:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->snsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1868:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1869:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1870:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->rowSnsClk = (uint16)(inputSnsClk / CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ
1871:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->rowSnsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1872:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1873:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1874:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target */
1875:Generated_Source\PSoC4/CapSense_Sensing.c ****         (void)CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
1876:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1877:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find raw count and IDAC of a sensor with maximum Cp */
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (snsIndex = 0u; snsIndex < ptrFlashWidget->numCols; snsIndex++)
1879:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1880:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1881:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxIdacComp < ptrRamSensor->idacComp[0u])
1882:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1883:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1884:Generated_Source\PSoC4/CapSense_Sensing.c ****                         maxCpSnsId = snsIndex;
1885:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1886:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxIdacComp = ptrRamSensor->idacComp[0u];
1887:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
1888:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1889:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1890:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxRaw < ptrRamSensor->raw[0u])
1891:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1892:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1893:Generated_Source\PSoC4/CapSense_Sensing.c ****                         maxCpSnsId = snsIndex;
1894:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1895:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
1896:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1897:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1898:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamSensor++;
1899:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1900:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1901:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Update auto-tuning configuration structure */
1902:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
1903:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacComp = (uint8)maxIdacComp;
1904:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue;
1905:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
1906:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.calTarget = (uint16)((maxRaw * CapSense_AUTOTUNE_CAL_UNITS) /
1907:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
1908:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1909:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find sensor Cp and optimum sense clock value */
1910:Generated_Source\PSoC4/CapSense_Sensing.c ****         maxCp = SmartSense_TunePrescalers(&autoTuneConfig);
1911:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sensorCap = maxCp;
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 35


1912:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1913:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Increase sensor clock divider to valid value */
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(ptrRamWidget->snsClk < minSnsClkDiv)
1915:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1916:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->snsClk <<= 1u;
1917:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1918:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1919:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Do the same for row for touchpad or matrix buttons widgets */
1920:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1921:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1922:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
1923:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1924:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find a sensor with maximum Cp */
1925:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxRaw = 0u;
1926:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxIdacComp = 0u;
1927:Generated_Source\PSoC4/CapSense_Sensing.c ****                 for (snsIndex = ptrFlashWidget->numCols; snsIndex < ptrFlashWidget->totalNumSns; sn
1928:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1929:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1930:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (maxIdacComp < ptrRamSensor->idacComp[0u])
1931:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1932:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxCpRowSnsId = snsIndex;
1933:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxIdacComp = ptrRamSensor->idacComp[0u];
1934:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxRaw = ptrRamSensor->raw[0u];
1935:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1936:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
1937:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (maxRaw < ptrRamSensor->raw[0u])
1938:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1939:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxCpRowSnsId = snsIndex;
1940:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxRaw = ptrRamSensor->raw[0u];
1941:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1942:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1943:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrRamSensor++;
1944:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1945:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1946:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure auto-tuning configuration structure */
1947:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDacMod = ptrRamWidget->rowIdacMod[0u];
1948:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDacComp = (uint8)maxIdacComp;
1949:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrRamWidget->rowSnsClk;
1950:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)((maxRaw * CapSense_AUTOTUNE_CAL_UNITS) /
1951:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
1952:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1953:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find correct sense clock value */
1954:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxCp = SmartSense_TunePrescalers(&autoTuneConfig);
1955:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1956:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Save maximum sensor Cp and corresponding sensor Id */
1957:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (autoTuneConfig.sensorCap < maxCp)
1958:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1959:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.sensorCap = maxCp;
1960:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxCpSnsId = maxCpRowSnsId;
1961:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1962:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1963:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Increase sensor clock divider to valid value */
1964:Generated_Source\PSoC4/CapSense_Sensing.c ****                 while(ptrRamWidget->rowSnsClk < minSnsClkDiv)
1965:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1966:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrRamWidget->rowSnsClk <<= 1u;
1967:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1968:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 36


1969:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1970:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1971:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check tuning results */
1972:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_AUTOTUNE_CP_MAX < maxCp)
1973:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1974:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneStatus = CYRET_BAD_DATA;
1975:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1976:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1977:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1978:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #2:
1979:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with new sense clock frequency
1980:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting resolution
1981:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1982:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1983:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target with newly defined sense frequenc
1984:Generated_Source\PSoC4/CapSense_Sensing.c ****         (void)CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
1985:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1986:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue;
1987:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
1988:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
1989:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1990:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1991:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1992:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
1993:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1994:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxCpSnsId >= ptrFlashWidget->numCols)
1995:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1996:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.iDacMod = ptrRamWidget->rowIdacMod[0u];
1997:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.ptrSenseClk = &ptrRamWidget->rowSnsClk;
1998:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1999:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2000:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2001:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2002:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find resolution */
2003:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
2004:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2005:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
2006:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #3:
2007:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - selecting a widget clock source if AUTO
2008:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
2009:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - updating sensitivity
2010:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
2011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2012:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune widget sensitivity */
2013:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSetWidgetSenseClkSrc(widgetId, ptrRamWidget);
2014:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2015:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target with newly defined resolution */
2016:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneStatus |= CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
2017:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2018:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2019:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(widgetId);
2020:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2021:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2022:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
2023:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2024:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2025:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 37


2026:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2027:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTune
2028:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2029:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2030:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2031:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense
2032:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  operation.
2033:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2034:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2035:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
2036:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
2037:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
2038:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
2039:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
2040:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2041:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2042:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
2043:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
2044:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
2045:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2046:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2047:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTune(void)
2048:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2049:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
2050:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
2051:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2052:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune each CSD widget */
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2054:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2055:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
2056:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2057:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2058:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_SsAutoTuneWidget(wdgtIndex);
2059:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2060:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2061:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
2062:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2063:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
2064:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2065:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2066:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
2067:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
2068:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) ||\
2069:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
2070:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2071:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSinking
2072:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2073:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2074:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2075:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
2076:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
2077:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2078:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2079:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
2080:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2081:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2082:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 38


2083:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void)
2084:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2085:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
2086:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2087:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sinking Mode */
2088:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM2_PTR) & ~CapSense_IDAC_TRIM2_MOD_SNK_MASK;
2089:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
2090:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK) ;
2091:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2092:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2093:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Comp iDAC Sinking Mode */
2094:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM2_COMP_SNK_MASK;
2095:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
2096:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
2097:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
2098:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2099:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
2100:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM2_PTR, trimValue);
2101:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2102:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
2103:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
2104:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2106:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
2107:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) || \
2108:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
2109:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2110:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSourcing
2111:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2112:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2113:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2114:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
2115:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
2116:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2117:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2118:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
2119:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2120:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2121:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2122:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void)
2123:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2124:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
2125:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2126:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sourcing Mode */
2127:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM1_PTR) & ~CapSense_IDAC_TRIM1_MOD_SRC_MASK;
2128:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
2129:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK);
2130:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2131:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2132:Generated_Source\PSoC4/CapSense_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
2133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM1_COMP_SRC_MASK;
2134:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
2135:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
2136:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
2137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2138:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
2139:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM1_PTR, trimValue);
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 39


2140:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2141:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
2142:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
2143:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2144:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2145:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2146:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsTrimIdacs
2147:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2148:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2149:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2150:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
2151:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
2152:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2153:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2154:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
2155:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
2156:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  source mode based on sink/source mode configuration.
2157:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2158:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2159:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void)
2161:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2162:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)
2163:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
2164:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
2165:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
2166:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
2167:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)
2168:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
2169:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2170:Generated_Source\PSoC4/CapSense_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
2171:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN) */
2172:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2173:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_DISABLE == CapSense_CSDV2) */
2174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2175:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2176:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
2177:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2178:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeImoFreq
2179:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2180:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2181:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2182:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the IMO frequency.
2183:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2184:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2185:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
2186:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  trims are contained in the CapSense_immunity[value] array for each
2187:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  frequency channel.
2188:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2189:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param value The frequency channel ID.
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2191:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeImoFreq(uint32 value)
2193:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2194:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_immunity[value]);
2195:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2196:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 40


2197:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2198:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeClkFreq
2199:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2200:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2201:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2202:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
2203:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
2204:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2205:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2206:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
2207:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
2208:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2209:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param chId
2210:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The frequency channel ID.
2211:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2212:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2213:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeClkFreq(uint32 chId)
2214:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2215:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsClkDivider;
2216:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset1 = 0u;
2217:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset2 = 0u;
2218:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2219:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2220:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSDV2)
2221:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2222:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2223:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2224:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2225:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2226:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2227:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 snsClkSrc;
2228:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2229:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2230:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2231:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((0u != CapSense_TOTAL_CSD_WIDGETS) || \
2232:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_TOTAL_CSX_WIDG
2233:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_dsFlash.wdgtArray[CapSense_wid
2234:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdg
2235:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2236:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2237:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]))
2238:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2239:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2240:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2241:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get sensor clock divider value */
2242:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
2243:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsdClk;
2244:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2245:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2246:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2247:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2248:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2249:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2250:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2251:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2252:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2253:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 41


2254:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2255:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2256:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2257:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2258:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2259:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2260:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSD_MFS_DIVIDER_OFFSET_F1;
2261:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSD_MFS_DIVIDER_OFFSET_F2;
2262:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2263:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2264:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2265:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2266:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Get sense clk source */
2267:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2268:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2269:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2270:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2271:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2272:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2273:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2274:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2275:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2276:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2277:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2278:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2279:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2280:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2281:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2282:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2283:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2284:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2285:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2286:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset1 <<= 1u;
2287:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset2 <<= 1u;
2288:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2289:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2290:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2291:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2292:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2293:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2294:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2295:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2296:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2297:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2298:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2299:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2300:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2301:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2302:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2303:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2304:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2305:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2306:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2307:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2308:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2309:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2310:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 42


2311:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2312:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2313:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2314:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
2315:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2316:Generated_Source\PSoC4/CapSense_Sensing.c ****                     conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)pt
2317:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_SEQ_NORM_CNT
2318:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2319:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2320:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2321:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2322:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2323:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2324:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2325:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2326:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2327:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2328:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider >>= 1;
2329:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (snsClkDivider == 0u)
2330:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2331:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = 1u;
2332:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2333:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2334:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2335:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2336:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2337:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2338:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2339:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2340:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2341:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2342:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2343:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2344:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
2345:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2346:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSX_WIDGETS)
2347:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2348:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN)
2349:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsxClk;
2350:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2351:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2352:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2353:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSX_MFS_DIVIDER_OFFSET_F1;
2354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSX_MFS_DIVIDER_OFFSET_F2;
2355:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2358:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2359:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2360:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2361:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2362:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2363:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2364:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2365:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2366:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2367:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 43


2368:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2369:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2370:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2371:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2372:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2373:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2374:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2375:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2376:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2377:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2378:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2379:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSX_WIDGETS) */
2380:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2381:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2382:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0);
2383:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2384:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2385:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2386:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2387:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2388:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2389:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) || \
2390:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && \
2391:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2)))
2392:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2393:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitializeSourceSenseClk
2394:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2395:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2396:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2397:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2398:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2400:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2401:Generated_Source\PSoC4/CapSense_Sensing.c **** *  for all CSD widgets.
2402:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2403:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2404:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsInitializeSourceSenseClk(void)
2405:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2406:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
2407:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2408:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2410:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2411:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
2412:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2413:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2414:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2415:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
2416:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2418:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2419:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2420:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2421:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2422:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2423:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2424:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)) &
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 44


2425:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2426:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2427:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2428:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2429:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(wdgtIndex);
2430:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2431:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2432:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2433:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
2434:Generated_Source\PSoC4/CapSense_Sensing.c ****            (((CapSense_ENABLE == CapSense_CSX_EN) || \
2435:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_ISX_EN)) && \
2436:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2))) */
2437:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2438:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2439:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2440:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2441:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetSenseClkSrc
2442:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2443:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2444:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2445:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2446:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2447:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2448:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2449:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2450:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2451:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2452:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2453:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2454:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget.
2455:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2456:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2457:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
2458:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2459:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2460:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2461:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2462:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2463:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2464:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2465:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2466:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2467:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2468:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2469:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2470:Generated_Source\PSoC4/CapSense_Sensing.c ****             snsClkDivider = CapSense_SsCSDGetColSnsClkDivider(wdgtIndex);
2471:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2472:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdg
2474:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
2475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2476:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2477:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2478:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /*
2479:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2480:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * average PRS frequency through the argument.
2481:Generated_Source\PSoC4/CapSense_Sensing.c ****                     */
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 45


2482:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->res
2483:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2484:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2485:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2486:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2487:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2488:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * average PRS frequency through the argument.
2489:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2490:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resolut
2491:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2492:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2493:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2494:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2495:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2496:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2497:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2498:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2499:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2500:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2501:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2502:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[wdgtIn
2503:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[w
2504:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2505:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2506:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_SsCSDGetRowSnsClkDivider(wdgtIndex);
2507:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2508:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if(CapSense_ENABLE == CapSense_CSDV2)
2509:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2510:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2511:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2512:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /*
2513:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2514:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * average PRS frequency through the argument.
2515:Generated_Source\PSoC4/CapSense_Sensing.c ****                             */
2516:Generated_Source\PSoC4/CapSense_Sensing.c ****                             lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrW
2517:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2518:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2519:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2520:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
2521:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
2522:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * average PRS frequency through the argument.
2523:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
2524:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt-
2525:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = 0u;
2526:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2527:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
2528:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2529:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrScale = 0u;
2530:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2531:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR
2532:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2533:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2534:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2535:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2536:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2537:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2538:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 46


2539:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2540:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetTxClkSrc
2541:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2542:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2543:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2544:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2545:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2546:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2547:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2548:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2549:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2550:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2551:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2552:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2553:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2554:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2555:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
2556:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2557:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2558:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2559:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2560:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
2561:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2562:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 conversionsNum;
2563:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2564:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2565:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2566:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)
2567:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2568:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2569:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider = CapSense_SsCSXGetTxClkDivider(wdgtIndex);
2570:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2571:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2572:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2573:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
2574:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2575:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Unused function argument */
2576:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)wdgtIndex;
2577:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2578:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2579:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_CSX_TX_CLK_SOURCE;
2580:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2581:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Unused function argument */
2582:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex;
2583:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) */
2584:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2586:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2587:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)) */
2588:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2589:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2590:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
2591:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2592:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2593:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
2595:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 47


2596:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
2597:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2598:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrSize
2599:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2600:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2601:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2603:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2604:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2605:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2606:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requirements:
2607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2609:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2610:Generated_Source\PSoC4/CapSense_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2611:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2612:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  resolution The widget resolution.
2615:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2616:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2617:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2618:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2619:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2620:Generated_Source\PSoC4/CapSense_Sensing.c **** {
  28              		.loc 1 2620 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 0400     		movs	r4, r0
  40 0004 0D00     		movs	r5, r1
  41              	.LVL1:
2621:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 lfsrSize = 0u;
2622:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2623:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Find LFSR value */
2624:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((CapSense_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
  42              		.loc 1 2624 0
  43 0006 9F28     		cmp	r0, #159
  44 0008 08D9     		bls	.L2
  45              		.loc 1 2624 0 is_stmt 0 discriminator 1
  46 000a 1B4B     		ldr	r3, .L12
  47 000c 9942     		cmp	r1, r3
  48 000e 05D9     		bls	.L2
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2626:Generated_Source\PSoC4/CapSense_Sensing.c ****        (0uL == (conversionsNum % CapSense_SNSCLK_SSC4_PERIOD)))
  49              		.loc 1 2626 0 is_stmt 1
  50 0010 1A49     		ldr	r1, .L12+4
  51              	.LVL2:
  52 0012 2800     		movs	r0, r5
  53              	.LVL3:
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 48


  54 0014 FFF7FEFF 		bl	__aeabi_uidivmod
  55              	.LVL4:
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
  56              		.loc 1 2625 0
  57 0018 0029     		cmp	r1, #0
  58 001a 21D0     		beq	.L6
  59              	.L2:
2627:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2628:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC4;
2629:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2630:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
  60              		.loc 1 2630 0
  61 001c 9F2C     		cmp	r4, #159
  62 001e 09D9     		bls	.L4
  63              		.loc 1 2630 0 is_stmt 0 discriminator 1
  64 0020 FF23     		movs	r3, #255
  65 0022 5B00     		lsls	r3, r3, #1
  66 0024 9D42     		cmp	r5, r3
  67 0026 05D9     		bls	.L4
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2632:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC3_PERIOD)))
  68              		.loc 1 2632 0 is_stmt 1
  69 0028 1549     		ldr	r1, .L12+8
  70 002a 2800     		movs	r0, r5
  71 002c FFF7FEFF 		bl	__aeabi_uidivmod
  72              	.LVL5:
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
  73              		.loc 1 2631 0
  74 0030 0029     		cmp	r1, #0
  75 0032 17D0     		beq	.L7
  76              	.L4:
2633:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2634:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC3;
2635:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2636:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
  77              		.loc 1 2636 0
  78 0034 9F2C     		cmp	r4, #159
  79 0036 07D9     		bls	.L5
  80              		.loc 1 2636 0 is_stmt 0 discriminator 1
  81 0038 7E2D     		cmp	r5, #126
  82 003a 05D9     		bls	.L5
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2638:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC2_PERIOD)))
  83              		.loc 1 2638 0 is_stmt 1
  84 003c 7F21     		movs	r1, #127
  85 003e 2800     		movs	r0, r5
  86 0040 FFF7FEFF 		bl	__aeabi_uidivmod
  87              	.LVL6:
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
  88              		.loc 1 2637 0
  89 0044 0029     		cmp	r1, #0
  90 0046 0FD0     		beq	.L8
  91              	.L5:
2639:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2640:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC2;
2641:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2642:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 49


  92              		.loc 1 2642 0
  93 0048 9F2C     		cmp	r4, #159
  94 004a 0FD9     		bls	.L9
  95              		.loc 1 2642 0 is_stmt 0 discriminator 1
  96 004c 3E2D     		cmp	r5, #62
  97 004e 0FD9     		bls	.L10
2643:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2644:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC1_PERIOD)))
  98              		.loc 1 2644 0 is_stmt 1
  99 0050 3F21     		movs	r1, #63
 100 0052 2800     		movs	r0, r5
 101 0054 FFF7FEFF 		bl	__aeabi_uidivmod
 102              	.LVL7:
2643:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
 103              		.loc 1 2643 0
 104 0058 0029     		cmp	r1, #0
 105 005a 0BD0     		beq	.L11
2645:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2646:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC1;
2647:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2648:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2649:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2650:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
 106              		.loc 1 2650 0
 107 005c 0020     		movs	r0, #0
 108 005e 0AE0     		b	.L3
 109              	.L6:
2628:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 110              		.loc 1 2628 0
 111 0060 0420     		movs	r0, #4
 112 0062 08E0     		b	.L3
 113              	.L7:
2634:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 114              		.loc 1 2634 0
 115 0064 0320     		movs	r0, #3
 116 0066 06E0     		b	.L3
 117              	.L8:
2640:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 118              		.loc 1 2640 0
 119 0068 0220     		movs	r0, #2
 120 006a 04E0     		b	.L3
 121              	.L9:
 122              		.loc 1 2650 0
 123 006c 0020     		movs	r0, #0
 124 006e 02E0     		b	.L3
 125              	.L10:
 126 0070 0020     		movs	r0, #0
 127 0072 00E0     		b	.L3
 128              	.L11:
2646:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 129              		.loc 1 2646 0
 130 0074 0120     		movs	r0, #1
 131              	.L3:
 132              	.LVL8:
2651:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2652:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2653:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (lfsrSize);
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 50


2654:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 133              		.loc 1 2654 0
 134              		@ sp needed
 135              	.LVL9:
 136              	.LVL10:
 137 0076 70BD     		pop	{r4, r5, r6, pc}
 138              	.L13:
 139              		.align	2
 140              	.L12:
 141 0078 FE030000 		.word	1022
 142 007c FF030000 		.word	1023
 143 0080 FF010000 		.word	511
 144              		.cfi_endproc
 145              	.LFE23:
 146              		.size	CapSense_SsCalcLfsrSize, .-CapSense_SsCalcLfsrSize
 147              		.global	__aeabi_uidiv
 148              		.section	.text.CapSense_SsCalcLfsrScale,"ax",%progbits
 149              		.align	2
 150              		.code	16
 151              		.thumb_func
 152              		.type	CapSense_SsCalcLfsrScale, %function
 153              	CapSense_SsCalcLfsrScale:
 154              	.LFB24:
2655:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2656:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2657:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2658:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrScale
2659:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2660:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2661:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2662:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2663:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2664:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2665:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2666:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2667:Generated_Source\PSoC4/CapSense_Sensing.c **** *  period.
2668:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2669:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2670:Generated_Source\PSoC4/CapSense_Sensing.c **** *  range +/-10%.
2671:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2672:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2673:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2674:Generated_Source\PSoC4/CapSense_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2675:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2676:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2677:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2678:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2679:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
2680:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2681:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2682:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2683:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2684:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2685:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2686:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2687:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2688:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 51


2689:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2690:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2691:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
2692:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2693:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2694:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2695:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2696:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 155              		.loc 1 2696 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              	.LVL11:
 160 0000 10B5     		push	{r4, lr}
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 4, -8
 163              		.cfi_offset 14, -4
2697:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrScale;
2698:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrRange;
2699:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrDither;
2700:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2701:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2702:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(lfsrSize)
 164              		.loc 1 2702 0
 165 0002 4B1E     		subs	r3, r1, #1
 166 0004 DBB2     		uxtb	r3, r3
 167 0006 032B     		cmp	r3, #3
 168 0008 01D8     		bhi	.L20
2703:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2704:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC1:
2705:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2706:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC1_RANGE;
 169              		.loc 1 2706 0
 170 000a 1023     		movs	r3, #16
 171 000c 00E0     		b	.L15
 172              	.L20:
2707:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2708:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2709:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC2:
2710:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2711:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC2_RANGE;
2712:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2713:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2714:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC3:
2715:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2716:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC3_RANGE;
2717:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2718:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2719:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC4:
2720:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2721:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC4_RANGE;
2722:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2723:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2724:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2725:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2726:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = 0u;
 173              		.loc 1 2726 0
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 52


 174 000e 0023     		movs	r3, #0
 175              	.L15:
 176              	.LVL12:
2727:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2728:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2729:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2730:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2731:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2732:Generated_Source\PSoC4/CapSense_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2733:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
2734:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((lfsrSize != CapSense_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
 177              		.loc 1 2734 0
 178 0010 0029     		cmp	r1, #0
 179 0012 11D0     		beq	.L21
 180              		.loc 1 2734 0 is_stmt 0 discriminator 1
 181 0014 002B     		cmp	r3, #0
 182 0016 11D0     		beq	.L22
2735:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2736:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2737:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
 183              		.loc 1 2737 0 is_stmt 1
 184 0018 6422     		movs	r2, #100
 185 001a 5343     		muls	r3, r2
 186              	.LVL13:
 187 001c 0100     		movs	r1, r0
 188              	.LVL14:
 189 001e 1800     		movs	r0, r3
 190              	.LVL15:
 191 0020 FFF7FEFF 		bl	__aeabi_uidiv
 192              	.LVL16:
2738:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
 193              		.loc 1 2738 0
 194 0024 0023     		movs	r3, #0
2739:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2740:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(lfsrDither < CapSense_LFSR_DITHER_PERCENTAGE)
 195              		.loc 1 2740 0
 196 0026 01E0     		b	.L18
 197              	.LVL17:
 198              	.L19:
2741:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2742:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale++;
 199              		.loc 1 2742 0
 200 0028 0133     		adds	r3, r3, #1
 201              	.LVL18:
2743:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrDither <<=1uL;
 202              		.loc 1 2743 0
 203 002a 4000     		lsls	r0, r0, #1
 204              	.LVL19:
 205              	.L18:
2740:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 206              		.loc 1 2740 0
 207 002c 0928     		cmp	r0, #9
 208 002e FBD9     		bls	.L19
2744:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2745:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2746:Generated_Source\PSoC4/CapSense_Sensing.c ****         if(lfsrDither > CapSense_LFSR_DITHER_PERCENTAGE)
 209              		.loc 1 2746 0
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 53


 210 0030 0A28     		cmp	r0, #10
 211 0032 04D9     		bls	.L17
2747:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2748:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale--;
 212              		.loc 1 2748 0
 213 0034 013B     		subs	r3, r3, #1
 214              	.LVL20:
 215 0036 02E0     		b	.L17
 216              	.LVL21:
 217              	.L21:
2749:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2750:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2751:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2752:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2753:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
 218              		.loc 1 2753 0
 219 0038 0023     		movs	r3, #0
 220              	.LVL22:
 221 003a 00E0     		b	.L17
 222              	.LVL23:
 223              	.L22:
 224 003c 0023     		movs	r3, #0
 225              	.LVL24:
 226              	.L17:
2754:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2755:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2756:Generated_Source\PSoC4/CapSense_Sensing.c ****     return ((uint8)lfsrScale);
 227              		.loc 1 2756 0
 228 003e D8B2     		uxtb	r0, r3
2757:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 229              		.loc 1 2757 0
 230              		@ sp needed
 231 0040 10BD     		pop	{r4, pc}
 232              		.cfi_endproc
 233              	.LFE24:
 234              		.size	CapSense_SsCalcLfsrScale, .-CapSense_SsCalcLfsrScale
 235 0042 C046     		.section	.text.CapSense_IsBusy,"ax",%progbits
 236              		.align	2
 237              		.global	CapSense_IsBusy
 238              		.code	16
 239              		.thumb_func
 240              		.type	CapSense_IsBusy, %function
 241              	CapSense_IsBusy:
 242              	.LFB1:
 237:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 243              		.loc 1 237 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              		@ link register save eliminated.
 238:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 248              		.loc 1 238 0
 249 0000 024B     		ldr	r3, .L24
 250 0002 DB68     		ldr	r3, [r3, #12]
 251 0004 8020     		movs	r0, #128
 252 0006 1840     		ands	r0, r3
 239:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 54


 253              		.loc 1 239 0
 254              		@ sp needed
 255 0008 7047     		bx	lr
 256              	.L25:
 257 000a C046     		.align	2
 258              	.L24:
 259 000c 00000000 		.word	CapSense_dsRam
 260              		.cfi_endproc
 261              	.LFE1:
 262              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 263              		.section	.text.CapSense_SetupWidget,"ax",%progbits
 264              		.align	2
 265              		.global	CapSense_SetupWidget
 266              		.code	16
 267              		.thumb_func
 268              		.type	CapSense_SetupWidget, %function
 269              	CapSense_SetupWidget:
 270              	.LFB2:
 283:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 271              		.loc 1 283 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              	.LVL25:
 276 0000 10B5     		push	{r4, lr}
 277              		.cfi_def_cfa_offset 8
 278              		.cfi_offset 4, -8
 279              		.cfi_offset 14, -4
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 280              		.loc 1 286 0
 281 0002 0E4B     		ldr	r3, .L32
 282 0004 DB68     		ldr	r3, [r3, #12]
 283 0006 DB03     		lsls	r3, r3, #15
 284 0008 0DD4     		bmi	.L29
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 285              		.loc 1 296 0
 286 000a 0228     		cmp	r0, #2
 287 000c 0DD8     		bhi	.L30
 297:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 288              		.loc 1 297 0 discriminator 1
 289 000e 4309     		lsrs	r3, r0, #5
 290 0010 0433     		adds	r3, r3, #4
 291 0012 9B00     		lsls	r3, r3, #2
 292 0014 094A     		ldr	r2, .L32
 293 0016 9B58     		ldr	r3, [r3, r2]
 294 0018 1F22     		movs	r2, #31
 295 001a 0240     		ands	r2, r0
 296 001c D340     		lsrs	r3, r3, r2
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 297              		.loc 1 296 0 discriminator 1
 298 001e DB07     		lsls	r3, r3, #31
 299 0020 05D4     		bmi	.L31
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 300              		.loc 1 304 0
 301 0022 0124     		movs	r4, #1
 302 0024 04E0     		b	.L27
 303              	.L29:
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 55


 289:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 304              		.loc 1 289 0
 305 0026 1124     		movs	r4, #17
 306 0028 02E0     		b	.L27
 307              	.L30:
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 308              		.loc 1 304 0
 309 002a 0124     		movs	r4, #1
 310 002c 00E0     		b	.L27
 311              	.L31:
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 312              		.loc 1 300 0
 313 002e 0024     		movs	r4, #0
 314              	.L27:
 315              	.LVL26:
 311:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 316              		.loc 1 311 0
 317 0030 002C     		cmp	r4, #0
 318 0032 01D1     		bne	.L28
 324:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 319              		.loc 1 324 0
 320 0034 FFF7FEFF 		bl	CapSense_CSDSetupWidget
 321              	.LVL27:
 322              	.L28:
 340:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 323              		.loc 1 340 0
 324 0038 2000     		movs	r0, r4
 325              		@ sp needed
 326              	.LVL28:
 327 003a 10BD     		pop	{r4, pc}
 328              	.L33:
 329              		.align	2
 330              	.L32:
 331 003c 00000000 		.word	CapSense_dsRam
 332              		.cfi_endproc
 333              	.LFE2:
 334              		.size	CapSense_SetupWidget, .-CapSense_SetupWidget
 335              		.section	.text.CapSense_Scan,"ax",%progbits
 336              		.align	2
 337              		.global	CapSense_Scan
 338              		.code	16
 339              		.thumb_func
 340              		.type	CapSense_Scan, %function
 341              	CapSense_Scan:
 342              	.LFB3:
 366:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 343              		.loc 1 366 0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347 0000 10B5     		push	{r4, lr}
 348              		.cfi_def_cfa_offset 8
 349              		.cfi_offset 4, -8
 350              		.cfi_offset 14, -4
 351              	.LVL29:
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 352              		.loc 1 369 0
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 56


 353 0002 084B     		ldr	r3, .L40
 354 0004 DB68     		ldr	r3, [r3, #12]
 355 0006 DB03     		lsls	r3, r3, #15
 356 0008 07D4     		bmi	.L37
 376:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 357              		.loc 1 376 0
 358 000a 074B     		ldr	r3, .L40+4
 359 000c 1B78     		ldrb	r3, [r3]
 360 000e 012B     		cmp	r3, #1
 361 0010 05D1     		bne	.L39
 385:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 362              		.loc 1 385 0
 363 0012 FFF7FEFF 		bl	CapSense_CSDScan
 364              	.LVL30:
 367:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 365              		.loc 1 367 0
 366 0016 0020     		movs	r0, #0
 386:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 367              		.loc 1 386 0
 368 0018 03E0     		b	.L35
 369              	.L37:
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 370              		.loc 1 372 0
 371 001a 1120     		movs	r0, #17
 372 001c 01E0     		b	.L35
 373              	.L39:
 394:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 374              		.loc 1 394 0
 375 001e 0120     		movs	r0, #1
 376 0020 4042     		rsbs	r0, r0, #0
 377              	.L35:
 378              	.LVL31:
 399:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 379              		.loc 1 399 0
 380              		@ sp needed
 381 0022 10BD     		pop	{r4, pc}
 382              	.L41:
 383              		.align	2
 384              	.L40:
 385 0024 00000000 		.word	CapSense_dsRam
 386 0028 00000000 		.word	.LANCHOR0
 387              		.cfi_endproc
 388              	.LFE3:
 389              		.size	CapSense_Scan, .-CapSense_Scan
 390              		.section	.text.CapSense_ScanAllWidgets,"ax",%progbits
 391              		.align	2
 392              		.global	CapSense_ScanAllWidgets
 393              		.code	16
 394              		.thumb_func
 395              		.type	CapSense_ScanAllWidgets, %function
 396              	CapSense_ScanAllWidgets:
 397              	.LFB4:
 428:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 398              		.loc 1 428 0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 57


 402 0000 10B5     		push	{r4, lr}
 403              		.cfi_def_cfa_offset 8
 404              		.cfi_offset 4, -8
 405              		.cfi_offset 14, -4
 406              	.LVL32:
 433:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 407              		.loc 1 433 0
 408 0002 0F4B     		ldr	r3, .L50
 409 0004 DB68     		ldr	r3, [r3, #12]
 410 0006 1B06     		lsls	r3, r3, #24
 411 0008 18D4     		bmi	.L49
 412 000a 0024     		movs	r4, #0
 413 000c 0120     		movs	r0, #1
 414 000e 4042     		rsbs	r0, r0, #0
 415 0010 11E0     		b	.L44
 416              	.LVL33:
 417              	.L48:
 449:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 418              		.loc 1 449 0
 419 0012 2000     		movs	r0, r4
 420              	.LVL34:
 421 0014 FFF7FEFF 		bl	CapSense_SetupWidget
 422              	.LVL35:
 451:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 423              		.loc 1 451 0
 424 0018 0028     		cmp	r0, #0
 425 001a 0BD1     		bne	.L45
 455:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 426              		.loc 1 455 0
 427 001c 012C     		cmp	r4, #1
 428 001e 03D8     		bhi	.L46
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 429              		.loc 1 458 0
 430 0020 0122     		movs	r2, #1
 431 0022 084B     		ldr	r3, .L50+4
 432 0024 5A70     		strb	r2, [r3, #1]
 433 0026 02E0     		b	.L47
 434              	.L46:
 463:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 435              		.loc 1 463 0
 436 0028 0022     		movs	r2, #0
 437 002a 064B     		ldr	r3, .L50+4
 438 002c 5A70     		strb	r2, [r3, #1]
 439              	.L47:
 473:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 440              		.loc 1 473 0
 441 002e FFF7FEFF 		bl	CapSense_Scan
 442              	.LVL36:
 475:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 443              		.loc 1 475 0
 444 0032 04E0     		b	.L43
 445              	.L45:
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 446              		.loc 1 446 0
 447 0034 0134     		adds	r4, r4, #1
 448              	.LVL37:
 449              	.L44:
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 58


 444:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 450              		.loc 1 444 0 discriminator 1
 451 0036 022C     		cmp	r4, #2
 452 0038 EBD9     		bls	.L48
 453 003a 00E0     		b	.L43
 454              	.LVL38:
 455              	.L49:
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 456              		.loc 1 436 0
 457 003c 1120     		movs	r0, #17
 458              	.LVL39:
 459              	.L43:
 481:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 460              		.loc 1 481 0
 461              		@ sp needed
 462 003e 10BD     		pop	{r4, pc}
 463              	.L51:
 464              		.align	2
 465              	.L50:
 466 0040 00000000 		.word	CapSense_dsRam
 467 0044 00000000 		.word	.LANCHOR0
 468              		.cfi_endproc
 469              	.LFE4:
 470              		.size	CapSense_ScanAllWidgets, .-CapSense_ScanAllWidgets
 471              		.section	.text.CapSense_SetupWidgetExt,"ax",%progbits
 472              		.align	2
 473              		.global	CapSense_SetupWidgetExt
 474              		.code	16
 475              		.thumb_func
 476              		.type	CapSense_SetupWidgetExt, %function
 477              	CapSense_SetupWidgetExt:
 478              	.LFB5:
 536:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 479              		.loc 1 536 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483              	.LVL40:
 484 0000 10B5     		push	{r4, lr}
 485              		.cfi_def_cfa_offset 8
 486              		.cfi_offset 4, -8
 487              		.cfi_offset 14, -4
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 488              		.loc 1 539 0
 489 0002 124B     		ldr	r3, .L59
 490 0004 DB68     		ldr	r3, [r3, #12]
 491 0006 DB03     		lsls	r3, r3, #15
 492 0008 13D4     		bmi	.L55
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 493              		.loc 1 549 0
 494 000a 0228     		cmp	r0, #2
 495 000c 13D8     		bhi	.L56
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (sensorId < CapSense_GET_SENSOR_COUNT(widgetId)))
 496              		.loc 1 550 0 discriminator 1
 497 000e 4309     		lsrs	r3, r0, #5
 498 0010 0433     		adds	r3, r3, #4
 499 0012 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 59


 500 0014 0D4A     		ldr	r2, .L59
 501 0016 9B58     		ldr	r3, [r3, r2]
 502 0018 1F22     		movs	r2, #31
 503 001a 0240     		ands	r2, r0
 504 001c D340     		lsrs	r3, r3, r2
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 505              		.loc 1 549 0 discriminator 1
 506 001e DB07     		lsls	r3, r3, #31
 507 0020 0BD5     		bpl	.L57
 551:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 508              		.loc 1 551 0
 509 0022 4301     		lsls	r3, r0, #5
 510 0024 0A4A     		ldr	r2, .L59+4
 511 0026 D318     		adds	r3, r2, r3
 512 0028 1B8B     		ldrh	r3, [r3, #24]
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (sensorId < CapSense_GET_SENSOR_COUNT(widgetId)))
 513              		.loc 1 550 0
 514 002a 8B42     		cmp	r3, r1
 515 002c 07D8     		bhi	.L58
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 516              		.loc 1 558 0
 517 002e 0124     		movs	r4, #1
 518 0030 06E0     		b	.L53
 519              	.L55:
 542:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 520              		.loc 1 542 0
 521 0032 1124     		movs	r4, #17
 522 0034 04E0     		b	.L53
 523              	.L56:
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 524              		.loc 1 558 0
 525 0036 0124     		movs	r4, #1
 526 0038 02E0     		b	.L53
 527              	.L57:
 528 003a 0124     		movs	r4, #1
 529 003c 00E0     		b	.L53
 530              	.L58:
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 531              		.loc 1 554 0
 532 003e 0024     		movs	r4, #0
 533              	.L53:
 534              	.LVL41:
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 535              		.loc 1 565 0
 536 0040 002C     		cmp	r4, #0
 537 0042 01D1     		bne	.L54
 578:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 538              		.loc 1 578 0
 539 0044 FFF7FEFF 		bl	CapSense_CSDSetupWidgetExt
 540              	.LVL42:
 541              	.L54:
 594:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 542              		.loc 1 594 0
 543 0048 2000     		movs	r0, r4
 544              		@ sp needed
 545              	.LVL43:
 546 004a 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 60


 547              	.L60:
 548              		.align	2
 549              	.L59:
 550 004c 00000000 		.word	CapSense_dsRam
 551 0050 00000000 		.word	CapSense_dsFlash
 552              		.cfi_endproc
 553              	.LFE5:
 554              		.size	CapSense_SetupWidgetExt, .-CapSense_SetupWidgetExt
 555              		.section	.text.CapSense_ScanExt,"ax",%progbits
 556              		.align	2
 557              		.global	CapSense_ScanExt
 558              		.code	16
 559              		.thumb_func
 560              		.type	CapSense_ScanExt, %function
 561              	CapSense_ScanExt:
 562              	.LFB6:
 642:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 563              		.loc 1 642 0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 0
 566              		@ frame_needed = 0, uses_anonymous_args = 0
 567 0000 10B5     		push	{r4, lr}
 568              		.cfi_def_cfa_offset 8
 569              		.cfi_offset 4, -8
 570              		.cfi_offset 14, -4
 571              	.LVL44:
 645:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 572              		.loc 1 645 0
 573 0002 084B     		ldr	r3, .L67
 574 0004 DB68     		ldr	r3, [r3, #12]
 575 0006 DB03     		lsls	r3, r3, #15
 576 0008 07D4     		bmi	.L64
 652:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 577              		.loc 1 652 0
 578 000a 074B     		ldr	r3, .L67+4
 579 000c 1B78     		ldrb	r3, [r3]
 580 000e 012B     		cmp	r3, #1
 581 0010 05D1     		bne	.L66
 661:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 582              		.loc 1 661 0
 583 0012 FFF7FEFF 		bl	CapSense_CSDScanExt
 584              	.LVL45:
 643:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 585              		.loc 1 643 0
 586 0016 0020     		movs	r0, #0
 662:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 587              		.loc 1 662 0
 588 0018 03E0     		b	.L62
 589              	.L64:
 648:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 590              		.loc 1 648 0
 591 001a 1120     		movs	r0, #17
 592 001c 01E0     		b	.L62
 593              	.L66:
 670:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 594              		.loc 1 670 0
 595 001e 0120     		movs	r0, #1
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 61


 596 0020 4042     		rsbs	r0, r0, #0
 597              	.L62:
 598              	.LVL46:
 675:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 599              		.loc 1 675 0
 600              		@ sp needed
 601 0022 10BD     		pop	{r4, pc}
 602              	.L68:
 603              		.align	2
 604              	.L67:
 605 0024 00000000 		.word	CapSense_dsRam
 606 0028 00000000 		.word	.LANCHOR0
 607              		.cfi_endproc
 608              	.LFE6:
 609              		.size	CapSense_ScanExt, .-CapSense_ScanExt
 610              		.section	.text.CapSense_SetPinState,"ax",%progbits
 611              		.align	2
 612              		.global	CapSense_SetPinState
 613              		.code	16
 614              		.thumb_func
 615              		.type	CapSense_SetPinState, %function
 616              	CapSense_SetPinState:
 617              	.LFB8:
 841:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 618              		.loc 1 841 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 0
 621              		@ frame_needed = 0, uses_anonymous_args = 0
 622              	.LVL47:
 623 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 624              		.cfi_def_cfa_offset 24
 625              		.cfi_offset 3, -24
 626              		.cfi_offset 4, -20
 627              		.cfi_offset 5, -16
 628              		.cfi_offset 6, -12
 629              		.cfi_offset 7, -8
 630              		.cfi_offset 14, -4
 631 0002 1600     		movs	r6, r2
 866:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 632              		.loc 1 866 0
 633 0004 4001     		lsls	r0, r0, #5
 634              	.LVL48:
 635 0006 244B     		ldr	r3, .L76
 636 0008 C458     		ldr	r4, [r0, r3]
 637 000a CB00     		lsls	r3, r1, #3
 638 000c 591A     		subs	r1, r3, r1
 639              	.LVL49:
 640 000e 8B00     		lsls	r3, r1, #2
 641 0010 E418     		adds	r4, r4, r3
 642              	.LVL50:
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 643              		.loc 1 871 0
 644 0012 0025     		movs	r5, #0
 645 0014 3CE0     		b	.L70
 646              	.LVL51:
 647              	.L75:
 874:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 62


 648              		.loc 1 874 0
 649 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 650              	.LVL52:
 875:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 651              		.loc 1 875 0
 652 001a 2168     		ldr	r1, [r4]
 653 001c 0B68     		ldr	r3, [r1]
 654 001e 277E     		ldrb	r7, [r4, #24]
 655 0020 0F22     		movs	r2, #15
 656 0022 BA40     		lsls	r2, r2, r7
 657 0024 9343     		bics	r3, r2
 658 0026 0B60     		str	r3, [r1]
 876:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 659              		.loc 1 876 0
 660 0028 6168     		ldr	r1, [r4, #4]
 661 002a 0B68     		ldr	r3, [r1]
 662 002c A77E     		ldrb	r7, [r4, #26]
 663 002e 0722     		movs	r2, #7
 664 0030 BA40     		lsls	r2, r2, r7
 665 0032 9343     		bics	r3, r2
 666 0034 0B60     		str	r3, [r1]
 877:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 667              		.loc 1 877 0
 668 0036 FFF7FEFF 		bl	CyExitCriticalSection
 669              	.LVL53:
 879:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 670              		.loc 1 879 0
 671 003a 012E     		cmp	r6, #1
 672 003c 17D0     		beq	.L72
 673 003e 002E     		cmp	r6, #0
 674 0040 02D0     		beq	.L73
 675 0042 032E     		cmp	r6, #3
 676 0044 1FD0     		beq	.L74
 677 0046 21E0     		b	.L71
 678              	.L73:
 883:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 679              		.loc 1 883 0
 680 0048 FFF7FEFF 		bl	CyEnterCriticalSection
 681              	.LVL54:
 884:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 682              		.loc 1 884 0
 683 004c 6268     		ldr	r2, [r4, #4]
 684 004e 1168     		ldr	r1, [r2]
 685 0050 A77E     		ldrb	r7, [r4, #26]
 686 0052 0623     		movs	r3, #6
 687 0054 BB40     		lsls	r3, r3, r7
 688 0056 0B43     		orrs	r3, r1
 689 0058 1360     		str	r3, [r2]
 885:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 690              		.loc 1 885 0
 691 005a A168     		ldr	r1, [r4, #8]
 692 005c 0B68     		ldr	r3, [r1]
 693 005e 677E     		ldrb	r7, [r4, #25]
 694 0060 0122     		movs	r2, #1
 695 0062 BA40     		lsls	r2, r2, r7
 696 0064 9343     		bics	r3, r2
 697 0066 0B60     		str	r3, [r1]
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 63


 886:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 698              		.loc 1 886 0
 699 0068 FFF7FEFF 		bl	CyExitCriticalSection
 700              	.LVL55:
 887:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 701              		.loc 1 887 0
 702 006c 0EE0     		b	.L71
 703              	.L72:
 890:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 704              		.loc 1 890 0
 705 006e FFF7FEFF 		bl	CyEnterCriticalSection
 706              	.LVL56:
 891:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 707              		.loc 1 891 0
 708 0072 A168     		ldr	r1, [r4, #8]
 709 0074 0B68     		ldr	r3, [r1]
 710 0076 677E     		ldrb	r7, [r4, #25]
 711 0078 0122     		movs	r2, #1
 712 007a BA40     		lsls	r2, r2, r7
 713 007c 9343     		bics	r3, r2
 714 007e 0B60     		str	r3, [r1]
 892:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 715              		.loc 1 892 0
 716 0080 FFF7FEFF 		bl	CyExitCriticalSection
 717              	.LVL57:
 893:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 718              		.loc 1 893 0
 719 0084 02E0     		b	.L71
 720              	.L74:
 898:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 721              		.loc 1 898 0
 722 0086 2000     		movs	r0, r4
 723 0088 FFF7FEFF 		bl	CapSense_CSDConnectSns
 724              	.LVL58:
 725              	.L71:
 933:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 726              		.loc 1 933 0 discriminator 2
 727 008c 1C34     		adds	r4, r4, #28
 728              	.LVL59:
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 729              		.loc 1 871 0 discriminator 2
 730 008e 0135     		adds	r5, r5, #1
 731              	.LVL60:
 732              	.L70:
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 733              		.loc 1 871 0 is_stmt 0 discriminator 1
 734 0090 002D     		cmp	r5, #0
 735 0092 C0D0     		beq	.L75
 935:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 736              		.loc 1 935 0 is_stmt 1
 737              		@ sp needed
 738              	.LVL61:
 739              	.LVL62:
 740              	.LVL63:
 741 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 742              	.L77:
 743 0096 C046     		.align	2
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 64


 744              	.L76:
 745 0098 00000000 		.word	CapSense_dsFlash
 746              		.cfi_endproc
 747              	.LFE8:
 748              		.size	CapSense_SetPinState, .-CapSense_SetPinState
 749              		.section	.text.CapSense_SsSetAllIOsState,"ax",%progbits
 750              		.align	2
 751              		.global	CapSense_SsSetAllIOsState
 752              		.code	16
 753              		.thumb_func
 754              		.type	CapSense_SsSetAllIOsState, %function
 755              	CapSense_SsSetAllIOsState:
 756              	.LFB11:
1167:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 757              		.loc 1 1167 0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 0
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761              	.LVL64:
 762 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 763              		.cfi_def_cfa_offset 24
 764              		.cfi_offset 3, -24
 765              		.cfi_offset 4, -20
 766              		.cfi_offset 5, -16
 767              		.cfi_offset 6, -12
 768              		.cfi_offset 7, -8
 769              		.cfi_offset 14, -4
 770 0002 4F46     		mov	r7, r9
 771 0004 4646     		mov	r6, r8
 772 0006 C0B4     		push	{r6, r7}
 773              		.cfi_def_cfa_offset 32
 774              		.cfi_offset 8, -32
 775              		.cfi_offset 9, -28
1180:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 776              		.loc 1 1180 0
 777 0008 0128     		cmp	r0, #1
 778 000a 0BD0     		beq	.L84
 779 000c 0228     		cmp	r0, #2
 780 000e 04D0     		beq	.L81
1184:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 781              		.loc 1 1184 0
 782 0010 0023     		movs	r3, #0
 783 0012 9946     		mov	r9, r3
1183:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 784              		.loc 1 1183 0
 785 0014 0633     		adds	r3, r3, #6
 786 0016 9846     		mov	r8, r3
 787 0018 07E0     		b	.L80
 788              	.L81:
 789              	.LVL65:
1192:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 790              		.loc 1 1192 0
 791 001a 0523     		movs	r3, #5
 792 001c 9946     		mov	r9, r3
1191:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_CSD_SHIELD;
 793              		.loc 1 1191 0
 794 001e 0023     		movs	r3, #0
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 65


 795 0020 9846     		mov	r8, r3
1193:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 796              		.loc 1 1193 0
 797 0022 02E0     		b	.L80
 798              	.LVL66:
 799              	.L84:
1188:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 800              		.loc 1 1188 0
 801 0024 0023     		movs	r3, #0
 802 0026 9946     		mov	r9, r3
1187:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 803              		.loc 1 1187 0
 804 0028 9846     		mov	r8, r3
 805              	.L80:
 806              	.LVL67:
1201:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_TOTAL_ELECTRODES; loopIndex++)
 807              		.loc 1 1201 0
 808 002a 144C     		ldr	r4, .L85
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 809              		.loc 1 1202 0
 810 002c 0025     		movs	r5, #0
 811 002e 1FE0     		b	.L82
 812              	.LVL68:
 813              	.L83:
1204:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 814              		.loc 1 1204 0 discriminator 3
 815 0030 FFF7FEFF 		bl	CyEnterCriticalSection
 816              	.LVL69:
1206:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue &= ~(snsIoPtr->hsiomMask);
 817              		.loc 1 1206 0 discriminator 3
 818 0034 2268     		ldr	r2, [r4]
 819 0036 1368     		ldr	r3, [r2]
 820              	.LVL70:
1207:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 821              		.loc 1 1207 0 discriminator 3
 822 0038 2169     		ldr	r1, [r4, #16]
 823 003a 8B43     		bics	r3, r1
 824              	.LVL71:
1208:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 825              		.loc 1 1208 0 discriminator 3
 826 003c 1360     		str	r3, [r2]
1210:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << snsIoPtr->shift);
 827              		.loc 1 1210 0 discriminator 3
 828 003e 6668     		ldr	r6, [r4, #4]
 829 0040 3268     		ldr	r2, [r6]
 830              	.LVL72:
1211:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue |=  (newPinPcVal << snsIoPtr->shift);
 831              		.loc 1 1211 0 discriminator 3
 832 0042 A77E     		ldrb	r7, [r4, #26]
 833 0044 0721     		movs	r1, #7
 834 0046 B940     		lsls	r1, r1, r7
 835 0048 8A43     		bics	r2, r1
 836              	.LVL73:
1212:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->pcPtr, tmpPcDrRegValue);
 837              		.loc 1 1212 0 discriminator 3
 838 004a 4146     		mov	r1, r8
 839 004c B940     		lsls	r1, r1, r7
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 66


 840 004e 0A43     		orrs	r2, r1
 841              	.LVL74:
1213:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 842              		.loc 1 1213 0 discriminator 3
 843 0050 3260     		str	r2, [r6]
1215:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 844              		.loc 1 1215 0 discriminator 3
 845 0052 227E     		ldrb	r2, [r4, #24]
 846              	.LVL75:
 847 0054 4946     		mov	r1, r9
 848 0056 9140     		lsls	r1, r1, r2
 849 0058 0B43     		orrs	r3, r1
 850              	.LVL76:
1216:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 851              		.loc 1 1216 0 discriminator 3
 852 005a 2268     		ldr	r2, [r4]
 853 005c 1360     		str	r3, [r2]
 854              	.LVL77:
1218:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(snsIoPtr->mask);
 855              		.loc 1 1218 0 discriminator 3
 856 005e A268     		ldr	r2, [r4, #8]
 857 0060 1368     		ldr	r3, [r2]
 858              	.LVL78:
1219:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->drPtr, tmpPcDrRegValue);
 859              		.loc 1 1219 0 discriminator 3
 860 0062 6169     		ldr	r1, [r4, #20]
 861 0064 8B43     		bics	r3, r1
 862              	.LVL79:
1220:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 863              		.loc 1 1220 0 discriminator 3
 864 0066 1360     		str	r3, [r2]
1222:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 865              		.loc 1 1222 0 discriminator 3
 866 0068 FFF7FEFF 		bl	CyExitCriticalSection
 867              	.LVL80:
1225:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 868              		.loc 1 1225 0 discriminator 3
 869 006c 1C34     		adds	r4, r4, #28
 870              	.LVL81:
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 871              		.loc 1 1202 0 discriminator 3
 872 006e 0135     		adds	r5, r5, #1
 873              	.LVL82:
 874              	.L82:
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 875              		.loc 1 1202 0 is_stmt 0 discriminator 1
 876 0070 022D     		cmp	r5, #2
 877 0072 DDD9     		bls	.L83
1238:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 878              		.loc 1 1238 0 is_stmt 1
 879              		@ sp needed
 880              	.LVL83:
 881              	.LVL84:
 882              	.LVL85:
 883              	.LVL86:
 884 0074 0CBC     		pop	{r2, r3}
 885 0076 9046     		mov	r8, r2
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 67


 886 0078 9946     		mov	r9, r3
 887 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 888              	.L86:
 889              		.align	2
 890              	.L85:
 891 007c 00000000 		.word	CapSense_ioList
 892              		.cfi_endproc
 893              	.LFE11:
 894              		.size	CapSense_SsSetAllIOsState, .-CapSense_SsSetAllIOsState
 895              		.section	.text.CapSense_SsPostAllWidgetsScan,"ax",%progbits
 896              		.align	2
 897              		.global	CapSense_SsPostAllWidgetsScan
 898              		.code	16
 899              		.thumb_func
 900              		.type	CapSense_SsPostAllWidgetsScan, %function
 901              	CapSense_SsPostAllWidgetsScan:
 902              	.LFB12:
1317:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 903              		.loc 1 1317 0
 904              		.cfi_startproc
 905              		@ args = 0, pretend = 0, frame = 0
 906              		@ frame_needed = 0, uses_anonymous_args = 0
 907 0000 10B5     		push	{r4, lr}
 908              		.cfi_def_cfa_offset 8
 909              		.cfi_offset 4, -8
 910              		.cfi_offset 14, -4
 911              	.L92:
1328:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 912              		.loc 1 1328 0
 913 0002 1B4A     		ldr	r2, .L93
 914 0004 9378     		ldrb	r3, [r2, #2]
 915 0006 0133     		adds	r3, r3, #1
 916 0008 DBB2     		uxtb	r3, r3
 917 000a 9370     		strb	r3, [r2, #2]
1330:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 918              		.loc 1 1330 0
 919 000c 9078     		ldrb	r0, [r2, #2]
 920 000e C0B2     		uxtb	r0, r0
 921 0010 FFF7FEFF 		bl	CapSense_SetupWidget
 922              	.LVL87:
 923 0014 041E     		subs	r4, r0, #0
 924              	.LVL88:
1332:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 925              		.loc 1 1332 0
 926 0016 09D1     		bne	.L88
1334:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 927              		.loc 1 1334 0
 928 0018 154B     		ldr	r3, .L93
 929 001a 9B78     		ldrb	r3, [r3, #2]
 930 001c 022B     		cmp	r3, #2
 931 001e 02D1     		bne	.L89
1337:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 932              		.loc 1 1337 0
 933 0020 0022     		movs	r2, #0
 934 0022 134B     		ldr	r3, .L93
 935 0024 5A70     		strb	r2, [r3, #1]
 936              	.L89:
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 68


1339:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 937              		.loc 1 1339 0
 938 0026 FFF7FEFF 		bl	CapSense_Scan
 939              	.LVL89:
 940 002a 1EE0     		b	.L90
 941              	.LVL90:
 942              	.L88:
1341:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 943              		.loc 1 1341 0
 944 002c 104B     		ldr	r3, .L93
 945 002e 9B78     		ldrb	r3, [r3, #2]
 946 0030 022B     		cmp	r3, #2
 947 0032 11D1     		bne	.L91
1355:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
 948              		.loc 1 1355 0
 949 0034 0F4B     		ldr	r3, .L93+4
 950 0036 1A89     		ldrh	r2, [r3, #8]
 951 0038 0132     		adds	r2, r2, #1
 952 003a 1A81     		strh	r2, [r3, #8]
1357:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 953              		.loc 1 1357 0
 954 003c DA68     		ldr	r2, [r3, #12]
 955 003e 8021     		movs	r1, #128
 956 0040 8A43     		bics	r2, r1
 957 0042 DA60     		str	r2, [r3, #12]
1360:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
 958              		.loc 1 1360 0
 959 0044 DA68     		ldr	r2, [r3, #12]
 960 0046 1202     		lsls	r2, r2, #8
 961 0048 120A     		lsrs	r2, r2, #8
 962 004a DA60     		str	r2, [r3, #12]
1361:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 963              		.loc 1 1361 0
 964 004c DA68     		ldr	r2, [r3, #12]
 965 004e 0406     		lsls	r4, r0, #24
 966 0050 1443     		orrs	r4, r2
 967 0052 DC60     		str	r4, [r3, #12]
 968              	.LVL91:
1364:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 969              		.loc 1 1364 0
 970 0054 0024     		movs	r4, #0
 971 0056 08E0     		b	.L90
 972              	.LVL92:
 973              	.L91:
1369:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
 974              		.loc 1 1369 0
 975 0058 064A     		ldr	r2, .L93+4
 976 005a D368     		ldr	r3, [r2, #12]
 977 005c 1B02     		lsls	r3, r3, #8
 978 005e 1B0A     		lsrs	r3, r3, #8
 979 0060 D360     		str	r3, [r2, #12]
1370:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 980              		.loc 1 1370 0
 981 0062 D168     		ldr	r1, [r2, #12]
 982 0064 0306     		lsls	r3, r0, #24
 983 0066 0B43     		orrs	r3, r1
 984 0068 D360     		str	r3, [r2, #12]
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 69


 985              	.LVL93:
 986              	.L90:
1372:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
 987              		.loc 1 1372 0
 988 006a 002C     		cmp	r4, #0
 989 006c C9D1     		bne	.L92
1374:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 990              		.loc 1 1374 0
 991              		@ sp needed
 992              	.LVL94:
 993 006e 10BD     		pop	{r4, pc}
 994              	.L94:
 995              		.align	2
 996              	.L93:
 997 0070 00000000 		.word	.LANCHOR0
 998 0074 00000000 		.word	CapSense_dsRam
 999              		.cfi_endproc
 1000              	.LFE12:
 1001              		.size	CapSense_SsPostAllWidgetsScan, .-CapSense_SsPostAllWidgetsScan
 1002              		.section	.text.CapSense_SsIsrInitialize,"ax",%progbits
 1003              		.align	2
 1004              		.global	CapSense_SsIsrInitialize
 1005              		.code	16
 1006              		.thumb_func
 1007              		.type	CapSense_SsIsrInitialize, %function
 1008              	CapSense_SsIsrInitialize:
 1009              	.LFB13:
1394:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
 1010              		.loc 1 1394 0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 0
 1013              		@ frame_needed = 0, uses_anonymous_args = 0
 1014              	.LVL95:
 1015 0000 10B5     		push	{r4, lr}
 1016              		.cfi_def_cfa_offset 8
 1017              		.cfi_offset 4, -8
 1018              		.cfi_offset 14, -4
1395:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 1019              		.loc 1 1395 0
 1020 0002 FFF7FEFF 		bl	CapSense_ISR_StartEx
 1021              	.LVL96:
1396:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1022              		.loc 1 1396 0
 1023              		@ sp needed
 1024 0006 10BD     		pop	{r4, pc}
 1025              		.cfi_endproc
 1026              	.LFE13:
 1027              		.size	CapSense_SsIsrInitialize, .-CapSense_SsIsrInitialize
 1028              		.section	.text.CapSense_SsSetModClkClockDivider,"ax",%progbits
 1029              		.align	2
 1030              		.global	CapSense_SsSetModClkClockDivider
 1031              		.code	16
 1032              		.thumb_func
 1033              		.type	CapSense_SsSetModClkClockDivider, %function
 1034              	CapSense_SsSetModClkClockDivider:
 1035              	.LFB14:
1417:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 70


 1036              		.loc 1 1417 0
 1037              		.cfi_startproc
 1038              		@ args = 0, pretend = 0, frame = 0
 1039              		@ frame_needed = 0, uses_anonymous_args = 0
 1040              		@ link register save eliminated.
 1041              	.LVL97:
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
 1042              		.loc 1 1420 0
 1043 0000 074A     		ldr	r2, .L98
 1044 0002 084B     		ldr	r3, .L98+4
 1045 0004 1A60     		str	r2, [r3]
1430:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1046              		.loc 1 1430 0
 1047 0006 0138     		subs	r0, r0, #1
 1048              	.LVL98:
 1049 0008 0002     		lsls	r0, r0, #8
 1050              	.LVL99:
 1051 000a 074B     		ldr	r3, .L98+8
 1052 000c 1860     		str	r0, [r3]
 1053              	.L97:
1433:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1054              		.loc 1 1433 0 discriminator 1
 1055 000e 054B     		ldr	r3, .L98+4
 1056 0010 1B68     		ldr	r3, [r3]
 1057 0012 002B     		cmp	r3, #0
 1058 0014 FBDB     		blt	.L97
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
 1059              		.loc 1 1439 0
 1060 0016 054A     		ldr	r2, .L98+12
 1061 0018 024B     		ldr	r3, .L98+4
 1062 001a 1A60     		str	r2, [r3]
1464:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1063              		.loc 1 1464 0
 1064              		@ sp needed
 1065 001c 7047     		bx	lr
 1066              	.L99:
 1067 001e C046     		.align	2
 1068              	.L98:
 1069 0020 40000040 		.word	1073741888
 1070 0024 00000140 		.word	1073807360
 1071 0028 00030140 		.word	1073808128
 1072 002c 40FF0080 		.word	-2147418304
 1073              		.cfi_endproc
 1074              	.LFE14:
 1075              		.size	CapSense_SsSetModClkClockDivider, .-CapSense_SsSetModClkClockDivider
 1076              		.section	.text.CapSense_SsSetSnsClockDivider,"ax",%progbits
 1077              		.align	2
 1078              		.global	CapSense_SsSetSnsClockDivider
 1079              		.code	16
 1080              		.thumb_func
 1081              		.type	CapSense_SsSetSnsClockDivider, %function
 1082              	CapSense_SsSetSnsClockDivider:
 1083              	.LFB15:
1485:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 1084              		.loc 1 1485 0
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 71


 1087              		@ frame_needed = 0, uses_anonymous_args = 0
 1088              		@ link register save eliminated.
 1089              	.LVL100:
1494:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
 1090              		.loc 1 1494 0
 1091 0000 034A     		ldr	r2, .L101
 1092 0002 1368     		ldr	r3, [r2]
 1093              	.LVL101:
1495:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
 1094              		.loc 1 1495 0
 1095 0004 1B0B     		lsrs	r3, r3, #12
 1096              	.LVL102:
 1097 0006 1B03     		lsls	r3, r3, #12
 1098              	.LVL103:
1496:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
 1099              		.loc 1 1496 0
 1100 0008 0138     		subs	r0, r0, #1
 1101              	.LVL104:
 1102 000a 1843     		orrs	r0, r3
 1103              	.LVL105:
1497:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 1104              		.loc 1 1497 0
 1105 000c 1060     		str	r0, [r2]
1546:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1106              		.loc 1 1546 0
 1107              		@ sp needed
 1108 000e 7047     		bx	lr
 1109              	.L102:
 1110              		.align	2
 1111              	.L101:
 1112 0010 00020B40 		.word	1074463232
 1113              		.cfi_endproc
 1114              	.LFE15:
 1115              		.size	CapSense_SsSetSnsClockDivider, .-CapSense_SsSetSnsClockDivider
 1116              		.section	.text.CapSense_SsSetClockDividers,"ax",%progbits
 1117              		.align	2
 1118              		.global	CapSense_SsSetClockDividers
 1119              		.code	16
 1120              		.thumb_func
 1121              		.type	CapSense_SsSetClockDividers, %function
 1122              	CapSense_SsSetClockDividers:
 1123              	.LFB16:
1569:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
 1124              		.loc 1 1569 0
 1125              		.cfi_startproc
 1126              		@ args = 0, pretend = 0, frame = 0
 1127              		@ frame_needed = 0, uses_anonymous_args = 0
 1128              	.LVL106:
 1129 0000 10B5     		push	{r4, lr}
 1130              		.cfi_def_cfa_offset 8
 1131              		.cfi_offset 4, -8
 1132              		.cfi_offset 14, -4
 1133 0002 0400     		movs	r4, r0
1571:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1134              		.loc 1 1571 0
 1135 0004 0800     		movs	r0, r1
 1136              	.LVL107:
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 72


 1137 0006 FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 1138              	.LVL108:
1574:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 1139              		.loc 1 1574 0
 1140 000a 2000     		movs	r0, r4
 1141 000c FFF7FEFF 		bl	CapSense_SsSetSnsClockDivider
 1142              	.LVL109:
1575:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1143              		.loc 1 1575 0
 1144              		@ sp needed
 1145              	.LVL110:
 1146 0010 10BD     		pop	{r4, pc}
 1147              		.cfi_endproc
 1148              	.LFE16:
 1149              		.size	CapSense_SsSetClockDividers, .-CapSense_SsSetClockDividers
 1150 0012 C046     		.section	.text.CapSense_CalibrateWidget,"ax",%progbits
 1151              		.align	2
 1152              		.global	CapSense_CalibrateWidget
 1153              		.code	16
 1154              		.thumb_func
 1155              		.type	CapSense_CalibrateWidget, %function
 1156              	CapSense_CalibrateWidget:
 1157              	.LFB17:
1621:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1158              		.loc 1 1621 0
 1159              		.cfi_startproc
 1160              		@ args = 0, pretend = 0, frame = 0
 1161              		@ frame_needed = 0, uses_anonymous_args = 0
 1162              	.LVL111:
 1163 0000 10B5     		push	{r4, lr}
 1164              		.cfi_def_cfa_offset 8
 1165              		.cfi_offset 4, -8
 1166              		.cfi_offset 14, -4
 1167 0002 0300     		movs	r3, r0
 1168              	.LVL112:
1626:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1169              		.loc 1 1626 0
 1170 0004 0228     		cmp	r0, #2
 1171 0006 01D8     		bhi	.L107
1622:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1172              		.loc 1 1622 0
 1173 0008 0020     		movs	r0, #0
 1174              	.LVL113:
 1175 000a 00E0     		b	.L105
 1176              	.LVL114:
 1177              	.L107:
1628:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1178              		.loc 1 1628 0
 1179 000c 0120     		movs	r0, #1
 1180              	.LVL115:
 1181              	.L105:
1646:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1182              		.loc 1 1646 0
 1183 000e 0028     		cmp	r0, #0
 1184 0010 03D1     		bne	.L106
1685:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1185              		.loc 1 1685 0
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 73


 1186 0012 5521     		movs	r1, #85
 1187 0014 1800     		movs	r0, r3
 1188              	.LVL116:
 1189 0016 FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1190              	.LVL117:
 1191              	.L106:
1701:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1192              		.loc 1 1701 0
 1193              		@ sp needed
 1194 001a 10BD     		pop	{r4, pc}
 1195              		.cfi_endproc
 1196              	.LFE17:
 1197              		.size	CapSense_CalibrateWidget, .-CapSense_CalibrateWidget
 1198              		.section	.text.CapSense_CalibrateAllWidgets,"ax",%progbits
 1199              		.align	2
 1200              		.global	CapSense_CalibrateAllWidgets
 1201              		.code	16
 1202              		.thumb_func
 1203              		.type	CapSense_CalibrateAllWidgets, %function
 1204              	CapSense_CalibrateAllWidgets:
 1205              	.LFB18:
1738:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1206              		.loc 1 1738 0
 1207              		.cfi_startproc
 1208              		@ args = 0, pretend = 0, frame = 0
 1209              		@ frame_needed = 0, uses_anonymous_args = 0
 1210 0000 70B5     		push	{r4, r5, r6, lr}
 1211              		.cfi_def_cfa_offset 16
 1212              		.cfi_offset 4, -16
 1213              		.cfi_offset 5, -12
 1214              		.cfi_offset 6, -8
 1215              		.cfi_offset 14, -4
 1216              	.LVL118:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1217              		.loc 1 1742 0
 1218 0002 0024     		movs	r4, #0
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
 1219              		.loc 1 1739 0
 1220 0004 0025     		movs	r5, #0
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1221              		.loc 1 1742 0
 1222 0006 04E0     		b	.L109
 1223              	.LVL119:
 1224              	.L110:
1744:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1225              		.loc 1 1744 0 discriminator 3
 1226 0008 2000     		movs	r0, r4
 1227 000a FFF7FEFF 		bl	CapSense_CalibrateWidget
 1228              	.LVL120:
 1229 000e 0543     		orrs	r5, r0
 1230              	.LVL121:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1231              		.loc 1 1742 0 discriminator 3
 1232 0010 0134     		adds	r4, r4, #1
 1233              	.LVL122:
 1234              	.L109:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 74


 1235              		.loc 1 1742 0 is_stmt 0 discriminator 1
 1236 0012 022C     		cmp	r4, #2
 1237 0014 F8D9     		bls	.L110
1748:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
 1238              		.loc 1 1748 0 is_stmt 1
 1239 0016 2800     		movs	r0, r5
 1240              		@ sp needed
 1241              	.LVL123:
 1242              	.LVL124:
 1243 0018 70BD     		pop	{r4, r5, r6, pc}
 1244              		.cfi_endproc
 1245              	.LFE18:
 1246              		.size	CapSense_CalibrateAllWidgets, .-CapSense_CalibrateAllWidgets
 1247 001a C046     		.section	.text.CapSense_SsCSDGetColSnsClkDivider,"ax",%progbits
 1248              		.align	2
 1249              		.global	CapSense_SsCSDGetColSnsClkDivider
 1250              		.code	16
 1251              		.thumb_func
 1252              		.type	CapSense_SsCSDGetColSnsClkDivider, %function
 1253              	CapSense_SsCSDGetColSnsClkDivider:
 1254              	.LFB25:
2758:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2759:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) && \
2760:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2761:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2762:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2763:Generated_Source\PSoC4/CapSense_Sensing.c ****           ((CapSense_ENABLE == CapSense_CSD_EN) && \
2764:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2765:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))) */
2766:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2767:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2768:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2769:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2770:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2771:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2772:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDGetColSnsClkDivider
2773:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2774:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2775:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2776:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2777:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2778:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2779:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2780:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2781:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2782:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  two-dimension widgets.
2783:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2784:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
2785:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2786:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2787:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2788:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2789:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2790:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2791:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2792:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 CapSense_SsCSDGetColSnsClkDivider(uint32 widgetId)
2793:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 75


 1255              		.loc 1 2793 0
 1256              		.cfi_startproc
 1257              		@ args = 0, pretend = 0, frame = 0
 1258              		@ frame_needed = 0, uses_anonymous_args = 0
 1259              		@ link register save eliminated.
 1260              	.LVL125:
2794:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 retVal;
2795:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2796:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get sense divider based on configuration */
2797:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2798:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2800:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1261              		.loc 1 2800 0
 1262 0000 4001     		lsls	r0, r0, #5
 1263              	.LVL126:
 1264 0002 024B     		ldr	r3, .L112
 1265 0004 1818     		adds	r0, r3, r0
 1266 0006 4368     		ldr	r3, [r0, #4]
 1267              	.LVL127:
2801:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2802:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2803:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
 1268              		.loc 1 2803 0
 1269 0008 9889     		ldrh	r0, [r3, #12]
 1270              	.LVL128:
2804:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2805:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)CapSense_dsRam.snsCsdClk;
2806:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2807:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2808:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2809:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2810:Generated_Source\PSoC4/CapSense_Sensing.c ****         return (retVal);
2811:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1271              		.loc 1 2811 0
 1272              		@ sp needed
 1273 000a 7047     		bx	lr
 1274              	.L113:
 1275              		.align	2
 1276              	.L112:
 1277 000c 00000000 		.word	CapSense_dsFlash
 1278              		.cfi_endproc
 1279              	.LFE25:
 1280              		.size	CapSense_SsCSDGetColSnsClkDivider, .-CapSense_SsCSDGetColSnsClkDivider
 1281              		.section	.text.CapSense_SsCSDCalcPrsSize,"ax",%progbits
 1282              		.align	2
 1283              		.global	CapSense_SsCSDCalcPrsSize
 1284              		.code	16
 1285              		.thumb_func
 1286              		.type	CapSense_SsCSDCalcPrsSize, %function
 1287              	CapSense_SsCSDCalcPrsSize:
 1288              	.LFB26:
2812:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2813:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2814:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2815:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2816:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDGetRowSnsClkDivider
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 76


2817:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2818:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2819:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2820:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2821:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2822:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2823:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2824:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2825:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2826:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  two-dimension widgets.
2827:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2828:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2829:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2830:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2831:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return
2832:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2833:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2834:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2835:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2836:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 CapSense_SsCSDGetRowSnsClkDivider(uint32 widgetId)
2837:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2838:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 retVal;
2839:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2840:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Get sense divider based on configuration */
2841:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2842:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2843:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2844:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
2845:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2846:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2847:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2848:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2849:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = (uint32)CapSense_dsRam.snsCsdClk;
2850:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2851:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2852:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2853:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2854:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (retVal);
2855:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2856:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2857:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2858:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2859:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2860:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2861:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2862:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDCalcPrsSize
2863:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2864:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2865:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2866:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2867:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2868:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2869:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2870:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  requirements:
2871:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2872:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2873:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 77


2874:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2875:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  resolution The widget resolution.
2876:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2877:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2878:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2879:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2880:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 CapSense_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2881:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1289              		.loc 1 2881 0
 1290              		.cfi_startproc
 1291              		@ args = 0, pretend = 0, frame = 0
 1292              		@ frame_needed = 0, uses_anonymous_args = 0
 1293              		@ link register save eliminated.
 1294              	.LVL129:
2882:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 prsSize;
2883:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 modClkDivider = 1u;
2884:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2885:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSDV2)
2886:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
2887:Generated_Source\PSoC4/CapSense_Sensing.c ****                     modClkDivider = (uint32)CapSense_dsRam.modCsdClk;
2888:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2889:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2890:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2891:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * This operation is needed for Third-generation HW Block
2892:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * based devices to take into account DIV-2 flip-flop.
2893:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2894:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider <<= 1uL;
2895:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2896:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2897:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((snsClkDivider * CapSense_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu <<
 1295              		.loc 1 2897 0
 1296 0000 0203     		lsls	r2, r0, #12
 1297 0002 121A     		subs	r2, r2, r0
 1298 0004 0123     		movs	r3, #1
 1299 0006 8B40     		lsls	r3, r3, r1
 1300 0008 013B     		subs	r3, r3, #1
 1301 000a 9A42     		cmp	r2, r3
 1302 000c 05D9     		bls	.L116
2898:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2899:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS12 mode */
2900:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_12_CONFIG;
2901:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2902:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if ((snsClkDivider * CapSense_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x00000001L
 1303              		.loc 1 2902 0
 1304 000e 0202     		lsls	r2, r0, #8
 1305 0010 101A     		subs	r0, r2, r0
 1306              	.LVL130:
 1307 0012 8342     		cmp	r3, r0
 1308 0014 03D3     		bcc	.L117
2903:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2904:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS8 mode */
2905:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_8_CONFIG;
 1309              		.loc 1 2905 0
 1310 0016 0520     		movs	r0, #5
 1311 0018 02E0     		b	.L115
 1312              	.LVL131:
 1313              	.L116:
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 78


2900:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1314              		.loc 1 2900 0
 1315 001a 0620     		movs	r0, #6
 1316              	.LVL132:
 1317 001c 00E0     		b	.L115
 1318              	.L117:
2906:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2907:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
2908:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2909:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set Direct clock mode */
2910:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_CLK_SOURCE_DIRECT;
 1319              		.loc 1 2910 0
 1320 001e 0020     		movs	r0, #0
 1321              	.L115:
 1322              	.LVL133:
2911:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2912:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2913:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (uint8)prsSize;
 1323              		.loc 1 2913 0
 1324 0020 C0B2     		uxtb	r0, r0
 1325              	.LVL134:
2914:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1326              		.loc 1 2914 0
 1327              		@ sp needed
 1328 0022 7047     		bx	lr
 1329              		.cfi_endproc
 1330              	.LFE26:
 1331              		.size	CapSense_SsCSDCalcPrsSize, .-CapSense_SsCSDCalcPrsSize
 1332              		.section	.text.CapSense_SsSetWidgetSenseClkSrc,"ax",%progbits
 1333              		.align	2
 1334              		.code	16
 1335              		.thumb_func
 1336              		.type	CapSense_SsSetWidgetSenseClkSrc, %function
 1337              	CapSense_SsSetWidgetSenseClkSrc:
 1338              	.LFB22:
2458:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
 1339              		.loc 1 2458 0
 1340              		.cfi_startproc
 1341              		@ args = 0, pretend = 0, frame = 0
 1342              		@ frame_needed = 0, uses_anonymous_args = 0
 1343              	.LVL135:
 1344 0000 70B5     		push	{r4, r5, r6, lr}
 1345              		.cfi_def_cfa_offset 16
 1346              		.cfi_offset 4, -16
 1347              		.cfi_offset 5, -12
 1348              		.cfi_offset 6, -8
 1349              		.cfi_offset 14, -4
 1350 0002 0E00     		movs	r6, r1
2470:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1351              		.loc 1 2470 0
 1352 0004 FFF7FEFF 		bl	CapSense_SsCSDGetColSnsClkDivider
 1353              	.LVL136:
 1354 0008 0500     		movs	r5, r0
 1355              	.LVL137:
2473:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
 1356              		.loc 1 2473 0
 1357 000a 3188     		ldrh	r1, [r6]
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 79


 1358 000c 0022     		movs	r2, #0
 1359 000e FFF7FEFF 		bl	CapSense_SsCSDGetNumberOfConversions
 1360              	.LVL138:
 1361 0012 0100     		movs	r1, r0
 1362              	.LVL139:
2475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
 1363              		.loc 1 2475 0
 1364 0014 2800     		movs	r0, r5
 1365              	.LVL140:
 1366 0016 FFF7FEFF 		bl	CapSense_SsCalcLfsrSize
 1367              	.LVL141:
 1368 001a 041E     		subs	r4, r0, #0
 1369              	.LVL142:
2476:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1370              		.loc 1 2476 0
 1371 001c 04D1     		bne	.L119
2482:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1372              		.loc 1 2482 0
 1373 001e 6800     		lsls	r0, r5, #1
 1374              	.LVL143:
 1375 0020 3188     		ldrh	r1, [r6]
 1376 0022 FFF7FEFF 		bl	CapSense_SsCSDCalcPrsSize
 1377              	.LVL144:
 1378 0026 0400     		movs	r4, r0
 1379              	.LVL145:
 1380              	.L119:
2484:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
 1381              		.loc 1 2484 0
 1382 0028 2100     		movs	r1, r4
 1383 002a 2800     		movs	r0, r5
 1384 002c FFF7FEFF 		bl	CapSense_SsCalcLfsrScale
 1385              	.LVL146:
2499:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1386              		.loc 1 2499 0
 1387 0030 0001     		lsls	r0, r0, #4
 1388              	.LVL147:
 1389 0032 C0B2     		uxtb	r0, r0
 1390 0034 2043     		orrs	r0, r4
 1391 0036 B073     		strb	r0, [r6, #14]
2534:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1392              		.loc 1 2534 0
 1393              		@ sp needed
 1394              	.LVL148:
 1395              	.LVL149:
 1396              	.LVL150:
 1397 0038 70BD     		pop	{r4, r5, r6, pc}
 1398              		.cfi_endproc
 1399              	.LFE22:
 1400              		.size	CapSense_SsSetWidgetSenseClkSrc, .-CapSense_SsSetWidgetSenseClkSrc
 1401 003a C046     		.section	.text.CapSense_SsAutoTuneWidget,"ax",%progbits
 1402              		.align	2
 1403              		.global	CapSense_SsAutoTuneWidget
 1404              		.code	16
 1405              		.thumb_func
 1406              		.type	CapSense_SsAutoTuneWidget, %function
 1407              	CapSense_SsAutoTuneWidget:
 1408              	.LFB19:
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 80


1781:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
 1409              		.loc 1 1781 0
 1410              		.cfi_startproc
 1411              		@ args = 0, pretend = 0, frame = 32
 1412              		@ frame_needed = 0, uses_anonymous_args = 0
 1413              	.LVL151:
 1414 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1415              		.cfi_def_cfa_offset 20
 1416              		.cfi_offset 4, -20
 1417              		.cfi_offset 5, -16
 1418              		.cfi_offset 6, -12
 1419              		.cfi_offset 7, -8
 1420              		.cfi_offset 14, -4
 1421 0002 4746     		mov	r7, r8
 1422 0004 80B4     		push	{r7}
 1423              		.cfi_def_cfa_offset 24
 1424              		.cfi_offset 8, -24
 1425 0006 88B0     		sub	sp, sp, #32
 1426              		.cfi_def_cfa_offset 56
 1427 0008 0500     		movs	r5, r0
 1428              	.LVL152:
1801:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
 1429              		.loc 1 1801 0
 1430 000a 4301     		lsls	r3, r0, #5
 1431 000c 494A     		ldr	r2, .L130
 1432 000e D318     		adds	r3, r2, r3
 1433              	.LVL153:
 1434 0010 5C68     		ldr	r4, [r3, #4]
 1435              	.LVL154:
1802:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1436              		.loc 1 1802 0
 1437 0012 9F68     		ldr	r7, [r3, #8]
 1438              	.LVL155:
1807:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1439              		.loc 1 1807 0
 1440 0014 484B     		ldr	r3, .L130+4
 1441              	.LVL156:
 1442 0016 997F     		ldrb	r1, [r3, #30]
 1443 0018 4848     		ldr	r0, .L130+8
 1444              	.LVL157:
 1445 001a FFF7FEFF 		bl	__aeabi_uidiv
 1446              	.LVL158:
 1447 001e 8046     		mov	r8, r0
 1448              	.LVL159:
1834:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDivTmp /= CapSense_CSD_SNS_FREQ_KHZ_MAX;
 1449              		.loc 1 1834 0
 1450 0020 FA20     		movs	r0, #250
 1451              	.LVL160:
 1452 0022 8000     		lsls	r0, r0, #2
 1453 0024 4346     		mov	r3, r8
 1454 0026 5843     		muls	r0, r3
 1455              	.LVL161:
1835:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1456              		.loc 1 1835 0
 1457 0028 4549     		ldr	r1, .L130+12
 1458 002a FFF7FEFF 		bl	__aeabi_uidiv
 1459              	.LVL162:
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 81


1837:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1460              		.loc 1 1837 0
 1461 002e FA23     		movs	r3, #250
 1462 0030 1B01     		lsls	r3, r3, #4
 1463 0032 9842     		cmp	r0, r3
 1464 0034 00D8     		bhi	.L121
1812:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
 1465              		.loc 1 1812 0
 1466 0036 1800     		movs	r0, r3
 1467              	.LVL163:
 1468              	.L121:
1842:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1469              		.loc 1 1842 0
 1470 0038 424B     		ldr	r3, .L130+16
 1471 003a 9C46     		mov	ip, r3
 1472 003c 6044     		add	r0, r0, ip
 1473              	.LVL164:
 1474 003e FA21     		movs	r1, #250
 1475 0040 8900     		lsls	r1, r1, #2
 1476 0042 FFF7FEFF 		bl	__aeabi_uidiv
 1477              	.LVL165:
 1478 0046 0600     		movs	r6, r0
 1479              	.LVL166:
1845:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1480              		.loc 1 1845 0
 1481 0048 C307     		lsls	r3, r0, #31
 1482 004a 00D5     		bpl	.L122
1847:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1483              		.loc 1 1847 0
 1484 004c 0136     		adds	r6, r6, #1
 1485              	.LVL167:
 1486              	.L122:
1851:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_CSD_SNSCLK_R_CONST;
 1487              		.loc 1 1851 0
 1488 004e 01AB     		add	r3, sp, #4
 1489 0050 4246     		mov	r2, r8
 1490 0052 DA82     		strh	r2, [r3, #22]
1852:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
 1491              		.loc 1 1852 0
 1492 0054 FA22     		movs	r2, #250
 1493 0056 9200     		lsls	r2, r2, #2
 1494 0058 1A82     		strh	r2, [r3, #16]
1853:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.fingerCap = ptrRamWidget->fingerCap;
 1495              		.loc 1 1853 0
 1496 005a 3B4A     		ldr	r2, .L130+20
 1497 005c 5A82     		strh	r2, [r3, #18]
1854:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sigPFC = &ptrRamWidget->sigPFC;
 1498              		.loc 1 1854 0
 1499 005e 228A     		ldrh	r2, [r4, #16]
 1500 0060 9A82     		strh	r2, [r3, #20]
1855:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1501              		.loc 1 1855 0
 1502 0062 2200     		movs	r2, r4
 1503 0064 1232     		adds	r2, r2, #18
 1504 0066 0492     		str	r2, [sp, #16]
1864:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1505              		.loc 1 1864 0
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 82


 1506 0068 0C23     		movs	r3, #12
 1507 006a 2380     		strh	r3, [r4]
1866:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->snsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
 1508              		.loc 1 1866 0
 1509 006c 3749     		ldr	r1, .L130+24
 1510 006e 4046     		mov	r0, r8
 1511 0070 FFF7FEFF 		bl	__aeabi_uidiv
 1512              	.LVL168:
 1513 0074 A081     		strh	r0, [r4, #12]
1867:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1514              		.loc 1 1867 0
 1515 0076 0023     		movs	r3, #0
 1516 0078 A373     		strb	r3, [r4, #14]
1875:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1517              		.loc 1 1875 0
 1518 007a 5521     		movs	r1, #85
 1519 007c 2800     		movs	r0, r5
 1520 007e FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1521              	.LVL169:
1793:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1522              		.loc 1 1793 0
 1523 0082 0021     		movs	r1, #0
1791:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxCp = 0u;
 1524              		.loc 1 1791 0
 1525 0084 0023     		movs	r3, #0
 1526 0086 9C46     		mov	ip, r3
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1527              		.loc 1 1878 0
 1528 0088 0022     		movs	r2, #0
 1529 008a 07E0     		b	.L123
 1530              	.LVL170:
 1531              	.L125:
1881:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1532              		.loc 1 1881 0
 1533 008c 7B7A     		ldrb	r3, [r7, #9]
 1534 008e 9942     		cmp	r1, r3
 1535 0090 02D2     		bcs	.L124
 1536              	.LVL171:
1887:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1537              		.loc 1 1887 0
 1538 0092 3988     		ldrh	r1, [r7]
 1539 0094 8C46     		mov	ip, r1
 1540              	.LVL172:
1886:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
 1541              		.loc 1 1886 0
 1542 0096 1900     		movs	r1, r3
 1543              	.LVL173:
 1544              	.L124:
1898:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1545              		.loc 1 1898 0 discriminator 2
 1546 0098 0A37     		adds	r7, r7, #10
 1547              	.LVL174:
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1548              		.loc 1 1878 0 discriminator 2
 1549 009a 0132     		adds	r2, r2, #1
 1550              	.LVL175:
 1551              	.L123:
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 83


1878:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1552              		.loc 1 1878 0 is_stmt 0 discriminator 1
 1553 009c 6B01     		lsls	r3, r5, #5
 1554 009e 2548     		ldr	r0, .L130
 1555 00a0 C318     		adds	r3, r0, r3
 1556 00a2 DB7E     		ldrb	r3, [r3, #27]
 1557 00a4 9A42     		cmp	r2, r3
 1558 00a6 F1D3     		bcc	.L125
1902:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacComp = (uint8)maxIdacComp;
 1559              		.loc 1 1902 0 is_stmt 1
 1560 00a8 637A     		ldrb	r3, [r4, #9]
 1561 00aa 01AF     		add	r7, sp, #4
 1562              	.LVL176:
 1563 00ac BB76     		strb	r3, [r7, #26]
1903:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue;
 1564              		.loc 1 1903 0
 1565 00ae F976     		strb	r1, [r7, #27]
1904:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
 1566              		.loc 1 1904 0
 1567 00b0 A37A     		ldrb	r3, [r4, #10]
 1568 00b2 DB00     		lsls	r3, r3, #3
 1569 00b4 264A     		ldr	r2, .L130+28
 1570              	.LVL177:
 1571 00b6 D318     		adds	r3, r2, r3
 1572 00b8 5B68     		ldr	r3, [r3, #4]
 1573 00ba 0293     		str	r3, [sp, #8]
1905:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.calTarget = (uint16)((maxRaw * CapSense_AUTOTUNE_CAL_UNITS) /
 1574              		.loc 1 1905 0
 1575 00bc 0C23     		movs	r3, #12
 1576 00be 9846     		mov	r8, r3
 1577              	.LVL178:
 1578 00c0 A044     		add	r8, r8, r4
 1579 00c2 4346     		mov	r3, r8
 1580 00c4 0393     		str	r3, [sp, #12]
1906:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
 1581              		.loc 1 1906 0
 1582 00c6 FA23     		movs	r3, #250
 1583 00c8 9B00     		lsls	r3, r3, #2
 1584 00ca 6046     		mov	r0, ip
 1585 00cc 5843     		muls	r0, r3
 1586 00ce 2149     		ldr	r1, .L130+32
 1587              	.LVL179:
 1588 00d0 FFF7FEFF 		bl	__aeabi_uidiv
 1589              	.LVL180:
 1590 00d4 3883     		strh	r0, [r7, #24]
1910:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sensorCap = maxCp;
 1591              		.loc 1 1910 0
 1592 00d6 3800     		movs	r0, r7
 1593 00d8 FFF7FEFF 		bl	SmartSense_TunePrescalers
 1594              	.LVL181:
1911:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1595              		.loc 1 1911 0
 1596 00dc 0190     		str	r0, [sp, #4]
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1597              		.loc 1 1914 0
 1598 00de 01E0     		b	.L126
 1599              	.L127:
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 84


1916:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1600              		.loc 1 1916 0
 1601 00e0 5B00     		lsls	r3, r3, #1
 1602 00e2 A381     		strh	r3, [r4, #12]
 1603              	.L126:
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1604              		.loc 1 1914 0
 1605 00e4 A389     		ldrh	r3, [r4, #12]
 1606 00e6 9E42     		cmp	r6, r3
 1607 00e8 FAD8     		bhi	.L127
1972:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1608              		.loc 1 1972 0
 1609 00ea 1B4B     		ldr	r3, .L130+36
 1610 00ec 9842     		cmp	r0, r3
 1611 00ee 01D8     		bhi	.L129
1782:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1612              		.loc 1 1782 0
 1613 00f0 0026     		movs	r6, #0
 1614              	.LVL182:
 1615 00f2 00E0     		b	.L128
 1616              	.LVL183:
 1617              	.L129:
1974:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1618              		.loc 1 1974 0
 1619 00f4 0626     		movs	r6, #6
 1620              	.LVL184:
 1621              	.L128:
1984:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1622              		.loc 1 1984 0
 1623 00f6 5521     		movs	r1, #85
 1624 00f8 2800     		movs	r0, r5
 1625              	.LVL185:
 1626 00fa FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1627              	.LVL186:
1986:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
 1628              		.loc 1 1986 0
 1629 00fe A37A     		ldrb	r3, [r4, #10]
 1630 0100 DB00     		lsls	r3, r3, #3
 1631 0102 134A     		ldr	r2, .L130+28
 1632 0104 D318     		adds	r3, r2, r3
 1633 0106 5B68     		ldr	r3, [r3, #4]
 1634 0108 01A8     		add	r0, sp, #4
 1635 010a 4360     		str	r3, [r0, #4]
1987:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
 1636              		.loc 1 1987 0
 1637 010c 637A     		ldrb	r3, [r4, #9]
 1638 010e 8376     		strb	r3, [r0, #26]
1988:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1639              		.loc 1 1988 0
 1640 0110 4346     		mov	r3, r8
 1641 0112 8360     		str	r3, [r0, #8]
2003:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1642              		.loc 1 2003 0
 1643 0114 FFF7FEFF 		bl	SmartSense_TuneSensitivity
 1644              	.LVL187:
 1645 0118 2080     		strh	r0, [r4]
2013:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 85


 1646              		.loc 1 2013 0
 1647 011a 2100     		movs	r1, r4
 1648 011c 2800     		movs	r0, r5
 1649 011e FFF7FEFF 		bl	CapSense_SsSetWidgetSenseClkSrc
 1650              	.LVL188:
2016:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1651              		.loc 1 2016 0
 1652 0122 5521     		movs	r1, #85
 1653 0124 2800     		movs	r0, r5
 1654 0126 FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1655              	.LVL189:
 1656 012a 3043     		orrs	r0, r6
 1657              	.LVL190:
2023:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1658              		.loc 1 2023 0
 1659 012c 08B0     		add	sp, sp, #32
 1660              		@ sp needed
 1661              	.LVL191:
 1662              	.LVL192:
 1663 012e 04BC     		pop	{r2}
 1664 0130 9046     		mov	r8, r2
 1665 0132 F0BD     		pop	{r4, r5, r6, r7, pc}
 1666              	.L131:
 1667              		.align	2
 1668              	.L130:
 1669 0134 00000000 		.word	CapSense_dsFlash
 1670 0138 00000000 		.word	CapSense_dsRam
 1671 013c C05D0000 		.word	24000
 1672 0140 70170000 		.word	6000
 1673 0144 E7030000 		.word	999
 1674 0148 E5070000 		.word	2021
 1675 014c DC050000 		.word	1500
 1676 0150 00000000 		.word	.LANCHOR1
 1677 0154 FF0F0000 		.word	4095
 1678 0158 880D0100 		.word	69000
 1679              		.cfi_endproc
 1680              	.LFE19:
 1681              		.size	CapSense_SsAutoTuneWidget, .-CapSense_SsAutoTuneWidget
 1682              		.section	.text.CapSense_SsAutoTune,"ax",%progbits
 1683              		.align	2
 1684              		.global	CapSense_SsAutoTune
 1685              		.code	16
 1686              		.thumb_func
 1687              		.type	CapSense_SsAutoTune, %function
 1688              	CapSense_SsAutoTune:
 1689              	.LFB20:
2048:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
 1690              		.loc 1 2048 0
 1691              		.cfi_startproc
 1692              		@ args = 0, pretend = 0, frame = 0
 1693              		@ frame_needed = 0, uses_anonymous_args = 0
 1694 0000 70B5     		push	{r4, r5, r6, lr}
 1695              		.cfi_def_cfa_offset 16
 1696              		.cfi_offset 4, -16
 1697              		.cfi_offset 5, -12
 1698              		.cfi_offset 6, -8
 1699              		.cfi_offset 14, -4
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 86


 1700              	.LVL193:
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1701              		.loc 1 2053 0
 1702 0002 0024     		movs	r4, #0
2049:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
 1703              		.loc 1 2049 0
 1704 0004 0025     		movs	r5, #0
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1705              		.loc 1 2053 0
 1706 0006 04E0     		b	.L133
 1707              	.LVL194:
 1708              	.L134:
2058:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1709              		.loc 1 2058 0
 1710 0008 2000     		movs	r0, r4
 1711 000a FFF7FEFF 		bl	CapSense_SsAutoTuneWidget
 1712              	.LVL195:
 1713 000e 0543     		orrs	r5, r0
 1714              	.LVL196:
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1715              		.loc 1 2053 0
 1716 0010 0134     		adds	r4, r4, #1
 1717              	.LVL197:
 1718              	.L133:
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1719              		.loc 1 2053 0 is_stmt 0 discriminator 1
 1720 0012 022C     		cmp	r4, #2
 1721 0014 F8D9     		bls	.L134
2062:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
 1722              		.loc 1 2062 0 is_stmt 1
 1723 0016 2800     		movs	r0, r5
 1724              		@ sp needed
 1725              	.LVL198:
 1726              	.LVL199:
 1727 0018 70BD     		pop	{r4, r5, r6, pc}
 1728              		.cfi_endproc
 1729              	.LFE20:
 1730              		.size	CapSense_SsAutoTune, .-CapSense_SsAutoTune
 1731 001a C046     		.section	.text.CapSense_SsInitializeSourceSenseClk,"ax",%progbits
 1732              		.align	2
 1733              		.global	CapSense_SsInitializeSourceSenseClk
 1734              		.code	16
 1735              		.thumb_func
 1736              		.type	CapSense_SsInitializeSourceSenseClk, %function
 1737              	CapSense_SsInitializeSourceSenseClk:
 1738              	.LFB21:
2405:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 1739              		.loc 1 2405 0
 1740              		.cfi_startproc
 1741              		@ args = 0, pretend = 0, frame = 0
 1742              		@ frame_needed = 0, uses_anonymous_args = 0
 1743 0000 10B5     		push	{r4, lr}
 1744              		.cfi_def_cfa_offset 8
 1745              		.cfi_offset 4, -8
 1746              		.cfi_offset 14, -4
 1747              	.LVL200:
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 87


 1748              		.loc 1 2409 0
 1749 0002 0024     		movs	r4, #0
 1750 0004 07E0     		b	.L136
 1751              	.LVL201:
 1752              	.L137:
2411:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1753              		.loc 1 2411 0
 1754 0006 6301     		lsls	r3, r4, #5
 1755 0008 044A     		ldr	r2, .L138
 1756 000a D318     		adds	r3, r2, r3
 1757 000c 5968     		ldr	r1, [r3, #4]
 1758              	.LVL202:
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1759              		.loc 1 2417 0
 1760 000e 2000     		movs	r0, r4
 1761 0010 FFF7FEFF 		bl	CapSense_SsSetWidgetSenseClkSrc
 1762              	.LVL203:
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1763              		.loc 1 2409 0
 1764 0014 0134     		adds	r4, r4, #1
 1765              	.LVL204:
 1766              	.L136:
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1767              		.loc 1 2409 0 is_stmt 0 discriminator 1
 1768 0016 022C     		cmp	r4, #2
 1769 0018 F5D9     		bls	.L137
2432:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
 1770              		.loc 1 2432 0 is_stmt 1
 1771              		@ sp needed
 1772              	.LVL205:
 1773 001a 10BD     		pop	{r4, pc}
 1774              	.L139:
 1775              		.align	2
 1776              	.L138:
 1777 001c 00000000 		.word	CapSense_dsFlash
 1778              		.cfi_endproc
 1779              	.LFE21:
 1780              		.size	CapSense_SsInitializeSourceSenseClk, .-CapSense_SsInitializeSourceSenseClk
 1781              		.section	.text.CapSense_DischargeExtCapacitors,"ax",%progbits
 1782              		.align	2
 1783              		.global	CapSense_DischargeExtCapacitors
 1784              		.code	16
 1785              		.thumb_func
 1786              		.type	CapSense_DischargeExtCapacitors, %function
 1787              	CapSense_DischargeExtCapacitors:
 1788              	.LFB27:
2915:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2916:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2917:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2918:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2919:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
2920:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2921:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_DischargeExtCapacitors
2922:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2923:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2924:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2925:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The internal function discharge available external capacitors.
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 88


2926:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2927:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2928:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
2929:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects
2930:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
2931:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses
2932:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
2933:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2934:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
2935:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  dischargeTime The discharge time in us.
2936:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2937:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2938:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_DischargeExtCapacitors(uint32 dischargeTime)
2939:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1789              		.loc 1 2939 0
 1790              		.cfi_startproc
 1791              		@ args = 0, pretend = 0, frame = 8
 1792              		@ frame_needed = 0, uses_anonymous_args = 0
 1793              	.LVL206:
 1794 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1795              		.cfi_def_cfa_offset 20
 1796              		.cfi_offset 4, -20
 1797              		.cfi_offset 5, -16
 1798              		.cfi_offset 6, -12
 1799              		.cfi_offset 7, -8
 1800              		.cfi_offset 14, -4
 1801 0002 5F46     		mov	r7, fp
 1802 0004 5646     		mov	r6, r10
 1803 0006 4D46     		mov	r5, r9
 1804 0008 4446     		mov	r4, r8
 1805 000a F0B4     		push	{r4, r5, r6, r7}
 1806              		.cfi_def_cfa_offset 36
 1807              		.cfi_offset 8, -36
 1808              		.cfi_offset 9, -32
 1809              		.cfi_offset 10, -28
 1810              		.cfi_offset 11, -24
 1811 000c 83B0     		sub	sp, sp, #12
 1812              		.cfi_def_cfa_offset 48
 1813 000e 0190     		str	r0, [sp, #4]
2940:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 hsiomReg;
2941:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 drReg;
2942:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 pcReg;
2943:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
2944:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8  interruptState;
2945:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2946:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Store register state */
2947:Generated_Source\PSoC4/CapSense_Sensing.c ****         hsiomReg = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MASK;
 1814              		.loc 1 2947 0
 1815 0010 2B4E     		ldr	r6, .L141
 1816 0012 3468     		ldr	r4, [r6]
 1817 0014 F023     		movs	r3, #240
 1818 0016 1B02     		lsls	r3, r3, #8
 1819 0018 1C40     		ands	r4, r3
 1820 001a 0094     		str	r4, [sp]
 1821              	.LVL207:
2948:Generated_Source\PSoC4/CapSense_Sensing.c ****         drReg = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR) & CapSense_EXT_CAP_DR_MASK;
 1822              		.loc 1 2948 0
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 89


 1823 001c 294F     		ldr	r7, .L141+4
 1824 001e 3B68     		ldr	r3, [r7]
 1825 0020 0822     		movs	r2, #8
 1826 0022 9246     		mov	r10, r2
 1827 0024 1A40     		ands	r2, r3
 1828 0026 9146     		mov	r9, r2
 1829              	.LVL208:
2949:Generated_Source\PSoC4/CapSense_Sensing.c ****         pcReg = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR) & CapSense_EXT_CAP_PC_MASK;
 1830              		.loc 1 2949 0
 1831 0028 274C     		ldr	r4, .L141+8
 1832              	.LVL209:
 1833 002a 2568     		ldr	r5, [r4]
 1834 002c E023     		movs	r3, #224
 1835 002e 1B01     		lsls	r3, r3, #4
 1836 0030 1D40     		ands	r5, r3
 1837 0032 AB46     		mov	fp, r5
 1838              	.LVL210:
2950:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2951:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Ext Cap from AMUXBUS-A using HSIOM registers */
2952:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1839              		.loc 1 2952 0
 1840 0034 FFF7FEFF 		bl	CyEnterCriticalSection
 1841              	.LVL211:
2953:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
 1842              		.loc 1 2953 0
 1843 0038 3368     		ldr	r3, [r6]
 1844              	.LVL212:
2954:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
 1845              		.loc 1 2954 0
 1846 003a 244A     		ldr	r2, .L141+12
 1847 003c 9046     		mov	r8, r2
 1848 003e 1340     		ands	r3, r2
 1849              	.LVL213:
2955:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
 1850              		.loc 1 2955 0
 1851 0040 3360     		str	r3, [r6]
 1852              	.LVL214:
2956:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1853              		.loc 1 2956 0
 1854 0042 FFF7FEFF 		bl	CyExitCriticalSection
 1855              	.LVL215:
2957:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2958:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set output port register to 0 to connect to GND */
2959:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1856              		.loc 1 2959 0
 1857 0046 FFF7FEFF 		bl	CyEnterCriticalSection
 1858              	.LVL216:
2960:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
 1859              		.loc 1 2960 0
 1860 004a 3B68     		ldr	r3, [r7]
 1861              	.LVL217:
2961:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
 1862              		.loc 1 2961 0
 1863 004c 5246     		mov	r2, r10
 1864 004e 9343     		bics	r3, r2
 1865              	.LVL218:
2962:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 90


 1866              		.loc 1 2962 0
 1867 0050 3B60     		str	r3, [r7]
2963:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1868              		.loc 1 2963 0
 1869 0052 FFF7FEFF 		bl	CyExitCriticalSection
 1870              	.LVL219:
2964:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2965:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2966:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1871              		.loc 1 2966 0
 1872 0056 FFF7FEFF 		bl	CyEnterCriticalSection
 1873              	.LVL220:
2967:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
 1874              		.loc 1 2967 0
 1875 005a 2368     		ldr	r3, [r4]
 1876              	.LVL221:
2968:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
 1877              		.loc 1 2968 0
 1878 005c 1C4D     		ldr	r5, .L141+16
 1879              	.LVL222:
 1880 005e 2B40     		ands	r3, r5
 1881              	.LVL223:
2969:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (CapSense_EXT_CAP_PC_STRONG_CFG);
 1882              		.loc 1 2969 0
 1883 0060 C022     		movs	r2, #192
 1884 0062 1201     		lsls	r2, r2, #4
 1885 0064 1343     		orrs	r3, r2
 1886              	.LVL224:
2970:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
 1887              		.loc 1 2970 0
 1888 0066 2360     		str	r3, [r4]
2971:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1889              		.loc 1 2971 0
 1890 0068 FFF7FEFF 		bl	CyExitCriticalSection
 1891              	.LVL225:
2972:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2973:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
2974:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyDelayUs((uint16)dischargeTime);
 1892              		.loc 1 2974 0
 1893 006c 6B46     		mov	r3, sp
 1894 006e 9888     		ldrh	r0, [r3, #4]
 1895 0070 FFF7FEFF 		bl	CyDelayUs
 1896              	.LVL226:
2975:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2976:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Restore previous register values */
2977:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1897              		.loc 1 2977 0
 1898 0074 FFF7FEFF 		bl	CyEnterCriticalSection
 1899              	.LVL227:
2978:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
 1900              		.loc 1 2978 0
 1901 0078 2368     		ldr	r3, [r4]
 1902              	.LVL228:
2979:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
 1903              		.loc 1 2979 0
 1904 007a 1D40     		ands	r5, r3
 1905              	.LVL229:
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 91


2980:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= pcReg;
 1906              		.loc 1 2980 0
 1907 007c 5A46     		mov	r2, fp
 1908 007e 1543     		orrs	r5, r2
 1909              	.LVL230:
2981:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
 1910              		.loc 1 2981 0
 1911 0080 2560     		str	r5, [r4]
2982:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1912              		.loc 1 2982 0
 1913 0082 FFF7FEFF 		bl	CyExitCriticalSection
 1914              	.LVL231:
2983:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2984:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1915              		.loc 1 2984 0
 1916 0086 FFF7FEFF 		bl	CyEnterCriticalSection
 1917              	.LVL232:
2985:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
 1918              		.loc 1 2985 0
 1919 008a 3B68     		ldr	r3, [r7]
 1920              	.LVL233:
2986:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
 1921              		.loc 1 2986 0
 1922 008c 5246     		mov	r2, r10
 1923 008e 9343     		bics	r3, r2
 1924              	.LVL234:
2987:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= drReg;
 1925              		.loc 1 2987 0
 1926 0090 4A46     		mov	r2, r9
 1927 0092 1343     		orrs	r3, r2
 1928              	.LVL235:
2988:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
 1929              		.loc 1 2988 0
 1930 0094 3B60     		str	r3, [r7]
2989:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1931              		.loc 1 2989 0
 1932 0096 FFF7FEFF 		bl	CyExitCriticalSection
 1933              	.LVL236:
2990:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2991:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1934              		.loc 1 2991 0
 1935 009a FFF7FEFF 		bl	CyEnterCriticalSection
 1936              	.LVL237:
2992:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
 1937              		.loc 1 2992 0
 1938 009e 3368     		ldr	r3, [r6]
 1939              	.LVL238:
2993:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
 1940              		.loc 1 2993 0
 1941 00a0 4246     		mov	r2, r8
 1942 00a2 1A40     		ands	r2, r3
 1943 00a4 1400     		movs	r4, r2
 1944              	.LVL239:
2994:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= hsiomReg;
 1945              		.loc 1 2994 0
 1946 00a6 009B     		ldr	r3, [sp]
 1947 00a8 1C43     		orrs	r4, r3
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 92


 1948              	.LVL240:
2995:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
 1949              		.loc 1 2995 0
 1950 00aa 3460     		str	r4, [r6]
2996:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1951              		.loc 1 2996 0
 1952 00ac FFF7FEFF 		bl	CyExitCriticalSection
 1953              	.LVL241:
2997:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1954              		.loc 1 2997 0
 1955 00b0 03B0     		add	sp, sp, #12
 1956              		@ sp needed
 1957              	.LVL242:
 1958              	.LVL243:
 1959              	.LVL244:
 1960 00b2 3CBC     		pop	{r2, r3, r4, r5}
 1961 00b4 9046     		mov	r8, r2
 1962 00b6 9946     		mov	r9, r3
 1963 00b8 A246     		mov	r10, r4
 1964 00ba AB46     		mov	fp, r5
 1965 00bc F0BD     		pop	{r4, r5, r6, r7, pc}
 1966              	.L142:
 1967 00be C046     		.align	2
 1968              	.L141:
 1969 00c0 00040240 		.word	1073873920
 1970 00c4 00040440 		.word	1074004992
 1971 00c8 08040440 		.word	1074005000
 1972 00cc FF0FFFFF 		.word	-61441
 1973 00d0 FFF1FFFF 		.word	-3585
 1974              		.cfi_endproc
 1975              	.LFE27:
 1976              		.size	CapSense_DischargeExtCapacitors, .-CapSense_DischargeExtCapacitors
 1977              		.section	.text.CapSense_SetInactiveElectrodeState,"ax",%progbits
 1978              		.align	2
 1979              		.global	CapSense_SetInactiveElectrodeState
 1980              		.code	16
 1981              		.thumb_func
 1982              		.type	CapSense_SetInactiveElectrodeState, %function
 1983              	CapSense_SetInactiveElectrodeState:
 1984              	.LFB28:
2998:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2999:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
3000:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3001:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3002:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV1)
3003:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
3004:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_DischargeExtCapacitors
3005:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
3006:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3007:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
3008:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The internal function discharge available external capacitors.
3009:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3010:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
3011:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
3012:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects
3013:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
3014:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 93


3015:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
3016:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3017:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3018:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  dischargeTime The discharge time in us.
3019:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3020:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
3021:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_DischargeExtCapacitors(uint32 dischargeTime)
3022:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
3023:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Store the pin configuration, the CMOD capacitor is connected to. */
3024:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3025:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodHsiom = CY_GET_REG32(CapSense_CMOD_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MASK_
3026:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodDr = CY_GET_REG32(CapSense_CMOD_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CMOD;
3027:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodPc = CY_GET_REG32(CapSense_CMOD_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CMOD;
3028:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3029:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CSH capacitor is connected to. */
3030:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3031:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3032:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshHsiom = CY_GET_REG32(CapSense_CSH_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3033:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshDr = CY_GET_REG32(CapSense_CSH_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CSH;
3034:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshPc = CY_GET_REG32(CapSense_CSH_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CSH;
3035:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3036:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3037:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3038:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3039:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CintA capacitor is connected to. */
3040:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintAHsiom = CY_GET_REG32(CapSense_CintA_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3041:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintADr = CY_GET_REG32(CapSense_CintA_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CINTA;
3042:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintAPc = CY_GET_REG32(CapSense_CintA_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CINTA;
3043:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3044:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CintB capacitor is connected to. */
3045:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBHsiom = CY_GET_REG32(CapSense_CintB_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3046:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBDr = CY_GET_REG32(CapSense_CintB_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CINTB;
3047:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBPc = CY_GET_REG32(CapSense_CintB_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CINTB;
3048:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3049:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3050:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3051:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CMOD capacitor from the AMUXBUS and connect it to GND. */
3052:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CMOD,
3053:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3054:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_DR_PTR, CapSense_EXT_CAP_DR_MASK_CMOD, 0u);
3055:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_PC_PTR, CapSense_EXT_CAP_PC_MASK_CMOD,
3056:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CMOD);
3057:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3058:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3059:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3060:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Disconnect the CSH capacitor from the AMUXBUS and connect it to GND. */
3061:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CSH,
3062:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_HSIOM_SEL_GPIO);
3063:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR, CapSense_EXT_CAP_DR_MASK_CSH, 0u);
3064:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_PC_PTR, CapSense_EXT_CAP_PC_MASK_CSH,
3065:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_PC_STRONG_CFG_CSH);
3066:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3067:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3068:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3069:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3070:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CintA capacitor from the AMUXBUS and connect it to GND. */
3071:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CINTA,
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 94


3072:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3073:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_DR_PTR, CapSense_EXT_CAP_DR_MASK_CINTA, 0u);
3074:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_PC_PTR, CapSense_EXT_CAP_PC_MASK_CINTA,
3075:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CINTA);
3076:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3077:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CintB capacitor from the AMUXBUS and connect it to GND. */
3078:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CINTB,
3079:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3080:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_DR_PTR, CapSense_EXT_CAP_DR_MASK_CINTB, 0u);
3081:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_PC_PTR, CapSense_EXT_CAP_PC_MASK_CINTB,
3082:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CINTB);
3083:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3084:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3085:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
3086:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyDelayUs((uint16)dischargeTime);
3087:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3088:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3089:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CMOD capacitor is connected to. */
3090:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_PC_PTR,
3091:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CMOD, cmodPc);
3092:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_DR_PTR,
3093:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CMOD, cmodDr);
3094:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR,
3095:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CMOD, cmodHsiom);
3096:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3097:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3098:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3099:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Restore the pin configuration, the CSH capacitor is connected to. */
3100:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_PC_PTR,
3101:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_PC_MASK_CSH, cshPc);
3102:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR,
3103:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_DR_MASK_CSH, cshDr);
3104:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR,
3105:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_HSIOM_MASK_CSH, cshHsiom);
3106:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3107:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3108:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3109:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3110:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CintA capacitor is connected to. */
3111:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_PC_PTR,
3112:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CINTA, cintAPc);
3113:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_DR_PTR,
3114:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CINTA, cintADr);
3115:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR,
3116:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CINTA, cintAHsiom);
3117:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3118:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CintB capacitor is connected to. */
3119:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_PC_PTR,
3120:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CINTB, cintBPc);
3121:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_DR_PTR,
3122:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CINTB, cintBDr);
3123:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR,
3124:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CINTB, cintBHsiom);
3125:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3126:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
3127:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV1) */
3128:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 95


3129:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3130:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
3131:Generated_Source\PSoC4/CapSense_Sensing.c ****     (CapSense_ENABLE == CapSense_CSX_EN))
3132:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
3133:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SetInactiveElectrodeState
3134:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
3135:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3136:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
3137:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function updates the RAM data structure with the desired state of inactive
3138:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  electrodes for the specified operation mode. The state of pins is not changed
3139:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  in scope of this routine.
3140:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3141:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
3142:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function updates the following registers of RAM data structure:
3143:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_SCAN_CSD_ISC_VALUE - Connection of inactive CSD and CSX
3144:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     electrodes during the regular CSD scan. By default, this register is initialized
3145:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     with the value of Inactive Sensor Connection combobox on the CSD Settings tab.
3146:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_SCAN_CSD_E value should be used as the Mode parameter
3147:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3148:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3149:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_SCAN_CSX_ISC_VALUE - Connection of inactive CSD, CSX and
3150:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the dedicated Shield electrodes during the regular CSX scan. By default, this
3151:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     register is initialized with the value of Inactive Sensor Connection combobox
3152:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     on the CSX Settings tab.
3153:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_SCAN_CSX_E value should be used as the Mode parameter
3154:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3155:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3156:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSD_SNS_CAP_ISC_VALUE - Connection of inactive CSD and CSX
3157:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     electrodes during measurement of CSD electrodes capacitance.
3158:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     This register is initialized with the CapSense_SNS_CONNECTION_GROUND value
3159:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     by default.
3160:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSD_SNS_CAP_E value should be used as the Mode parameter
3161:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3162:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3163:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSX_SNS_CAP_ISC_VALUE - Connection of inactive CSD, CSX and
3164:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the dedicated Shield electrodes during measurement of CSX electrodes (Tx and Rx)
3165:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     capacitance. This register is initialized with the CapSense_SNS_CONNECTION_GROUND
3166:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     value by default.
3167:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSX_SNS_CAP_E value should be used as the Mode parameter
3168:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3169:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3170:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSD_SH_CAP_ISC_VALUE - Connection of inactive CSD and CSX electrodes
3171:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     measurement of dedicated Shield  electrodes capacitance. This register is initialized wit
3172:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the CapSense_SNS_CONNECTION_GROUND value by default.
3173:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSD_SH_CAP_E value should be used as the Mode parameter
3174:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3175:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3176:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3177:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode Operation mode, the state of inactive sensors should be configured for.
3178:Generated_Source\PSoC4/CapSense_Sensing.c ****     *       This parameter can take the following values:
3179:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_SCAN_CSD_E - Regular CSD scan.
3180:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_SCAN_CSX_E - Regular CSX scan.
3181:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSD_SNS_CAP_E - Measurement of the CSD sensor capacitance.
3182:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSX_SNS_CAP_E - Measurement of the CSX electrode capacitance.
3183:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSD_SH_CAP_E - Measurement of the dedicated CSD Shield
3184:Generated_Source\PSoC4/CapSense_Sensing.c ****     *          electrode capacitance.
3185:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 96


3186:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3187:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  state The desired state of inactive sensors.
3188:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        This parameter can take the following values:
3189:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_GROUND - Inactive sensors are connected to the ground.
3190:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_HIGHZ - Inactive sensors are floating (not
3191:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           connected to GND or Shield).
3192:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_SHIELD - Inactive sensors are connected to the shield.
3193:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           This option is available only if the Enable shield electrode check box is set.
3194:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           At least one dedicated shield electrode is required to use the
3195:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           CapSense_SNS_CONNECTION_SHIELD option for the CapSense_BIST_CSD_SH_CAP_E
3196:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           operation mode.
3197:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3198:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
3199:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
3200:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation was successfully completed.
3201:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
3202:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3203:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
3204:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32_t CapSense_SetInactiveElectrodeState(CapSense_OPERATION_MODE_ENUM mode, uint32_t state)
3205:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1985              		.loc 1 3205 0
 1986              		.cfi_startproc
 1987              		@ args = 0, pretend = 0, frame = 0
 1988              		@ frame_needed = 0, uses_anonymous_args = 0
 1989              	.LVL245:
 1990 0000 10B5     		push	{r4, lr}
 1991              		.cfi_def_cfa_offset 8
 1992              		.cfi_offset 4, -8
 1993              		.cfi_offset 14, -4
 1994              	.LVL246:
3206:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32_t retVal = CYRET_SUCCESS;
3207:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3208:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(mode)
 1995              		.loc 1 3208 0
 1996 0002 0028     		cmp	r0, #0
 1997 0004 03D1     		bne	.L147
3209:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
3210:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_ENABLE == CapSense_CSD_EN)
3211:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SCAN_CSD_E:
3212:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCsdISC = (uint8)state;
 1998              		.loc 1 3212 0
 1999 0006 8023     		movs	r3, #128
 2000 0008 034A     		ldr	r2, .L148
 2001 000a D154     		strb	r1, [r2, r3]
3213:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 2002              		.loc 1 3213 0
 2003 000c 03E0     		b	.L146
 2004              	.L147:
3214:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3215:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3216:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_ENABLE == CapSense_CSX_EN)
3217:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SCAN_CSX_E:
3218:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCsxISC = (uint8)state;
3219:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3220:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3221:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3222:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 97


3223:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SNS_CAP_EN) &&\
3224:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_EN))
3225:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSD_SNS_CAP_E:
3226:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.selfTestConfig.bistCsdSnsCapISC = (uint8)state;
3227:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3228:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3229:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3230:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3231:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SNS_CAP_EN) &&\
3232:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSX_EN))
3233:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSX_SNS_CAP_E:
3234:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.selfTestConfig.bistCsxSnsCapISC = (uint8)state;
3235:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3236:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3238:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3239:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SH_CAP_EN) &&\
3240:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_EN) &&\
3241:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_SHIELD_EN))
3242:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSD_SH_CAP_E:
3243:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_CSD_TOTAL_SHIELD_COUNT == 0u) &&
3244:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_SNS_CONNECTION_SHIELD != state))
3245:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
3246:Generated_Source\PSoC4/CapSense_Sensing.c ****                     retVal = CYRET_BAD_PARAM;
3247:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
3248:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
3249:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
3250:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_dsRam.selfTestConfig.bistCsdShCapISC = (uint8)state;
3251:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
3252:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3253:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3254:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3255:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
3256:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0u);
 2005              		.loc 1 3256 0 discriminator 1
 2006 000e 0020     		movs	r0, #0
 2007              	.LVL247:
 2008 0010 FFF7FEFF 		bl	CyHalt
 2009              	.LVL248:
3257:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = CYRET_BAD_PARAM;
 2010              		.loc 1 3257 0 discriminator 1
 2011 0014 0120     		movs	r0, #1
 2012              	.LVL249:
 2013              	.L146:
3258:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
3259:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
3260:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3261:Generated_Source\PSoC4/CapSense_Sensing.c ****         return(retVal);
3262:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 2014              		.loc 1 3262 0
 2015              		@ sp needed
 2016 0016 10BD     		pop	{r4, pc}
 2017              	.L149:
 2018              		.align	2
 2019              	.L148:
 2020 0018 00000000 		.word	CapSense_dsRam
 2021              		.cfi_endproc
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 98


 2022              	.LFE28:
 2023              		.size	CapSense_SetInactiveElectrodeState, .-CapSense_SetInactiveElectrodeState
 2024              		.section	.text.CapSense_WriteBitsSafe,"ax",%progbits
 2025              		.align	2
 2026              		.global	CapSense_WriteBitsSafe
 2027              		.code	16
 2028              		.thumb_func
 2029              		.type	CapSense_WriteBitsSafe, %function
 2030              	CapSense_WriteBitsSafe:
 2031              	.LFB29:
3263:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
3264:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSX_EN)) */
3265:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3266:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3267:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
3268:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_WriteBitsSafe
3269:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
3270:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3271:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
3272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Writes a field in port-pin register, specified by the mask parameter
3273:Generated_Source\PSoC4/CapSense_Sensing.c **** *  with the specified value in critical section.
3274:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3275:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
3276:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Writes a field in port-pin register, specified by the mask parameter
3277:Generated_Source\PSoC4/CapSense_Sensing.c **** *  with the specified value in critical section.
3278:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3279:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param regPtr
3280:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies a pointer to port-pin register.
3281:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3282:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mask
3283:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies bits to be modified.
3284:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3285:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param value
3286:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies a value to be written to the register.
3287:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3288:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
3289:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_WriteBitsSafe(reg32 * regPtr, uint32 mask, uint32 value)
3290:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 2032              		.loc 1 3290 0
 2033              		.cfi_startproc
 2034              		@ args = 0, pretend = 0, frame = 0
 2035              		@ frame_needed = 0, uses_anonymous_args = 0
 2036              	.LVL250:
 2037 0000 70B5     		push	{r4, r5, r6, lr}
 2038              		.cfi_def_cfa_offset 16
 2039              		.cfi_offset 4, -16
 2040              		.cfi_offset 5, -12
 2041              		.cfi_offset 6, -8
 2042              		.cfi_offset 14, -4
 2043 0002 0500     		movs	r5, r0
 2044 0004 0E00     		movs	r6, r1
 2045 0006 1400     		movs	r4, r2
3291:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 interruptState = CyEnterCriticalSection();
 2046              		.loc 1 3291 0
 2047 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 2048              	.LVL251:
3292:Generated_Source\PSoC4/CapSense_Sensing.c ****     (* regPtr) = ((* regPtr) & ((uint32)~mask)) | (value & mask);
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 99


 2049              		.loc 1 3292 0
 2050 000c 2B68     		ldr	r3, [r5]
 2051 000e 5C40     		eors	r4, r3
 2052              	.LVL252:
 2053 0010 3440     		ands	r4, r6
 2054 0012 5C40     		eors	r4, r3
 2055 0014 2C60     		str	r4, [r5]
3293:Generated_Source\PSoC4/CapSense_Sensing.c ****     CyExitCriticalSection(interruptState);
 2056              		.loc 1 3293 0
 2057 0016 FFF7FEFF 		bl	CyExitCriticalSection
 2058              	.LVL253:
3294:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 2059              		.loc 1 3294 0
 2060              		@ sp needed
 2061              	.LVL254:
 2062              	.LVL255:
 2063 001a 70BD     		pop	{r4, r5, r6, pc}
 2064              		.cfi_endproc
 2065              	.LFE29:
 2066              		.size	CapSense_WriteBitsSafe, .-CapSense_WriteBitsSafe
 2067              		.section	.text.CapSense_SsCSDDisableMode,"ax",%progbits
 2068              		.align	2
 2069              		.code	16
 2070              		.thumb_func
 2071              		.type	CapSense_SsCSDDisableMode, %function
 2072              	CapSense_SsCSDDisableMode:
 2073              	.LFB9:
 954:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSDV2) && \
 2074              		.loc 1 954 0
 2075              		.cfi_startproc
 2076              		@ args = 0, pretend = 0, frame = 0
 2077              		@ frame_needed = 0, uses_anonymous_args = 0
 2078 0000 10B5     		push	{r4, lr}
 2079              		.cfi_def_cfa_offset 8
 2080              		.cfi_offset 4, -8
 2081              		.cfi_offset 14, -4
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 2082              		.loc 1 961 0
 2083 0002 074A     		ldr	r2, .L152
 2084 0004 1368     		ldr	r3, [r2]
 2085              	.LVL256:
 962:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 2086              		.loc 1 962 0
 2087 0006 0121     		movs	r1, #1
 2088 0008 8B43     		bics	r3, r1
 2089              	.LVL257:
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 2090              		.loc 1 963 0
 2091 000a 1360     		str	r3, [r2]
 968:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 2092              		.loc 1 968 0
 2093 000c 0022     		movs	r2, #0
 2094 000e F021     		movs	r1, #240
 2095 0010 0902     		lsls	r1, r1, #8
 2096 0012 0448     		ldr	r0, .L152+4
 2097 0014 FFF7FEFF 		bl	CapSense_WriteBitsSafe
 2098              	.LVL258:
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 100


 971:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 2099              		.loc 1 971 0
 2100 0018 FFF7FEFF 		bl	CapSense_SsCSDElectrodeCheck
 2101              	.LVL259:
 983:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 2102              		.loc 1 983 0
 2103              		@ sp needed
 2104 001c 10BD     		pop	{r4, pc}
 2105              	.L153:
 2106 001e C046     		.align	2
 2107              	.L152:
 2108 0020 A8020B40 		.word	1074463400
 2109 0024 00040240 		.word	1073873920
 2110              		.cfi_endproc
 2111              	.LFE9:
 2112              		.size	CapSense_SsCSDDisableMode, .-CapSense_SsCSDDisableMode
 2113              		.section	.text.CapSense_SsSwitchSensingMode,"ax",%progbits
 2114              		.align	2
 2115              		.global	CapSense_SsSwitchSensingMode
 2116              		.code	16
 2117              		.thumb_func
 2118              		.type	CapSense_SsSwitchSensingMode, %function
 2119              	CapSense_SsSwitchSensingMode:
 2120              	.LFB10:
1068:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 2121              		.loc 1 1068 0
 2122              		.cfi_startproc
 2123              		@ args = 0, pretend = 0, frame = 0
 2124              		@ frame_needed = 0, uses_anonymous_args = 0
 2125              	.LVL260:
 2126 0000 10B5     		push	{r4, lr}
 2127              		.cfi_def_cfa_offset 8
 2128              		.cfi_offset 4, -8
 2129              		.cfi_offset 14, -4
 2130 0002 0400     		movs	r4, r0
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 2131              		.loc 1 1069 0
 2132 0004 0C4B     		ldr	r3, .L158
 2133 0006 1B78     		ldrb	r3, [r3]
 2134 0008 8342     		cmp	r3, r0
 2135 000a 14D0     		beq	.L154
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 2136              		.loc 1 1072 0
 2137 000c 012B     		cmp	r3, #1
 2138 000e 01D1     		bne	.L156
1075:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 2139              		.loc 1 1075 0
 2140 0010 FFF7FEFF 		bl	CapSense_SsCSDDisableMode
 2141              	.LVL261:
 2142              	.L156:
1105:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 2143              		.loc 1 1105 0
 2144 0014 012C     		cmp	r4, #1
 2145 0016 05D1     		bne	.L157
1109:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 2146              		.loc 1 1109 0
 2147 0018 FFF7FEFF 		bl	CapSense_SsCSDInitialize
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 101


 2148              	.LVL262:
1110:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 2149              		.loc 1 1110 0
 2150 001c 0122     		movs	r2, #1
 2151 001e 064B     		ldr	r3, .L158
 2152 0020 1A70     		strb	r2, [r3]
 2153 0022 08E0     		b	.L154
 2154              	.L157:
1113:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 2155              		.loc 1 1113 0
 2156 0024 022C     		cmp	r4, #2
 2157 0026 06D0     		beq	.L154
1121:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 2158              		.loc 1 1121 0
 2159 0028 042C     		cmp	r4, #4
 2160 002a 04D0     		beq	.L154
1129:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 2161              		.loc 1 1129 0
 2162 002c 032C     		cmp	r4, #3
 2163 002e 02D0     		beq	.L154
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 2164              		.loc 1 1138 0
 2165 0030 0022     		movs	r2, #0
 2166 0032 014B     		ldr	r3, .L158
 2167 0034 1A70     		strb	r2, [r3]
 2168              	.L154:
1141:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 2169              		.loc 1 1141 0
 2170              		@ sp needed
 2171 0036 10BD     		pop	{r4, pc}
 2172              	.L159:
 2173              		.align	2
 2174              	.L158:
 2175 0038 00000000 		.word	.LANCHOR0
 2176              		.cfi_endproc
 2177              	.LFE10:
 2178              		.size	CapSense_SsSwitchSensingMode, .-CapSense_SsSwitchSensingMode
 2179              		.section	.text.CapSense_SsInitialize,"ax",%progbits
 2180              		.align	2
 2181              		.global	CapSense_SsInitialize
 2182              		.code	16
 2183              		.thumb_func
 2184              		.type	CapSense_SsInitialize, %function
 2185              	CapSense_SsInitialize:
 2186              	.LFB7:
 708:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 2187              		.loc 1 708 0
 2188              		.cfi_startproc
 2189              		@ args = 0, pretend = 0, frame = 0
 2190              		@ frame_needed = 0, uses_anonymous_args = 0
 2191 0000 10B5     		push	{r4, lr}
 2192              		.cfi_def_cfa_offset 8
 2193              		.cfi_offset 4, -8
 2194              		.cfi_offset 14, -4
 2195              	.LVL263:
 747:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 2196              		.loc 1 747 0
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 102


 2197 0002 FFF7FEFF 		bl	CapSense_SsInitializeSourceSenseClk
 2198              	.LVL264:
 752:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_dsRam.scanCurrentISC = CapSense_SNS_CONNECTION_GROUND;
 2199              		.loc 1 752 0
 2200 0006 0020     		movs	r0, #0
 2201 0008 FFF7FEFF 		bl	CapSense_SsSetAllIOsState
 2202              	.LVL265:
 753:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 2203              		.loc 1 753 0
 2204 000c 0021     		movs	r1, #0
 2205 000e 8123     		movs	r3, #129
 2206 0010 044A     		ldr	r2, .L161
 2207 0012 D154     		strb	r1, [r2, r3]
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MANY_SENSE_MODES_EN)
 2208              		.loc 1 755 0
 2209 0014 0020     		movs	r0, #0
 2210 0016 FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 2211              	.LVL266:
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 2212              		.loc 1 758 0
 2213 001a 0120     		movs	r0, #1
 2214 001c FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 2215              	.LVL267:
 769:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 2216              		.loc 1 769 0
 2217 0020 0020     		movs	r0, #0
 2218              		@ sp needed
 2219 0022 10BD     		pop	{r4, pc}
 2220              	.L162:
 2221              		.align	2
 2222              	.L161:
 2223 0024 00000000 		.word	CapSense_dsRam
 2224              		.cfi_endproc
 2225              	.LFE7:
 2226              		.size	CapSense_SsInitialize, .-CapSense_SsInitialize
 2227              		.global	CapSense_idacGainTable
 2228              		.comm	CapSense_curSnsIOPtr,4,4
 2229              		.comm	CapSense_curRamSnsPtr,4,4
 2230              		.global	CapSense_requestScanAllWidget
 2231              		.global	CapSense_sensorIndex
 2232              		.global	CapSense_widgetIndex
 2233              		.global	CapSense_scanFreqIndex
 2234              		.global	CapSense_currentSenseMethod
 2235              		.section	.rodata
 2236              		.align	2
 2237              		.set	.LANCHOR1,. + 0
 2238              		.type	CapSense_idacGainTable, %object
 2239              		.size	CapSense_idacGainTable, 48
 2240              	CapSense_idacGainTable:
 2241 0000 00000001 		.word	16777216
 2242 0004 7C920000 		.word	37500
 2243 0008 00000003 		.word	50331648
 2244 000c F8240100 		.word	75000
 2245 0010 00004001 		.word	20971520
 2246 0014 E0930400 		.word	300000
 2247 0018 00004003 		.word	54525952
 2248 001c C0270900 		.word	600000
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 103


 2249 0020 00008001 		.word	25165824
 2250 0024 009F2400 		.word	2400000
 2251 0028 00008003 		.word	58720256
 2252 002c 003E4900 		.word	4800000
 2253              		.type	CapSense_scanFreqIndex, %object
 2254              		.size	CapSense_scanFreqIndex, 1
 2255              	CapSense_scanFreqIndex:
 2256 0030 00       		.space	1
 2257              		.bss
 2258              		.set	.LANCHOR0,. + 0
 2259              		.type	CapSense_currentSenseMethod, %object
 2260              		.size	CapSense_currentSenseMethod, 1
 2261              	CapSense_currentSenseMethod:
 2262 0000 00       		.space	1
 2263              		.type	CapSense_requestScanAllWidget, %object
 2264              		.size	CapSense_requestScanAllWidget, 1
 2265              	CapSense_requestScanAllWidget:
 2266 0001 00       		.space	1
 2267              		.type	CapSense_widgetIndex, %object
 2268              		.size	CapSense_widgetIndex, 1
 2269              	CapSense_widgetIndex:
 2270 0002 00       		.space	1
 2271              		.type	CapSense_sensorIndex, %object
 2272              		.size	CapSense_sensorIndex, 1
 2273              	CapSense_sensorIndex:
 2274 0003 00       		.space	1
 2275              		.text
 2276              	.Letext0:
 2277              		.file 2 "f:\\psoccreator\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.1\\arm-none-eabi\
 2278              		.file 3 "f:\\psoccreator\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.1\\arm-none-eabi\
 2279              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 2280              		.file 5 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 2281              		.file 6 "Generated_Source\\PSoC4\\CapSense_SmartSense_LL.h"
 2282              		.file 7 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 2283              		.file 8 "Generated_Source\\PSoC4\\CapSense_Sensing.h"
 2284              		.file 9 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.h"
 2285              		.file 10 "Generated_Source\\PSoC4/CyLib.h"
 2286              		.file 11 "Generated_Source\\PSoC4\\CapSense_ISR.h"
 2287              		.section	.debug_info,"",%progbits
 2288              	.Ldebug_info0:
 2289 0000 30150000 		.4byte	0x1530
 2290 0004 0400     		.2byte	0x4
 2291 0006 00000000 		.4byte	.Ldebug_abbrev0
 2292 000a 04       		.byte	0x4
 2293 000b 01       		.uleb128 0x1
 2294 000c 93020000 		.4byte	.LASF233
 2295 0010 0C       		.byte	0xc
 2296 0011 AD0A0000 		.4byte	.LASF234
 2297 0015 43020000 		.4byte	.LASF235
 2298 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2299 001d 00000000 		.4byte	0
 2300 0021 00000000 		.4byte	.Ldebug_line0
 2301 0025 02       		.uleb128 0x2
 2302 0026 01       		.byte	0x1
 2303 0027 06       		.byte	0x6
 2304 0028 2A0D0000 		.4byte	.LASF0
 2305 002c 02       		.uleb128 0x2
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 104


 2306 002d 01       		.byte	0x1
 2307 002e 08       		.byte	0x8
 2308 002f E20B0000 		.4byte	.LASF1
 2309 0033 02       		.uleb128 0x2
 2310 0034 02       		.byte	0x2
 2311 0035 05       		.byte	0x5
 2312 0036 7C090000 		.4byte	.LASF2
 2313 003a 02       		.uleb128 0x2
 2314 003b 02       		.byte	0x2
 2315 003c 07       		.byte	0x7
 2316 003d 520D0000 		.4byte	.LASF3
 2317 0041 02       		.uleb128 0x2
 2318 0042 04       		.byte	0x4
 2319 0043 05       		.byte	0x5
 2320 0044 B4090000 		.4byte	.LASF4
 2321 0048 03       		.uleb128 0x3
 2322 0049 FC0B0000 		.4byte	.LASF9
 2323 004d 02       		.byte	0x2
 2324 004e 41       		.byte	0x41
 2325 004f 53000000 		.4byte	0x53
 2326 0053 02       		.uleb128 0x2
 2327 0054 04       		.byte	0x4
 2328 0055 07       		.byte	0x7
 2329 0056 3F0B0000 		.4byte	.LASF5
 2330 005a 02       		.uleb128 0x2
 2331 005b 08       		.byte	0x8
 2332 005c 05       		.byte	0x5
 2333 005d CE060000 		.4byte	.LASF6
 2334 0061 02       		.uleb128 0x2
 2335 0062 08       		.byte	0x8
 2336 0063 07       		.byte	0x7
 2337 0064 68030000 		.4byte	.LASF7
 2338 0068 04       		.uleb128 0x4
 2339 0069 04       		.byte	0x4
 2340 006a 05       		.byte	0x5
 2341 006b 696E7400 		.ascii	"int\000"
 2342 006f 02       		.uleb128 0x2
 2343 0070 04       		.byte	0x4
 2344 0071 07       		.byte	0x7
 2345 0072 AD000000 		.4byte	.LASF8
 2346 0076 03       		.uleb128 0x3
 2347 0077 0C020000 		.4byte	.LASF10
 2348 007b 03       		.byte	0x3
 2349 007c 30       		.byte	0x30
 2350 007d 48000000 		.4byte	0x48
 2351 0081 05       		.uleb128 0x5
 2352 0082 DF0D0000 		.4byte	.LASF11
 2353 0086 04       		.byte	0x4
 2354 0087 FB01     		.2byte	0x1fb
 2355 0089 2C000000 		.4byte	0x2c
 2356 008d 05       		.uleb128 0x5
 2357 008e D2050000 		.4byte	.LASF12
 2358 0092 04       		.byte	0x4
 2359 0093 FC01     		.2byte	0x1fc
 2360 0095 3A000000 		.4byte	0x3a
 2361 0099 05       		.uleb128 0x5
 2362 009a FF070000 		.4byte	.LASF13
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 105


 2363 009e 04       		.byte	0x4
 2364 009f FD01     		.2byte	0x1fd
 2365 00a1 53000000 		.4byte	0x53
 2366 00a5 02       		.uleb128 0x2
 2367 00a6 04       		.byte	0x4
 2368 00a7 04       		.byte	0x4
 2369 00a8 87020000 		.4byte	.LASF14
 2370 00ac 02       		.uleb128 0x2
 2371 00ad 08       		.byte	0x8
 2372 00ae 04       		.byte	0x4
 2373 00af E50D0000 		.4byte	.LASF15
 2374 00b3 02       		.uleb128 0x2
 2375 00b4 01       		.byte	0x1
 2376 00b5 08       		.byte	0x8
 2377 00b6 33050000 		.4byte	.LASF16
 2378 00ba 05       		.uleb128 0x5
 2379 00bb D90B0000 		.4byte	.LASF17
 2380 00bf 04       		.byte	0x4
 2381 00c0 9D02     		.2byte	0x29d
 2382 00c2 53000000 		.4byte	0x53
 2383 00c6 06       		.uleb128 0x6
 2384 00c7 81000000 		.4byte	0x81
 2385 00cb 05       		.uleb128 0x5
 2386 00cc D4080000 		.4byte	.LASF18
 2387 00d0 04       		.byte	0x4
 2388 00d1 A702     		.2byte	0x2a7
 2389 00d3 D7000000 		.4byte	0xd7
 2390 00d7 06       		.uleb128 0x6
 2391 00d8 99000000 		.4byte	0x99
 2392 00dc 05       		.uleb128 0x5
 2393 00dd BC070000 		.4byte	.LASF19
 2394 00e1 04       		.byte	0x4
 2395 00e2 B702     		.2byte	0x2b7
 2396 00e4 E8000000 		.4byte	0xe8
 2397 00e8 07       		.uleb128 0x7
 2398 00e9 04       		.byte	0x4
 2399 00ea EE000000 		.4byte	0xee
 2400 00ee 08       		.uleb128 0x8
 2401 00ef 05       		.uleb128 0x5
 2402 00f0 540C0000 		.4byte	.LASF20
 2403 00f4 05       		.byte	0x5
 2404 00f5 2601     		.2byte	0x126
 2405 00f7 8D000000 		.4byte	0x8d
 2406 00fb 05       		.uleb128 0x5
 2407 00fc 48060000 		.4byte	.LASF21
 2408 0100 05       		.byte	0x5
 2409 0101 2A01     		.2byte	0x12a
 2410 0103 81000000 		.4byte	0x81
 2411 0107 09       		.uleb128 0x9
 2412 0108 1C       		.byte	0x1c
 2413 0109 06       		.byte	0x6
 2414 010a 31       		.byte	0x31
 2415 010b 94010000 		.4byte	0x194
 2416 010f 0A       		.uleb128 0xa
 2417 0110 290C0000 		.4byte	.LASF22
 2418 0114 06       		.byte	0x6
 2419 0115 36       		.byte	0x36
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 106


 2420 0116 99000000 		.4byte	0x99
 2421 011a 00       		.byte	0
 2422 011b 0A       		.uleb128 0xa
 2423 011c 42010000 		.4byte	.LASF23
 2424 0120 06       		.byte	0x6
 2425 0121 3B       		.byte	0x3b
 2426 0122 99000000 		.4byte	0x99
 2427 0126 04       		.byte	0x4
 2428 0127 0A       		.uleb128 0xa
 2429 0128 7D080000 		.4byte	.LASF24
 2430 012c 06       		.byte	0x6
 2431 012d 40       		.byte	0x40
 2432 012e 94010000 		.4byte	0x194
 2433 0132 08       		.byte	0x8
 2434 0133 0A       		.uleb128 0xa
 2435 0134 87040000 		.4byte	.LASF25
 2436 0138 06       		.byte	0x6
 2437 0139 45       		.byte	0x45
 2438 013a 94010000 		.4byte	0x194
 2439 013e 0C       		.byte	0xc
 2440 013f 0A       		.uleb128 0xa
 2441 0140 C4080000 		.4byte	.LASF26
 2442 0144 06       		.byte	0x6
 2443 0145 4A       		.byte	0x4a
 2444 0146 8D000000 		.4byte	0x8d
 2445 014a 10       		.byte	0x10
 2446 014b 0A       		.uleb128 0xa
 2447 014c 580B0000 		.4byte	.LASF27
 2448 0150 06       		.byte	0x6
 2449 0151 4F       		.byte	0x4f
 2450 0152 8D000000 		.4byte	0x8d
 2451 0156 12       		.byte	0x12
 2452 0157 0A       		.uleb128 0xa
 2453 0158 6A0A0000 		.4byte	.LASF28
 2454 015c 06       		.byte	0x6
 2455 015d 54       		.byte	0x54
 2456 015e 8D000000 		.4byte	0x8d
 2457 0162 14       		.byte	0x14
 2458 0163 0A       		.uleb128 0xa
 2459 0164 66010000 		.4byte	.LASF29
 2460 0168 06       		.byte	0x6
 2461 0169 59       		.byte	0x59
 2462 016a 8D000000 		.4byte	0x8d
 2463 016e 16       		.byte	0x16
 2464 016f 0A       		.uleb128 0xa
 2465 0170 5F040000 		.4byte	.LASF30
 2466 0174 06       		.byte	0x6
 2467 0175 5E       		.byte	0x5e
 2468 0176 8D000000 		.4byte	0x8d
 2469 017a 18       		.byte	0x18
 2470 017b 0A       		.uleb128 0xa
 2471 017c 4E050000 		.4byte	.LASF31
 2472 0180 06       		.byte	0x6
 2473 0181 63       		.byte	0x63
 2474 0182 81000000 		.4byte	0x81
 2475 0186 1A       		.byte	0x1a
 2476 0187 0A       		.uleb128 0xa
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 107


 2477 0188 ED080000 		.4byte	.LASF32
 2478 018c 06       		.byte	0x6
 2479 018d 68       		.byte	0x68
 2480 018e 81000000 		.4byte	0x81
 2481 0192 1B       		.byte	0x1b
 2482 0193 00       		.byte	0
 2483 0194 07       		.uleb128 0x7
 2484 0195 04       		.byte	0x4
 2485 0196 8D000000 		.4byte	0x8d
 2486 019a 03       		.uleb128 0x3
 2487 019b 650D0000 		.4byte	.LASF33
 2488 019f 06       		.byte	0x6
 2489 01a0 6A       		.byte	0x6a
 2490 01a1 07010000 		.4byte	0x107
 2491 01a5 09       		.uleb128 0x9
 2492 01a6 0C       		.byte	0xc
 2493 01a7 06       		.byte	0x6
 2494 01a8 75       		.byte	0x75
 2495 01a9 02020000 		.4byte	0x202
 2496 01ad 0A       		.uleb128 0xa
 2497 01ae FA0D0000 		.4byte	.LASF34
 2498 01b2 06       		.byte	0x6
 2499 01b3 7A       		.byte	0x7a
 2500 01b4 8D000000 		.4byte	0x8d
 2501 01b8 00       		.byte	0
 2502 01b9 0A       		.uleb128 0xa
 2503 01ba 010E0000 		.4byte	.LASF35
 2504 01be 06       		.byte	0x6
 2505 01bf 7E       		.byte	0x7e
 2506 01c0 8D000000 		.4byte	0x8d
 2507 01c4 02       		.byte	0x2
 2508 01c5 0A       		.uleb128 0xa
 2509 01c6 080E0000 		.4byte	.LASF36
 2510 01ca 06       		.byte	0x6
 2511 01cb 82       		.byte	0x82
 2512 01cc 8D000000 		.4byte	0x8d
 2513 01d0 04       		.byte	0x4
 2514 01d1 0A       		.uleb128 0xa
 2515 01d2 0F0E0000 		.4byte	.LASF37
 2516 01d6 06       		.byte	0x6
 2517 01d7 86       		.byte	0x86
 2518 01d8 8D000000 		.4byte	0x8d
 2519 01dc 06       		.byte	0x6
 2520 01dd 0A       		.uleb128 0xa
 2521 01de 160E0000 		.4byte	.LASF38
 2522 01e2 06       		.byte	0x6
 2523 01e3 8A       		.byte	0x8a
 2524 01e4 8D000000 		.4byte	0x8d
 2525 01e8 08       		.byte	0x8
 2526 01e9 0A       		.uleb128 0xa
 2527 01ea 1D0E0000 		.4byte	.LASF39
 2528 01ee 06       		.byte	0x6
 2529 01ef 8E       		.byte	0x8e
 2530 01f0 81000000 		.4byte	0x81
 2531 01f4 0A       		.byte	0xa
 2532 01f5 0A       		.uleb128 0xa
 2533 01f6 240E0000 		.4byte	.LASF40
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 108


 2534 01fa 06       		.byte	0x6
 2535 01fb 92       		.byte	0x92
 2536 01fc 81000000 		.4byte	0x81
 2537 0200 0B       		.byte	0xb
 2538 0201 00       		.byte	0
 2539 0202 03       		.uleb128 0x3
 2540 0203 F7040000 		.4byte	.LASF41
 2541 0207 06       		.byte	0x6
 2542 0208 93       		.byte	0x93
 2543 0209 A5010000 		.4byte	0x1a5
 2544 020d 0B       		.uleb128 0xb
 2545 020e 01       		.byte	0x1
 2546 020f 2C000000 		.4byte	0x2c
 2547 0213 07       		.byte	0x7
 2548 0214 70       		.byte	0x70
 2549 0215 38020000 		.4byte	0x238
 2550 0219 0C       		.uleb128 0xc
 2551 021a 98000000 		.4byte	.LASF42
 2552 021e 00       		.byte	0
 2553 021f 0C       		.uleb128 0xc
 2554 0220 EE0A0000 		.4byte	.LASF43
 2555 0224 01       		.byte	0x1
 2556 0225 0C       		.uleb128 0xc
 2557 0226 D6090000 		.4byte	.LASF44
 2558 022a 02       		.byte	0x2
 2559 022b 0C       		.uleb128 0xc
 2560 022c 8A0C0000 		.4byte	.LASF45
 2561 0230 03       		.byte	0x3
 2562 0231 0C       		.uleb128 0xc
 2563 0232 9C080000 		.4byte	.LASF46
 2564 0236 04       		.byte	0x4
 2565 0237 00       		.byte	0
 2566 0238 03       		.uleb128 0x3
 2567 0239 81060000 		.4byte	.LASF47
 2568 023d 07       		.byte	0x7
 2569 023e 76       		.byte	0x76
 2570 023f 0D020000 		.4byte	0x20d
 2571 0243 09       		.uleb128 0x9
 2572 0244 14       		.byte	0x14
 2573 0245 07       		.byte	0x7
 2574 0246 AD       		.byte	0xad
 2575 0247 E8020000 		.4byte	0x2e8
 2576 024b 0A       		.uleb128 0xa
 2577 024c 09060000 		.4byte	.LASF48
 2578 0250 07       		.byte	0x7
 2579 0251 B2       		.byte	0xb2
 2580 0252 8D000000 		.4byte	0x8d
 2581 0256 00       		.byte	0
 2582 0257 0A       		.uleb128 0xa
 2583 0258 8A0B0000 		.4byte	.LASF49
 2584 025c 07       		.byte	0x7
 2585 025d B7       		.byte	0xb7
 2586 025e EF000000 		.4byte	0xef
 2587 0262 02       		.byte	0x2
 2588 0263 0A       		.uleb128 0xa
 2589 0264 2B050000 		.4byte	.LASF50
 2590 0268 07       		.byte	0x7
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 109


 2591 0269 BC       		.byte	0xbc
 2592 026a 81000000 		.4byte	0x81
 2593 026e 04       		.byte	0x4
 2594 026f 0A       		.uleb128 0xa
 2595 0270 A8070000 		.4byte	.LASF51
 2596 0274 07       		.byte	0x7
 2597 0275 C1       		.byte	0xc1
 2598 0276 81000000 		.4byte	0x81
 2599 027a 05       		.byte	0x5
 2600 027b 0A       		.uleb128 0xa
 2601 027c 8E040000 		.4byte	.LASF52
 2602 0280 07       		.byte	0x7
 2603 0281 C7       		.byte	0xc7
 2604 0282 81000000 		.4byte	0x81
 2605 0286 06       		.byte	0x6
 2606 0287 0A       		.uleb128 0xa
 2607 0288 FD060000 		.4byte	.LASF53
 2608 028c 07       		.byte	0x7
 2609 028d CD       		.byte	0xcd
 2610 028e 81000000 		.4byte	0x81
 2611 0292 07       		.byte	0x7
 2612 0293 0A       		.uleb128 0xa
 2613 0294 C8040000 		.4byte	.LASF54
 2614 0298 07       		.byte	0x7
 2615 0299 D4       		.byte	0xd4
 2616 029a FB000000 		.4byte	0xfb
 2617 029e 08       		.byte	0x8
 2618 029f 0A       		.uleb128 0xa
 2619 02a0 5D0B0000 		.4byte	.LASF55
 2620 02a4 07       		.byte	0x7
 2621 02a5 DB       		.byte	0xdb
 2622 02a6 E8020000 		.4byte	0x2e8
 2623 02aa 09       		.byte	0x9
 2624 02ab 0A       		.uleb128 0xa
 2625 02ac 35020000 		.4byte	.LASF56
 2626 02b0 07       		.byte	0x7
 2627 02b1 E0       		.byte	0xe0
 2628 02b2 81000000 		.4byte	0x81
 2629 02b6 0A       		.byte	0xa
 2630 02b7 0A       		.uleb128 0xa
 2631 02b8 D90C0000 		.4byte	.LASF57
 2632 02bc 07       		.byte	0x7
 2633 02bd E8       		.byte	0xe8
 2634 02be 8D000000 		.4byte	0x8d
 2635 02c2 0C       		.byte	0xc
 2636 02c3 0A       		.uleb128 0xa
 2637 02c4 39090000 		.4byte	.LASF58
 2638 02c8 07       		.byte	0x7
 2639 02c9 ED       		.byte	0xed
 2640 02ca 81000000 		.4byte	0x81
 2641 02ce 0E       		.byte	0xe
 2642 02cf 0A       		.uleb128 0xa
 2643 02d0 6A0A0000 		.4byte	.LASF28
 2644 02d4 07       		.byte	0x7
 2645 02d5 F3       		.byte	0xf3
 2646 02d6 8D000000 		.4byte	0x8d
 2647 02da 10       		.byte	0x10
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 110


 2648 02db 0A       		.uleb128 0xa
 2649 02dc 87040000 		.4byte	.LASF25
 2650 02e0 07       		.byte	0x7
 2651 02e1 F8       		.byte	0xf8
 2652 02e2 8D000000 		.4byte	0x8d
 2653 02e6 12       		.byte	0x12
 2654 02e7 00       		.byte	0
 2655 02e8 0D       		.uleb128 0xd
 2656 02e9 81000000 		.4byte	0x81
 2657 02ed F8020000 		.4byte	0x2f8
 2658 02f1 0E       		.uleb128 0xe
 2659 02f2 F8020000 		.4byte	0x2f8
 2660 02f6 00       		.byte	0
 2661 02f7 00       		.byte	0
 2662 02f8 02       		.uleb128 0x2
 2663 02f9 04       		.byte	0x4
 2664 02fa 07       		.byte	0x7
 2665 02fb 2E0B0000 		.4byte	.LASF59
 2666 02ff 03       		.uleb128 0x3
 2667 0300 DA070000 		.4byte	.LASF60
 2668 0304 07       		.byte	0x7
 2669 0305 F9       		.byte	0xf9
 2670 0306 43020000 		.4byte	0x243
 2671 030a 09       		.uleb128 0x9
 2672 030b 14       		.byte	0x14
 2673 030c 07       		.byte	0x7
 2674 030d FE       		.byte	0xfe
 2675 030e BC030000 		.4byte	0x3bc
 2676 0312 0F       		.uleb128 0xf
 2677 0313 09060000 		.4byte	.LASF48
 2678 0317 07       		.byte	0x7
 2679 0318 0301     		.2byte	0x103
 2680 031a 8D000000 		.4byte	0x8d
 2681 031e 00       		.byte	0
 2682 031f 0F       		.uleb128 0xf
 2683 0320 8A0B0000 		.4byte	.LASF49
 2684 0324 07       		.byte	0x7
 2685 0325 0801     		.2byte	0x108
 2686 0327 EF000000 		.4byte	0xef
 2687 032b 02       		.byte	0x2
 2688 032c 0F       		.uleb128 0xf
 2689 032d 2B050000 		.4byte	.LASF50
 2690 0331 07       		.byte	0x7
 2691 0332 0D01     		.2byte	0x10d
 2692 0334 81000000 		.4byte	0x81
 2693 0338 04       		.byte	0x4
 2694 0339 0F       		.uleb128 0xf
 2695 033a A8070000 		.4byte	.LASF51
 2696 033e 07       		.byte	0x7
 2697 033f 1201     		.2byte	0x112
 2698 0341 81000000 		.4byte	0x81
 2699 0345 05       		.byte	0x5
 2700 0346 0F       		.uleb128 0xf
 2701 0347 8E040000 		.4byte	.LASF52
 2702 034b 07       		.byte	0x7
 2703 034c 1801     		.2byte	0x118
 2704 034e 81000000 		.4byte	0x81
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 111


 2705 0352 06       		.byte	0x6
 2706 0353 0F       		.uleb128 0xf
 2707 0354 FD060000 		.4byte	.LASF53
 2708 0358 07       		.byte	0x7
 2709 0359 1E01     		.2byte	0x11e
 2710 035b 81000000 		.4byte	0x81
 2711 035f 07       		.byte	0x7
 2712 0360 0F       		.uleb128 0xf
 2713 0361 C8040000 		.4byte	.LASF54
 2714 0365 07       		.byte	0x7
 2715 0366 2501     		.2byte	0x125
 2716 0368 FB000000 		.4byte	0xfb
 2717 036c 08       		.byte	0x8
 2718 036d 0F       		.uleb128 0xf
 2719 036e 5D0B0000 		.4byte	.LASF55
 2720 0372 07       		.byte	0x7
 2721 0373 2C01     		.2byte	0x12c
 2722 0375 E8020000 		.4byte	0x2e8
 2723 0379 09       		.byte	0x9
 2724 037a 0F       		.uleb128 0xf
 2725 037b 35020000 		.4byte	.LASF56
 2726 037f 07       		.byte	0x7
 2727 0380 3101     		.2byte	0x131
 2728 0382 81000000 		.4byte	0x81
 2729 0386 0A       		.byte	0xa
 2730 0387 0F       		.uleb128 0xf
 2731 0388 D90C0000 		.4byte	.LASF57
 2732 038c 07       		.byte	0x7
 2733 038d 3901     		.2byte	0x139
 2734 038f 8D000000 		.4byte	0x8d
 2735 0393 0C       		.byte	0xc
 2736 0394 0F       		.uleb128 0xf
 2737 0395 39090000 		.4byte	.LASF58
 2738 0399 07       		.byte	0x7
 2739 039a 3E01     		.2byte	0x13e
 2740 039c 81000000 		.4byte	0x81
 2741 03a0 0E       		.byte	0xe
 2742 03a1 0F       		.uleb128 0xf
 2743 03a2 6A0A0000 		.4byte	.LASF28
 2744 03a6 07       		.byte	0x7
 2745 03a7 4401     		.2byte	0x144
 2746 03a9 8D000000 		.4byte	0x8d
 2747 03ad 10       		.byte	0x10
 2748 03ae 0F       		.uleb128 0xf
 2749 03af 87040000 		.4byte	.LASF25
 2750 03b3 07       		.byte	0x7
 2751 03b4 4901     		.2byte	0x149
 2752 03b6 8D000000 		.4byte	0x8d
 2753 03ba 12       		.byte	0x12
 2754 03bb 00       		.byte	0
 2755 03bc 05       		.uleb128 0x5
 2756 03bd BB0B0000 		.4byte	.LASF61
 2757 03c1 07       		.byte	0x7
 2758 03c2 4A01     		.2byte	0x14a
 2759 03c4 0A030000 		.4byte	0x30a
 2760 03c8 10       		.uleb128 0x10
 2761 03c9 3C       		.byte	0x3c
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 112


 2762 03ca 07       		.byte	0x7
 2763 03cb 5001     		.2byte	0x150
 2764 03cd F9030000 		.4byte	0x3f9
 2765 03d1 0F       		.uleb128 0xf
 2766 03d2 0D0A0000 		.4byte	.LASF62
 2767 03d6 07       		.byte	0x7
 2768 03d7 5501     		.2byte	0x155
 2769 03d9 BC030000 		.4byte	0x3bc
 2770 03dd 00       		.byte	0
 2771 03de 0F       		.uleb128 0xf
 2772 03df 150A0000 		.4byte	.LASF63
 2773 03e3 07       		.byte	0x7
 2774 03e4 5A01     		.2byte	0x15a
 2775 03e6 BC030000 		.4byte	0x3bc
 2776 03ea 14       		.byte	0x14
 2777 03eb 0F       		.uleb128 0xf
 2778 03ec 1D0A0000 		.4byte	.LASF64
 2779 03f0 07       		.byte	0x7
 2780 03f1 5F01     		.2byte	0x15f
 2781 03f3 BC030000 		.4byte	0x3bc
 2782 03f7 28       		.byte	0x28
 2783 03f8 00       		.byte	0
 2784 03f9 05       		.uleb128 0x5
 2785 03fa DF010000 		.4byte	.LASF65
 2786 03fe 07       		.byte	0x7
 2787 03ff 6001     		.2byte	0x160
 2788 0401 C8030000 		.4byte	0x3c8
 2789 0405 10       		.uleb128 0x10
 2790 0406 0A       		.byte	0xa
 2791 0407 07       		.byte	0x7
 2792 0408 6601     		.2byte	0x166
 2793 040a 5D040000 		.4byte	0x45d
 2794 040e 11       		.uleb128 0x11
 2795 040f 72617700 		.ascii	"raw\000"
 2796 0413 07       		.byte	0x7
 2797 0414 6B01     		.2byte	0x16b
 2798 0416 5D040000 		.4byte	0x45d
 2799 041a 00       		.byte	0
 2800 041b 0F       		.uleb128 0xf
 2801 041c 4D0D0000 		.4byte	.LASF66
 2802 0420 07       		.byte	0x7
 2803 0421 7001     		.2byte	0x170
 2804 0423 5D040000 		.4byte	0x45d
 2805 0427 02       		.byte	0x2
 2806 0428 0F       		.uleb128 0xf
 2807 0429 930B0000 		.4byte	.LASF67
 2808 042d 07       		.byte	0x7
 2809 042e 7601     		.2byte	0x176
 2810 0430 E8020000 		.4byte	0x2e8
 2811 0434 04       		.byte	0x4
 2812 0435 0F       		.uleb128 0xf
 2813 0436 C8090000 		.4byte	.LASF68
 2814 043a 07       		.byte	0x7
 2815 043b 7B01     		.2byte	0x17b
 2816 043d EF000000 		.4byte	0xef
 2817 0441 06       		.byte	0x6
 2818 0442 0F       		.uleb128 0xf
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 113


 2819 0443 EC0D0000 		.4byte	.LASF69
 2820 0447 07       		.byte	0x7
 2821 0448 8001     		.2byte	0x180
 2822 044a 6D040000 		.4byte	0x46d
 2823 044e 08       		.byte	0x8
 2824 044f 0F       		.uleb128 0xf
 2825 0450 BF060000 		.4byte	.LASF70
 2826 0454 07       		.byte	0x7
 2827 0455 8501     		.2byte	0x185
 2828 0457 E8020000 		.4byte	0x2e8
 2829 045b 09       		.byte	0x9
 2830 045c 00       		.byte	0
 2831 045d 0D       		.uleb128 0xd
 2832 045e 8D000000 		.4byte	0x8d
 2833 0462 6D040000 		.4byte	0x46d
 2834 0466 0E       		.uleb128 0xe
 2835 0467 F8020000 		.4byte	0x2f8
 2836 046b 00       		.byte	0
 2837 046c 00       		.byte	0
 2838 046d 0D       		.uleb128 0xd
 2839 046e FB000000 		.4byte	0xfb
 2840 0472 7D040000 		.4byte	0x47d
 2841 0476 0E       		.uleb128 0xe
 2842 0477 F8020000 		.4byte	0x2f8
 2843 047b 00       		.byte	0
 2844 047c 00       		.byte	0
 2845 047d 05       		.uleb128 0x5
 2846 047e 2D040000 		.4byte	.LASF71
 2847 0482 07       		.byte	0x7
 2848 0483 8601     		.2byte	0x186
 2849 0485 05040000 		.4byte	0x405
 2850 0489 10       		.uleb128 0x10
 2851 048a 1E       		.byte	0x1e
 2852 048b 07       		.byte	0x7
 2853 048c 8C01     		.2byte	0x18c
 2854 048e BA040000 		.4byte	0x4ba
 2855 0492 0F       		.uleb128 0xf
 2856 0493 0D0A0000 		.4byte	.LASF62
 2857 0497 07       		.byte	0x7
 2858 0498 9101     		.2byte	0x191
 2859 049a BA040000 		.4byte	0x4ba
 2860 049e 00       		.byte	0
 2861 049f 0F       		.uleb128 0xf
 2862 04a0 150A0000 		.4byte	.LASF63
 2863 04a4 07       		.byte	0x7
 2864 04a5 9601     		.2byte	0x196
 2865 04a7 BA040000 		.4byte	0x4ba
 2866 04ab 0A       		.byte	0xa
 2867 04ac 0F       		.uleb128 0xf
 2868 04ad 1D0A0000 		.4byte	.LASF64
 2869 04b1 07       		.byte	0x7
 2870 04b2 9B01     		.2byte	0x19b
 2871 04b4 BA040000 		.4byte	0x4ba
 2872 04b8 14       		.byte	0x14
 2873 04b9 00       		.byte	0
 2874 04ba 0D       		.uleb128 0xd
 2875 04bb 7D040000 		.4byte	0x47d
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 114


 2876 04bf CA040000 		.4byte	0x4ca
 2877 04c3 0E       		.uleb128 0xe
 2878 04c4 F8020000 		.4byte	0x2f8
 2879 04c8 00       		.byte	0
 2880 04c9 00       		.byte	0
 2881 04ca 05       		.uleb128 0x5
 2882 04cb DB0E0000 		.4byte	.LASF72
 2883 04cf 07       		.byte	0x7
 2884 04d0 9C01     		.2byte	0x19c
 2885 04d2 89040000 		.4byte	0x489
 2886 04d6 10       		.uleb128 0x10
 2887 04d7 84       		.byte	0x84
 2888 04d8 07       		.byte	0x7
 2889 04d9 A201     		.2byte	0x1a2
 2890 04db D7050000 		.4byte	0x5d7
 2891 04df 0F       		.uleb128 0xf
 2892 04e0 F6080000 		.4byte	.LASF73
 2893 04e4 07       		.byte	0x7
 2894 04e5 A901     		.2byte	0x1a9
 2895 04e7 8D000000 		.4byte	0x8d
 2896 04eb 00       		.byte	0
 2897 04ec 0F       		.uleb128 0xf
 2898 04ed 470E0000 		.4byte	.LASF74
 2899 04f1 07       		.byte	0x7
 2900 04f2 AE01     		.2byte	0x1ae
 2901 04f4 8D000000 		.4byte	0x8d
 2902 04f8 02       		.byte	0x2
 2903 04f9 0F       		.uleb128 0xf
 2904 04fa D2000000 		.4byte	.LASF75
 2905 04fe 07       		.byte	0x7
 2906 04ff B301     		.2byte	0x1b3
 2907 0501 8D000000 		.4byte	0x8d
 2908 0505 04       		.byte	0x4
 2909 0506 0F       		.uleb128 0xf
 2910 0507 CD090000 		.4byte	.LASF76
 2911 050b 07       		.byte	0x7
 2912 050c B901     		.2byte	0x1b9
 2913 050e 8D000000 		.4byte	0x8d
 2914 0512 06       		.byte	0x6
 2915 0513 0F       		.uleb128 0xf
 2916 0514 BA000000 		.4byte	.LASF77
 2917 0518 07       		.byte	0x7
 2918 0519 BE01     		.2byte	0x1be
 2919 051b 8D000000 		.4byte	0x8d
 2920 051f 08       		.byte	0x8
 2921 0520 0F       		.uleb128 0xf
 2922 0521 14060000 		.4byte	.LASF78
 2923 0525 07       		.byte	0x7
 2924 0526 C301     		.2byte	0x1c3
 2925 0528 D7000000 		.4byte	0xd7
 2926 052c 0C       		.byte	0xc
 2927 052d 0F       		.uleb128 0xf
 2928 052e BD090000 		.4byte	.LASF79
 2929 0532 07       		.byte	0x7
 2930 0533 C901     		.2byte	0x1c9
 2931 0535 D7050000 		.4byte	0x5d7
 2932 0539 10       		.byte	0x10
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 115


 2933 053a 0F       		.uleb128 0xf
 2934 053b 880A0000 		.4byte	.LASF80
 2935 053f 07       		.byte	0x7
 2936 0540 D001     		.2byte	0x1d0
 2937 0542 D7050000 		.4byte	0x5d7
 2938 0546 14       		.byte	0x14
 2939 0547 0F       		.uleb128 0xf
 2940 0548 20090000 		.4byte	.LASF81
 2941 054c 07       		.byte	0x7
 2942 054d E001     		.2byte	0x1e0
 2943 054f E7050000 		.4byte	0x5e7
 2944 0553 18       		.byte	0x18
 2945 0554 0F       		.uleb128 0xf
 2946 0555 B1070000 		.4byte	.LASF82
 2947 0559 07       		.byte	0x7
 2948 055a E601     		.2byte	0x1e6
 2949 055c 8D000000 		.4byte	0x8d
 2950 0560 1C       		.byte	0x1c
 2951 0561 0F       		.uleb128 0xf
 2952 0562 23040000 		.4byte	.LASF83
 2953 0566 07       		.byte	0x7
 2954 0567 EB01     		.2byte	0x1eb
 2955 0569 81000000 		.4byte	0x81
 2956 056d 1E       		.byte	0x1e
 2957 056e 0F       		.uleb128 0xf
 2958 056f 20070000 		.4byte	.LASF84
 2959 0573 07       		.byte	0x7
 2960 0574 F001     		.2byte	0x1f0
 2961 0576 F9030000 		.4byte	0x3f9
 2962 057a 20       		.byte	0x20
 2963 057b 0F       		.uleb128 0xf
 2964 057c 60030000 		.4byte	.LASF85
 2965 0580 07       		.byte	0x7
 2966 0581 F501     		.2byte	0x1f5
 2967 0583 CA040000 		.4byte	0x4ca
 2968 0587 5C       		.byte	0x5c
 2969 0588 0F       		.uleb128 0xf
 2970 0589 88000000 		.4byte	.LASF86
 2971 058d 07       		.byte	0x7
 2972 058e FA01     		.2byte	0x1fa
 2973 0590 81000000 		.4byte	0x81
 2974 0594 7A       		.byte	0x7a
 2975 0595 0F       		.uleb128 0xf
 2976 0596 AD030000 		.4byte	.LASF87
 2977 059a 07       		.byte	0x7
 2978 059b FF01     		.2byte	0x1ff
 2979 059d 81000000 		.4byte	0x81
 2980 05a1 7B       		.byte	0x7b
 2981 05a2 0F       		.uleb128 0xf
 2982 05a3 DA080000 		.4byte	.LASF88
 2983 05a7 07       		.byte	0x7
 2984 05a8 0402     		.2byte	0x204
 2985 05aa 8D000000 		.4byte	0x8d
 2986 05ae 7C       		.byte	0x7c
 2987 05af 0F       		.uleb128 0xf
 2988 05b0 98070000 		.4byte	.LASF89
 2989 05b4 07       		.byte	0x7
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 116


 2990 05b5 0902     		.2byte	0x209
 2991 05b7 5D040000 		.4byte	0x45d
 2992 05bb 7E       		.byte	0x7e
 2993 05bc 0F       		.uleb128 0xf
 2994 05bd DA000000 		.4byte	.LASF90
 2995 05c1 07       		.byte	0x7
 2996 05c2 0E02     		.2byte	0x20e
 2997 05c4 81000000 		.4byte	0x81
 2998 05c8 80       		.byte	0x80
 2999 05c9 0F       		.uleb128 0xf
 3000 05ca 390C0000 		.4byte	.LASF91
 3001 05ce 07       		.byte	0x7
 3002 05cf 1302     		.2byte	0x213
 3003 05d1 81000000 		.4byte	0x81
 3004 05d5 81       		.byte	0x81
 3005 05d6 00       		.byte	0
 3006 05d7 0D       		.uleb128 0xd
 3007 05d8 99000000 		.4byte	0x99
 3008 05dc E7050000 		.4byte	0x5e7
 3009 05e0 0E       		.uleb128 0xe
 3010 05e1 F8020000 		.4byte	0x2f8
 3011 05e5 00       		.byte	0
 3012 05e6 00       		.byte	0
 3013 05e7 0D       		.uleb128 0xd
 3014 05e8 81000000 		.4byte	0x81
 3015 05ec F7050000 		.4byte	0x5f7
 3016 05f0 0E       		.uleb128 0xe
 3017 05f1 F8020000 		.4byte	0x2f8
 3018 05f5 02       		.byte	0x2
 3019 05f6 00       		.byte	0
 3020 05f7 05       		.uleb128 0x5
 3021 05f8 86090000 		.4byte	.LASF92
 3022 05fc 07       		.byte	0x7
 3023 05fd 1402     		.2byte	0x214
 3024 05ff D6040000 		.4byte	0x4d6
 3025 0603 10       		.uleb128 0x10
 3026 0604 1C       		.byte	0x1c
 3027 0605 07       		.byte	0x7
 3028 0606 1A02     		.2byte	0x21a
 3029 0608 82060000 		.4byte	0x682
 3030 060c 0F       		.uleb128 0xf
 3031 060d F6070000 		.4byte	.LASF93
 3032 0611 07       		.byte	0x7
 3033 0612 1F02     		.2byte	0x21f
 3034 0614 82060000 		.4byte	0x682
 3035 0618 00       		.byte	0
 3036 0619 0F       		.uleb128 0xf
 3037 061a C8060000 		.4byte	.LASF94
 3038 061e 07       		.byte	0x7
 3039 061f 2402     		.2byte	0x224
 3040 0621 82060000 		.4byte	0x682
 3041 0625 04       		.byte	0x4
 3042 0626 0F       		.uleb128 0xf
 3043 0627 69040000 		.4byte	.LASF95
 3044 062b 07       		.byte	0x7
 3045 062c 2902     		.2byte	0x229
 3046 062e 82060000 		.4byte	0x682
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 117


 3047 0632 08       		.byte	0x8
 3048 0633 0F       		.uleb128 0xf
 3049 0634 F2090000 		.4byte	.LASF96
 3050 0638 07       		.byte	0x7
 3051 0639 2E02     		.2byte	0x22e
 3052 063b 82060000 		.4byte	0x682
 3053 063f 0C       		.byte	0xc
 3054 0640 0F       		.uleb128 0xf
 3055 0641 CF0C0000 		.4byte	.LASF97
 3056 0645 07       		.byte	0x7
 3057 0646 3302     		.2byte	0x233
 3058 0648 99000000 		.4byte	0x99
 3059 064c 10       		.byte	0x10
 3060 064d 0F       		.uleb128 0xf
 3061 064e 35080000 		.4byte	.LASF98
 3062 0652 07       		.byte	0x7
 3063 0653 3802     		.2byte	0x238
 3064 0655 99000000 		.4byte	0x99
 3065 0659 14       		.byte	0x14
 3066 065a 0F       		.uleb128 0xf
 3067 065b C7050000 		.4byte	.LASF99
 3068 065f 07       		.byte	0x7
 3069 0660 3D02     		.2byte	0x23d
 3070 0662 81000000 		.4byte	0x81
 3071 0666 18       		.byte	0x18
 3072 0667 0F       		.uleb128 0xf
 3073 0668 370B0000 		.4byte	.LASF100
 3074 066c 07       		.byte	0x7
 3075 066d 4202     		.2byte	0x242
 3076 066f 81000000 		.4byte	0x81
 3077 0673 19       		.byte	0x19
 3078 0674 0F       		.uleb128 0xf
 3079 0675 8D020000 		.4byte	.LASF101
 3080 0679 07       		.byte	0x7
 3081 067a 4702     		.2byte	0x247
 3082 067c 81000000 		.4byte	0x81
 3083 0680 1A       		.byte	0x1a
 3084 0681 00       		.byte	0
 3085 0682 07       		.uleb128 0x7
 3086 0683 04       		.byte	0x4
 3087 0684 CB000000 		.4byte	0xcb
 3088 0688 05       		.uleb128 0x5
 3089 0689 94030000 		.4byte	.LASF102
 3090 068d 07       		.byte	0x7
 3091 068e 4802     		.2byte	0x248
 3092 0690 03060000 		.4byte	0x603
 3093 0694 10       		.uleb128 0x10
 3094 0695 20       		.byte	0x20
 3095 0696 07       		.byte	0x7
 3096 0697 7B02     		.2byte	0x27b
 3097 0699 20070000 		.4byte	0x720
 3098 069d 0F       		.uleb128 0xf
 3099 069e B40D0000 		.4byte	.LASF103
 3100 06a2 07       		.byte	0x7
 3101 06a3 8402     		.2byte	0x284
 3102 06a5 20070000 		.4byte	0x720
 3103 06a9 00       		.byte	0
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 118


 3104 06aa 0F       		.uleb128 0xf
 3105 06ab 480C0000 		.4byte	.LASF104
 3106 06af 07       		.byte	0x7
 3107 06b0 8B02     		.2byte	0x28b
 3108 06b2 27070000 		.4byte	0x727
 3109 06b6 04       		.byte	0x4
 3110 06b7 0F       		.uleb128 0xf
 3111 06b8 FF080000 		.4byte	.LASF105
 3112 06bc 07       		.byte	0x7
 3113 06bd 9102     		.2byte	0x291
 3114 06bf 29070000 		.4byte	0x729
 3115 06c3 08       		.byte	0x8
 3116 06c4 0F       		.uleb128 0xf
 3117 06c5 06080000 		.4byte	.LASF106
 3118 06c9 07       		.byte	0x7
 3119 06ca 9702     		.2byte	0x297
 3120 06cc 27070000 		.4byte	0x727
 3121 06d0 0C       		.byte	0xc
 3122 06d1 0F       		.uleb128 0xf
 3123 06d2 7A0B0000 		.4byte	.LASF107
 3124 06d6 07       		.byte	0x7
 3125 06d7 9E02     		.2byte	0x29e
 3126 06d9 2F070000 		.4byte	0x72f
 3127 06dd 10       		.byte	0x10
 3128 06de 0F       		.uleb128 0xf
 3129 06df 1C0C0000 		.4byte	.LASF108
 3130 06e3 07       		.byte	0x7
 3131 06e4 A302     		.2byte	0x2a3
 3132 06e6 99000000 		.4byte	0x99
 3133 06ea 14       		.byte	0x14
 3134 06eb 0F       		.uleb128 0xf
 3135 06ec EB040000 		.4byte	.LASF109
 3136 06f0 07       		.byte	0x7
 3137 06f1 AA02     		.2byte	0x2aa
 3138 06f3 8D000000 		.4byte	0x8d
 3139 06f7 18       		.byte	0x18
 3140 06f8 0F       		.uleb128 0xf
 3141 06f9 CC030000 		.4byte	.LASF110
 3142 06fd 07       		.byte	0x7
 3143 06fe B102     		.2byte	0x2b1
 3144 0700 81000000 		.4byte	0x81
 3145 0704 1A       		.byte	0x1a
 3146 0705 0F       		.uleb128 0xf
 3147 0706 DC060000 		.4byte	.LASF111
 3148 070a 07       		.byte	0x7
 3149 070b BB02     		.2byte	0x2bb
 3150 070d 81000000 		.4byte	0x81
 3151 0711 1B       		.byte	0x1b
 3152 0712 0F       		.uleb128 0xf
 3153 0713 BD030000 		.4byte	.LASF112
 3154 0717 07       		.byte	0x7
 3155 0718 C302     		.2byte	0x2c3
 3156 071a 35070000 		.4byte	0x735
 3157 071e 1C       		.byte	0x1c
 3158 071f 00       		.byte	0
 3159 0720 07       		.uleb128 0x7
 3160 0721 04       		.byte	0x4
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 119


 3161 0722 26070000 		.4byte	0x726
 3162 0726 12       		.uleb128 0x12
 3163 0727 13       		.uleb128 0x13
 3164 0728 04       		.byte	0x4
 3165 0729 07       		.uleb128 0x7
 3166 072a 04       		.byte	0x4
 3167 072b 7D040000 		.4byte	0x47d
 3168 072f 07       		.uleb128 0x7
 3169 0730 04       		.byte	0x4
 3170 0731 81000000 		.4byte	0x81
 3171 0735 07       		.uleb128 0x7
 3172 0736 04       		.byte	0x4
 3173 0737 02020000 		.4byte	0x202
 3174 073b 05       		.uleb128 0x5
 3175 073c A7040000 		.4byte	.LASF113
 3176 0740 07       		.byte	0x7
 3177 0741 C402     		.2byte	0x2c4
 3178 0743 94060000 		.4byte	0x694
 3179 0747 10       		.uleb128 0x10
 3180 0748 60       		.byte	0x60
 3181 0749 07       		.byte	0x7
 3182 074a CA02     		.2byte	0x2ca
 3183 074c 5E070000 		.4byte	0x75e
 3184 0750 0F       		.uleb128 0xf
 3185 0751 F80E0000 		.4byte	.LASF114
 3186 0755 07       		.byte	0x7
 3187 0756 CF02     		.2byte	0x2cf
 3188 0758 5E070000 		.4byte	0x75e
 3189 075c 00       		.byte	0
 3190 075d 00       		.byte	0
 3191 075e 0D       		.uleb128 0xd
 3192 075f 3B070000 		.4byte	0x73b
 3193 0763 6E070000 		.4byte	0x76e
 3194 0767 0E       		.uleb128 0xe
 3195 0768 F8020000 		.4byte	0x2f8
 3196 076c 02       		.byte	0x2
 3197 076d 00       		.byte	0
 3198 076e 05       		.uleb128 0x5
 3199 076f 3D070000 		.4byte	.LASF115
 3200 0773 07       		.byte	0x7
 3201 0774 D002     		.2byte	0x2d0
 3202 0776 47070000 		.4byte	0x747
 3203 077a 02       		.uleb128 0x2
 3204 077b 08       		.byte	0x8
 3205 077c 04       		.byte	0x4
 3206 077d B8080000 		.4byte	.LASF116
 3207 0781 0B       		.uleb128 0xb
 3208 0782 01       		.byte	0x1
 3209 0783 2C000000 		.4byte	0x2c
 3210 0787 08       		.byte	0x8
 3211 0788 43       		.byte	0x43
 3212 0789 AC070000 		.4byte	0x7ac
 3213 078d 0C       		.uleb128 0xc
 3214 078e 29070000 		.4byte	.LASF117
 3215 0792 00       		.byte	0
 3216 0793 0C       		.uleb128 0xc
 3217 0794 34060000 		.4byte	.LASF118
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 120


 3218 0798 01       		.byte	0x1
 3219 0799 0C       		.uleb128 0xc
 3220 079a AB050000 		.4byte	.LASF119
 3221 079e 02       		.byte	0x2
 3222 079f 0C       		.uleb128 0xc
 3223 07a0 5D0E0000 		.4byte	.LASF120
 3224 07a4 03       		.byte	0x3
 3225 07a5 0C       		.uleb128 0xc
 3226 07a6 F9000000 		.4byte	.LASF121
 3227 07aa 04       		.byte	0x4
 3228 07ab 00       		.byte	0
 3229 07ac 03       		.uleb128 0x3
 3230 07ad 56080000 		.4byte	.LASF122
 3231 07b1 08       		.byte	0x8
 3232 07b2 49       		.byte	0x49
 3233 07b3 81070000 		.4byte	0x781
 3234 07b7 09       		.uleb128 0x9
 3235 07b8 08       		.byte	0x8
 3236 07b9 08       		.byte	0x8
 3237 07ba CF       		.byte	0xcf
 3238 07bb D8070000 		.4byte	0x7d8
 3239 07bf 0A       		.uleb128 0xa
 3240 07c0 410A0000 		.4byte	.LASF123
 3241 07c4 08       		.byte	0x8
 3242 07c5 D4       		.byte	0xd4
 3243 07c6 99000000 		.4byte	0x99
 3244 07ca 00       		.byte	0
 3245 07cb 0A       		.uleb128 0xa
 3246 07cc 16080000 		.4byte	.LASF124
 3247 07d0 08       		.byte	0x8
 3248 07d1 D9       		.byte	0xd9
 3249 07d2 99000000 		.4byte	0x99
 3250 07d6 04       		.byte	0x4
 3251 07d7 00       		.byte	0
 3252 07d8 03       		.uleb128 0x3
 3253 07d9 9B0B0000 		.4byte	.LASF125
 3254 07dd 08       		.byte	0x8
 3255 07de DA       		.byte	0xda
 3256 07df B7070000 		.4byte	0x7b7
 3257 07e3 14       		.uleb128 0x14
 3258 07e4 D3040000 		.4byte	.LASF128
 3259 07e8 01       		.byte	0x1
 3260 07e9 3B0A     		.2byte	0xa3b
 3261 07eb 81000000 		.4byte	0x81
 3262 07ef 00000000 		.4byte	.LFB23
 3263 07f3 84000000 		.4byte	.LFE23-.LFB23
 3264 07f7 01       		.uleb128 0x1
 3265 07f8 9C       		.byte	0x9c
 3266 07f9 2E080000 		.4byte	0x82e
 3267 07fd 15       		.uleb128 0x15
 3268 07fe 2B0E0000 		.4byte	.LASF126
 3269 0802 01       		.byte	0x1
 3270 0803 3B0A     		.2byte	0xa3b
 3271 0805 99000000 		.4byte	0x99
 3272 0809 00000000 		.4byte	.LLST0
 3273 080d 15       		.uleb128 0x15
 3274 080e D9050000 		.4byte	.LASF127
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 121


 3275 0812 01       		.byte	0x1
 3276 0813 3B0A     		.2byte	0xa3b
 3277 0815 99000000 		.4byte	0x99
 3278 0819 2C000000 		.4byte	.LLST1
 3279 081d 16       		.uleb128 0x16
 3280 081e D5030000 		.4byte	.LASF130
 3281 0822 01       		.byte	0x1
 3282 0823 3D0A     		.2byte	0xa3d
 3283 0825 81000000 		.4byte	0x81
 3284 0829 58000000 		.4byte	.LLST2
 3285 082d 00       		.byte	0
 3286 082e 14       		.uleb128 0x14
 3287 082f 6E020000 		.4byte	.LASF129
 3288 0833 01       		.byte	0x1
 3289 0834 870A     		.2byte	0xa87
 3290 0836 81000000 		.4byte	0x81
 3291 083a 00000000 		.4byte	.LFB24
 3292 083e 42000000 		.4byte	.LFE24-.LFB24
 3293 0842 01       		.uleb128 0x1
 3294 0843 9C       		.byte	0x9c
 3295 0844 99080000 		.4byte	0x899
 3296 0848 15       		.uleb128 0x15
 3297 0849 2B0E0000 		.4byte	.LASF126
 3298 084d 01       		.byte	0x1
 3299 084e 870A     		.2byte	0xa87
 3300 0850 99000000 		.4byte	0x99
 3301 0854 77000000 		.4byte	.LLST3
 3302 0858 15       		.uleb128 0x15
 3303 0859 D5030000 		.4byte	.LASF130
 3304 085d 01       		.byte	0x1
 3305 085e 870A     		.2byte	0xa87
 3306 0860 81000000 		.4byte	0x81
 3307 0864 BC000000 		.4byte	.LLST4
 3308 0868 16       		.uleb128 0x16
 3309 0869 23010000 		.4byte	.LASF131
 3310 086d 01       		.byte	0x1
 3311 086e 890A     		.2byte	0xa89
 3312 0870 99000000 		.4byte	0x99
 3313 0874 F6000000 		.4byte	.LLST5
 3314 0878 16       		.uleb128 0x16
 3315 0879 77010000 		.4byte	.LASF132
 3316 087d 01       		.byte	0x1
 3317 087e 8A0A     		.2byte	0xa8a
 3318 0880 99000000 		.4byte	0x99
 3319 0884 20010000 		.4byte	.LLST6
 3320 0888 16       		.uleb128 0x16
 3321 0889 C10D0000 		.4byte	.LASF133
 3322 088d 01       		.byte	0x1
 3323 088e 8B0A     		.2byte	0xa8b
 3324 0890 99000000 		.4byte	0x99
 3325 0894 49010000 		.4byte	.LLST7
 3326 0898 00       		.byte	0
 3327 0899 17       		.uleb128 0x17
 3328 089a 9E010000 		.4byte	.LASF236
 3329 089e 01       		.byte	0x1
 3330 089f EC       		.byte	0xec
 3331 08a0 99000000 		.4byte	0x99
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 122


 3332 08a4 00000000 		.4byte	.LFB1
 3333 08a8 10000000 		.4byte	.LFE1-.LFB1
 3334 08ac 01       		.uleb128 0x1
 3335 08ad 9C       		.byte	0x9c
 3336 08ae 18       		.uleb128 0x18
 3337 08af F8090000 		.4byte	.LASF136
 3338 08b3 01       		.byte	0x1
 3339 08b4 1A01     		.2byte	0x11a
 3340 08b6 BA000000 		.4byte	0xba
 3341 08ba 00000000 		.4byte	.LFB2
 3342 08be 40000000 		.4byte	.LFE2-.LFB2
 3343 08c2 01       		.uleb128 0x1
 3344 08c3 9C       		.byte	0x9c
 3345 08c4 F2080000 		.4byte	0x8f2
 3346 08c8 15       		.uleb128 0x15
 3347 08c9 790E0000 		.4byte	.LASF134
 3348 08cd 01       		.byte	0x1
 3349 08ce 1A01     		.2byte	0x11a
 3350 08d0 99000000 		.4byte	0x99
 3351 08d4 5C010000 		.4byte	.LLST8
 3352 08d8 16       		.uleb128 0x16
 3353 08d9 500E0000 		.4byte	.LASF135
 3354 08dd 01       		.byte	0x1
 3355 08de 1C01     		.2byte	0x11c
 3356 08e0 BA000000 		.4byte	0xba
 3357 08e4 7D010000 		.4byte	.LLST9
 3358 08e8 19       		.uleb128 0x19
 3359 08e9 38000000 		.4byte	.LVL27
 3360 08ed 7A140000 		.4byte	0x147a
 3361 08f1 00       		.byte	0
 3362 08f2 18       		.uleb128 0x18
 3363 08f3 53070000 		.4byte	.LASF137
 3364 08f7 01       		.byte	0x1
 3365 08f8 6D01     		.2byte	0x16d
 3366 08fa BA000000 		.4byte	0xba
 3367 08fe 00000000 		.4byte	.LFB3
 3368 0902 2C000000 		.4byte	.LFE3-.LFB3
 3369 0906 01       		.uleb128 0x1
 3370 0907 9C       		.byte	0x9c
 3371 0908 26090000 		.4byte	0x926
 3372 090c 16       		.uleb128 0x16
 3373 090d 36000000 		.4byte	.LASF138
 3374 0911 01       		.byte	0x1
 3375 0912 6F01     		.2byte	0x16f
 3376 0914 BA000000 		.4byte	0xba
 3377 0918 9B010000 		.4byte	.LLST10
 3378 091c 19       		.uleb128 0x19
 3379 091d 16000000 		.4byte	.LVL30
 3380 0921 86140000 		.4byte	0x1486
 3381 0925 00       		.byte	0
 3382 0926 18       		.uleb128 0x18
 3383 0927 B70C0000 		.4byte	.LASF139
 3384 092b 01       		.byte	0x1
 3385 092c AB01     		.2byte	0x1ab
 3386 092e BA000000 		.4byte	0xba
 3387 0932 00000000 		.4byte	.LFB4
 3388 0936 48000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 123


 3389 093a 01       		.uleb128 0x1
 3390 093b 9C       		.byte	0x9c
 3391 093c 7E090000 		.4byte	0x97e
 3392 0940 16       		.uleb128 0x16
 3393 0941 36000000 		.4byte	.LASF138
 3394 0945 01       		.byte	0x1
 3395 0946 AD01     		.2byte	0x1ad
 3396 0948 BA000000 		.4byte	0xba
 3397 094c BA010000 		.4byte	.LLST11
 3398 0950 16       		.uleb128 0x16
 3399 0951 89080000 		.4byte	.LASF140
 3400 0955 01       		.byte	0x1
 3401 0956 AF01     		.2byte	0x1af
 3402 0958 99000000 		.4byte	0x99
 3403 095c 08020000 		.4byte	.LLST12
 3404 0960 1A       		.uleb128 0x1a
 3405 0961 18000000 		.4byte	.LVL35
 3406 0965 AE080000 		.4byte	0x8ae
 3407 0969 74090000 		.4byte	0x974
 3408 096d 1B       		.uleb128 0x1b
 3409 096e 01       		.uleb128 0x1
 3410 096f 50       		.byte	0x50
 3411 0970 02       		.uleb128 0x2
 3412 0971 74       		.byte	0x74
 3413 0972 00       		.sleb128 0
 3414 0973 00       		.byte	0
 3415 0974 19       		.uleb128 0x19
 3416 0975 32000000 		.4byte	.LVL36
 3417 0979 F2080000 		.4byte	0x8f2
 3418 097d 00       		.byte	0
 3419 097e 18       		.uleb128 0x18
 3420 097f 5B000000 		.4byte	.LASF141
 3421 0983 01       		.byte	0x1
 3422 0984 1702     		.2byte	0x217
 3423 0986 BA000000 		.4byte	0xba
 3424 098a 00000000 		.4byte	.LFB5
 3425 098e 54000000 		.4byte	.LFE5-.LFB5
 3426 0992 01       		.uleb128 0x1
 3427 0993 9C       		.byte	0x9c
 3428 0994 D2090000 		.4byte	0x9d2
 3429 0998 15       		.uleb128 0x15
 3430 0999 790E0000 		.4byte	.LASF134
 3431 099d 01       		.byte	0x1
 3432 099e 1702     		.2byte	0x217
 3433 09a0 99000000 		.4byte	0x99
 3434 09a4 1B020000 		.4byte	.LLST13
 3435 09a8 15       		.uleb128 0x15
 3436 09a9 FB010000 		.4byte	.LASF142
 3437 09ad 01       		.byte	0x1
 3438 09ae 1702     		.2byte	0x217
 3439 09b0 99000000 		.4byte	0x99
 3440 09b4 3C020000 		.4byte	.LLST14
 3441 09b8 16       		.uleb128 0x16
 3442 09b9 500E0000 		.4byte	.LASF135
 3443 09bd 01       		.byte	0x1
 3444 09be 1902     		.2byte	0x219
 3445 09c0 BA000000 		.4byte	0xba
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 124


 3446 09c4 5D020000 		.4byte	.LLST15
 3447 09c8 19       		.uleb128 0x19
 3448 09c9 48000000 		.4byte	.LVL42
 3449 09cd 92140000 		.4byte	0x1492
 3450 09d1 00       		.byte	0
 3451 09d2 18       		.uleb128 0x18
 3452 09d3 C9070000 		.4byte	.LASF143
 3453 09d7 01       		.byte	0x1
 3454 09d8 8102     		.2byte	0x281
 3455 09da BA000000 		.4byte	0xba
 3456 09de 00000000 		.4byte	.LFB6
 3457 09e2 2C000000 		.4byte	.LFE6-.LFB6
 3458 09e6 01       		.uleb128 0x1
 3459 09e7 9C       		.byte	0x9c
 3460 09e8 060A0000 		.4byte	0xa06
 3461 09ec 16       		.uleb128 0x16
 3462 09ed 36000000 		.4byte	.LASF138
 3463 09f1 01       		.byte	0x1
 3464 09f2 8302     		.2byte	0x283
 3465 09f4 BA000000 		.4byte	0xba
 3466 09f8 7B020000 		.4byte	.LLST16
 3467 09fc 19       		.uleb128 0x19
 3468 09fd 16000000 		.4byte	.LVL45
 3469 0a01 9E140000 		.4byte	0x149e
 3470 0a05 00       		.byte	0
 3471 0a06 1C       		.uleb128 0x1c
 3472 0a07 070C0000 		.4byte	.LASF150
 3473 0a0b 01       		.byte	0x1
 3474 0a0c 4803     		.2byte	0x348
 3475 0a0e 00000000 		.4byte	.LFB8
 3476 0a12 9C000000 		.4byte	.LFE8-.LFB8
 3477 0a16 01       		.uleb128 0x1
 3478 0a17 9C       		.byte	0x9c
 3479 0a18 D00A0000 		.4byte	0xad0
 3480 0a1c 15       		.uleb128 0x15
 3481 0a1d 790E0000 		.4byte	.LASF134
 3482 0a21 01       		.byte	0x1
 3483 0a22 4803     		.2byte	0x348
 3484 0a24 99000000 		.4byte	0x99
 3485 0a28 9A020000 		.4byte	.LLST17
 3486 0a2c 15       		.uleb128 0x15
 3487 0a2d 22000000 		.4byte	.LASF144
 3488 0a31 01       		.byte	0x1
 3489 0a32 4803     		.2byte	0x348
 3490 0a34 99000000 		.4byte	0x99
 3491 0a38 BB020000 		.4byte	.LLST18
 3492 0a3c 15       		.uleb128 0x15
 3493 0a3d A70C0000 		.4byte	.LASF145
 3494 0a41 01       		.byte	0x1
 3495 0a42 4803     		.2byte	0x348
 3496 0a44 99000000 		.4byte	0x99
 3497 0a48 DC020000 		.4byte	.LLST19
 3498 0a4c 1D       		.uleb128 0x1d
 3499 0a4d C0040000 		.4byte	.LASF146
 3500 0a51 01       		.byte	0x1
 3501 0a52 4A03     		.2byte	0x34a
 3502 0a54 99000000 		.4byte	0x99
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 125


 3503 0a58 01       		.byte	0x1
 3504 0a59 16       		.uleb128 0x16
 3505 0a5a AD0C0000 		.4byte	.LASF147
 3506 0a5e 01       		.byte	0x1
 3507 0a5f 4B03     		.2byte	0x34b
 3508 0a61 99000000 		.4byte	0x99
 3509 0a65 08030000 		.4byte	.LLST20
 3510 0a69 16       		.uleb128 0x16
 3511 0a6a 14010000 		.4byte	.LASF148
 3512 0a6e 01       		.byte	0x1
 3513 0a6f 4C03     		.2byte	0x34c
 3514 0a71 81000000 		.4byte	0x81
 3515 0a75 27030000 		.4byte	.LLST21
 3516 0a79 16       		.uleb128 0x16
 3517 0a7a 330C0000 		.4byte	.LASF149
 3518 0a7e 01       		.byte	0x1
 3519 0a7f 4D03     		.2byte	0x34d
 3520 0a81 D00A0000 		.4byte	0xad0
 3521 0a85 50030000 		.4byte	.LLST22
 3522 0a89 19       		.uleb128 0x19
 3523 0a8a 1A000000 		.4byte	.LVL52
 3524 0a8e AA140000 		.4byte	0x14aa
 3525 0a92 19       		.uleb128 0x19
 3526 0a93 3A000000 		.4byte	.LVL53
 3527 0a97 B5140000 		.4byte	0x14b5
 3528 0a9b 19       		.uleb128 0x19
 3529 0a9c 4C000000 		.4byte	.LVL54
 3530 0aa0 AA140000 		.4byte	0x14aa
 3531 0aa4 19       		.uleb128 0x19
 3532 0aa5 6C000000 		.4byte	.LVL55
 3533 0aa9 B5140000 		.4byte	0x14b5
 3534 0aad 19       		.uleb128 0x19
 3535 0aae 72000000 		.4byte	.LVL56
 3536 0ab2 AA140000 		.4byte	0x14aa
 3537 0ab6 19       		.uleb128 0x19
 3538 0ab7 84000000 		.4byte	.LVL57
 3539 0abb B5140000 		.4byte	0x14b5
 3540 0abf 1E       		.uleb128 0x1e
 3541 0ac0 8C000000 		.4byte	.LVL58
 3542 0ac4 C0140000 		.4byte	0x14c0
 3543 0ac8 1B       		.uleb128 0x1b
 3544 0ac9 01       		.uleb128 0x1
 3545 0aca 50       		.byte	0x50
 3546 0acb 02       		.uleb128 0x2
 3547 0acc 74       		.byte	0x74
 3548 0acd 00       		.sleb128 0
 3549 0ace 00       		.byte	0
 3550 0acf 00       		.byte	0
 3551 0ad0 07       		.uleb128 0x7
 3552 0ad1 04       		.byte	0x4
 3553 0ad2 D60A0000 		.4byte	0xad6
 3554 0ad6 1F       		.uleb128 0x1f
 3555 0ad7 88060000 		.4byte	0x688
 3556 0adb 1C       		.uleb128 0x1c
 3557 0adc 9A090000 		.4byte	.LASF151
 3558 0ae0 01       		.byte	0x1
 3559 0ae1 8E04     		.2byte	0x48e
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 126


 3560 0ae3 00000000 		.4byte	.LFB11
 3561 0ae7 80000000 		.4byte	.LFE11-.LFB11
 3562 0aeb 01       		.uleb128 0x1
 3563 0aec 9C       		.byte	0x9c
 3564 0aed 840B0000 		.4byte	0xb84
 3565 0af1 15       		.uleb128 0x15
 3566 0af2 A70C0000 		.4byte	.LASF145
 3567 0af6 01       		.byte	0x1
 3568 0af7 8E04     		.2byte	0x48e
 3569 0af9 99000000 		.4byte	0x99
 3570 0afd 63030000 		.4byte	.LLST23
 3571 0b01 16       		.uleb128 0x16
 3572 0b02 14010000 		.4byte	.LASF148
 3573 0b06 01       		.byte	0x1
 3574 0b07 9004     		.2byte	0x490
 3575 0b09 81000000 		.4byte	0x81
 3576 0b0d 84030000 		.4byte	.LLST24
 3577 0b11 16       		.uleb128 0x16
 3578 0b12 64020000 		.4byte	.LASF152
 3579 0b16 01       		.byte	0x1
 3580 0b17 9204     		.2byte	0x492
 3581 0b19 99000000 		.4byte	0x99
 3582 0b1d 97030000 		.4byte	.LLST25
 3583 0b21 16       		.uleb128 0x16
 3584 0b22 7B040000 		.4byte	.LASF153
 3585 0b26 01       		.byte	0x1
 3586 0b27 9404     		.2byte	0x494
 3587 0b29 99000000 		.4byte	0x99
 3588 0b2d B6030000 		.4byte	.LLST26
 3589 0b31 16       		.uleb128 0x16
 3590 0b32 05040000 		.4byte	.LASF154
 3591 0b36 01       		.byte	0x1
 3592 0b37 9504     		.2byte	0x495
 3593 0b39 99000000 		.4byte	0x99
 3594 0b3d D5030000 		.4byte	.LLST27
 3595 0b41 16       		.uleb128 0x16
 3596 0b42 9B050000 		.4byte	.LASF155
 3597 0b46 01       		.byte	0x1
 3598 0b47 9704     		.2byte	0x497
 3599 0b49 99000000 		.4byte	0x99
 3600 0b4d F4030000 		.4byte	.LLST28
 3601 0b51 16       		.uleb128 0x16
 3602 0b52 78070000 		.4byte	.LASF156
 3603 0b56 01       		.byte	0x1
 3604 0b57 9804     		.2byte	0x498
 3605 0b59 99000000 		.4byte	0x99
 3606 0b5d 1E040000 		.4byte	.LLST29
 3607 0b61 16       		.uleb128 0x16
 3608 0b62 57030000 		.4byte	.LASF157
 3609 0b66 01       		.byte	0x1
 3610 0b67 9A04     		.2byte	0x49a
 3611 0b69 D00A0000 		.4byte	0xad0
 3612 0b6d 31040000 		.4byte	.LLST30
 3613 0b71 19       		.uleb128 0x19
 3614 0b72 34000000 		.4byte	.LVL69
 3615 0b76 AA140000 		.4byte	0x14aa
 3616 0b7a 19       		.uleb128 0x19
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 127


 3617 0b7b 6C000000 		.4byte	.LVL80
 3618 0b7f B5140000 		.4byte	0x14b5
 3619 0b83 00       		.byte	0
 3620 0b84 1C       		.uleb128 0x1c
 3621 0b85 960D0000 		.4byte	.LASF158
 3622 0b89 01       		.byte	0x1
 3623 0b8a 2405     		.2byte	0x524
 3624 0b8c 00000000 		.4byte	.LFB12
 3625 0b90 78000000 		.4byte	.LFE12-.LFB12
 3626 0b94 01       		.uleb128 0x1
 3627 0b95 9C       		.byte	0x9c
 3628 0b96 BD0B0000 		.4byte	0xbbd
 3629 0b9a 16       		.uleb128 0x16
 3630 0b9b 2A090000 		.4byte	.LASF159
 3631 0b9f 01       		.byte	0x1
 3632 0ba0 2C05     		.2byte	0x52c
 3633 0ba2 BA000000 		.4byte	0xba
 3634 0ba6 44040000 		.4byte	.LLST31
 3635 0baa 19       		.uleb128 0x19
 3636 0bab 14000000 		.4byte	.LVL87
 3637 0baf AE080000 		.4byte	0x8ae
 3638 0bb3 19       		.uleb128 0x19
 3639 0bb4 2A000000 		.4byte	.LVL89
 3640 0bb8 F2080000 		.4byte	0x8f2
 3641 0bbc 00       		.byte	0
 3642 0bbd 1C       		.uleb128 0x1c
 3643 0bbe 63090000 		.4byte	.LASF160
 3644 0bc2 01       		.byte	0x1
 3645 0bc3 7105     		.2byte	0x571
 3646 0bc5 00000000 		.4byte	.LFB13
 3647 0bc9 08000000 		.4byte	.LFE13-.LFB13
 3648 0bcd 01       		.uleb128 0x1
 3649 0bce 9C       		.byte	0x9c
 3650 0bcf F50B0000 		.4byte	0xbf5
 3651 0bd3 15       		.uleb128 0x15
 3652 0bd4 08070000 		.4byte	.LASF161
 3653 0bd8 01       		.byte	0x1
 3654 0bd9 7105     		.2byte	0x571
 3655 0bdb DC000000 		.4byte	0xdc
 3656 0bdf 8F040000 		.4byte	.LLST32
 3657 0be3 1E       		.uleb128 0x1e
 3658 0be4 06000000 		.4byte	.LVL96
 3659 0be8 CC140000 		.4byte	0x14cc
 3660 0bec 1B       		.uleb128 0x1b
 3661 0bed 01       		.uleb128 0x1
 3662 0bee 50       		.byte	0x50
 3663 0bef 03       		.uleb128 0x3
 3664 0bf0 F3       		.byte	0xf3
 3665 0bf1 01       		.uleb128 0x1
 3666 0bf2 50       		.byte	0x50
 3667 0bf3 00       		.byte	0
 3668 0bf4 00       		.byte	0
 3669 0bf5 1C       		.uleb128 0x1c
 3670 0bf6 B7010000 		.4byte	.LASF162
 3671 0bfa 01       		.byte	0x1
 3672 0bfb 8805     		.2byte	0x588
 3673 0bfd 00000000 		.4byte	.LFB14
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 128


 3674 0c01 30000000 		.4byte	.LFE14-.LFB14
 3675 0c05 01       		.uleb128 0x1
 3676 0c06 9C       		.byte	0x9c
 3677 0c07 1C0C0000 		.4byte	0xc1c
 3678 0c0b 15       		.uleb128 0x15
 3679 0c0c 74040000 		.4byte	.LASF163
 3680 0c10 01       		.byte	0x1
 3681 0c11 8805     		.2byte	0x588
 3682 0c13 99000000 		.4byte	0x99
 3683 0c17 B0040000 		.4byte	.LLST33
 3684 0c1b 00       		.byte	0
 3685 0c1c 1C       		.uleb128 0x1c
 3686 0c1d 63060000 		.4byte	.LASF164
 3687 0c21 01       		.byte	0x1
 3688 0c22 CC05     		.2byte	0x5cc
 3689 0c24 00000000 		.4byte	.LFB15
 3690 0c28 14000000 		.4byte	.LFE15-.LFB15
 3691 0c2c 01       		.uleb128 0x1
 3692 0c2d 9C       		.byte	0x9c
 3693 0c2e 530C0000 		.4byte	0xc53
 3694 0c32 15       		.uleb128 0x15
 3695 0c33 D90C0000 		.4byte	.LASF57
 3696 0c37 01       		.byte	0x1
 3697 0c38 CC05     		.2byte	0x5cc
 3698 0c3a 99000000 		.4byte	0x99
 3699 0c3e DE040000 		.4byte	.LLST34
 3700 0c42 16       		.uleb128 0x16
 3701 0c43 CC0D0000 		.4byte	.LASF165
 3702 0c47 01       		.byte	0x1
 3703 0c48 CF05     		.2byte	0x5cf
 3704 0c4a 99000000 		.4byte	0x99
 3705 0c4e 0C050000 		.4byte	.LLST35
 3706 0c52 00       		.byte	0
 3707 0c53 1C       		.uleb128 0x1c
 3708 0c54 3A080000 		.4byte	.LASF166
 3709 0c58 01       		.byte	0x1
 3710 0c59 2006     		.2byte	0x620
 3711 0c5b 00000000 		.4byte	.LFB16
 3712 0c5f 12000000 		.4byte	.LFE16-.LFB16
 3713 0c63 01       		.uleb128 0x1
 3714 0c64 9C       		.byte	0x9c
 3715 0c65 AF0C0000 		.4byte	0xcaf
 3716 0c69 15       		.uleb128 0x15
 3717 0c6a D90C0000 		.4byte	.LASF57
 3718 0c6e 01       		.byte	0x1
 3719 0c6f 2006     		.2byte	0x620
 3720 0c71 99000000 		.4byte	0x99
 3721 0c75 35050000 		.4byte	.LLST36
 3722 0c79 15       		.uleb128 0x15
 3723 0c7a 74040000 		.4byte	.LASF163
 3724 0c7e 01       		.byte	0x1
 3725 0c7f 2006     		.2byte	0x620
 3726 0c81 99000000 		.4byte	0x99
 3727 0c85 61050000 		.4byte	.LLST37
 3728 0c89 1A       		.uleb128 0x1a
 3729 0c8a 0A000000 		.4byte	.LVL108
 3730 0c8e F50B0000 		.4byte	0xbf5
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 129


 3731 0c92 9E0C0000 		.4byte	0xc9e
 3732 0c96 1B       		.uleb128 0x1b
 3733 0c97 01       		.uleb128 0x1
 3734 0c98 50       		.byte	0x50
 3735 0c99 03       		.uleb128 0x3
 3736 0c9a F3       		.byte	0xf3
 3737 0c9b 01       		.uleb128 0x1
 3738 0c9c 51       		.byte	0x51
 3739 0c9d 00       		.byte	0
 3740 0c9e 1E       		.uleb128 0x1e
 3741 0c9f 10000000 		.4byte	.LVL109
 3742 0ca3 1C0C0000 		.4byte	0xc1c
 3743 0ca7 1B       		.uleb128 0x1b
 3744 0ca8 01       		.uleb128 0x1
 3745 0ca9 50       		.byte	0x50
 3746 0caa 02       		.uleb128 0x2
 3747 0cab 74       		.byte	0x74
 3748 0cac 00       		.sleb128 0
 3749 0cad 00       		.byte	0
 3750 0cae 00       		.byte	0
 3751 0caf 18       		.uleb128 0x18
 3752 0cb0 1B060000 		.4byte	.LASF167
 3753 0cb4 01       		.byte	0x1
 3754 0cb5 5406     		.2byte	0x654
 3755 0cb7 BA000000 		.4byte	0xba
 3756 0cbb 00000000 		.4byte	.LFB17
 3757 0cbf 1C000000 		.4byte	.LFE17-.LFB17
 3758 0cc3 01       		.uleb128 0x1
 3759 0cc4 9C       		.byte	0x9c
 3760 0cc5 010D0000 		.4byte	0xd01
 3761 0cc9 15       		.uleb128 0x15
 3762 0cca 790E0000 		.4byte	.LASF134
 3763 0cce 01       		.byte	0x1
 3764 0ccf 5406     		.2byte	0x654
 3765 0cd1 99000000 		.4byte	0x99
 3766 0cd5 82050000 		.4byte	.LLST38
 3767 0cd9 16       		.uleb128 0x16
 3768 0cda 10070000 		.4byte	.LASF168
 3769 0cde 01       		.byte	0x1
 3770 0cdf 5606     		.2byte	0x656
 3771 0ce1 BA000000 		.4byte	0xba
 3772 0ce5 C4050000 		.4byte	.LLST39
 3773 0ce9 1E       		.uleb128 0x1e
 3774 0cea 1A000000 		.4byte	.LVL117
 3775 0cee D7140000 		.4byte	0x14d7
 3776 0cf2 1B       		.uleb128 0x1b
 3777 0cf3 01       		.uleb128 0x1
 3778 0cf4 50       		.byte	0x50
 3779 0cf5 03       		.uleb128 0x3
 3780 0cf6 F3       		.byte	0xf3
 3781 0cf7 01       		.uleb128 0x1
 3782 0cf8 50       		.byte	0x50
 3783 0cf9 1B       		.uleb128 0x1b
 3784 0cfa 01       		.uleb128 0x1
 3785 0cfb 51       		.byte	0x51
 3786 0cfc 02       		.uleb128 0x2
 3787 0cfd 08       		.byte	0x8
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 130


 3788 0cfe 55       		.byte	0x55
 3789 0cff 00       		.byte	0
 3790 0d00 00       		.byte	0
 3791 0d01 18       		.uleb128 0x18
 3792 0d02 81010000 		.4byte	.LASF169
 3793 0d06 01       		.byte	0x1
 3794 0d07 C906     		.2byte	0x6c9
 3795 0d09 BA000000 		.4byte	0xba
 3796 0d0d 00000000 		.4byte	.LFB18
 3797 0d11 1A000000 		.4byte	.LFE18-.LFB18
 3798 0d15 01       		.uleb128 0x1
 3799 0d16 9C       		.byte	0x9c
 3800 0d17 4C0D0000 		.4byte	0xd4c
 3801 0d1b 16       		.uleb128 0x16
 3802 0d1c 10070000 		.4byte	.LASF168
 3803 0d20 01       		.byte	0x1
 3804 0d21 CB06     		.2byte	0x6cb
 3805 0d23 BA000000 		.4byte	0xba
 3806 0d27 EE050000 		.4byte	.LLST40
 3807 0d2b 16       		.uleb128 0x16
 3808 0d2c 89080000 		.4byte	.LASF140
 3809 0d30 01       		.byte	0x1
 3810 0d31 CC06     		.2byte	0x6cc
 3811 0d33 99000000 		.4byte	0x99
 3812 0d37 18060000 		.4byte	.LLST41
 3813 0d3b 1E       		.uleb128 0x1e
 3814 0d3c 0E000000 		.4byte	.LVL120
 3815 0d40 AF0C0000 		.4byte	0xcaf
 3816 0d44 1B       		.uleb128 0x1b
 3817 0d45 01       		.uleb128 0x1
 3818 0d46 50       		.byte	0x50
 3819 0d47 02       		.uleb128 0x2
 3820 0d48 74       		.byte	0x74
 3821 0d49 00       		.sleb128 0
 3822 0d4a 00       		.byte	0
 3823 0d4b 00       		.byte	0
 3824 0d4c 18       		.uleb128 0x18
 3825 0d4d 00000000 		.4byte	.LASF170
 3826 0d51 01       		.byte	0x1
 3827 0d52 E80A     		.2byte	0xae8
 3828 0d54 99000000 		.4byte	0x99
 3829 0d58 00000000 		.4byte	.LFB25
 3830 0d5c 10000000 		.4byte	.LFE25-.LFB25
 3831 0d60 01       		.uleb128 0x1
 3832 0d61 9C       		.byte	0x9c
 3833 0d62 930D0000 		.4byte	0xd93
 3834 0d66 15       		.uleb128 0x15
 3835 0d67 790E0000 		.4byte	.LASF134
 3836 0d6b 01       		.byte	0x1
 3837 0d6c E80A     		.2byte	0xae8
 3838 0d6e 99000000 		.4byte	0x99
 3839 0d72 37060000 		.4byte	.LLST42
 3840 0d76 20       		.uleb128 0x20
 3841 0d77 510B0000 		.4byte	.LASF171
 3842 0d7b 01       		.byte	0x1
 3843 0d7c EA0A     		.2byte	0xaea
 3844 0d7e 99000000 		.4byte	0x99
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 131


 3845 0d82 01       		.uleb128 0x1
 3846 0d83 50       		.byte	0x50
 3847 0d84 20       		.uleb128 0x20
 3848 0d85 04020000 		.4byte	.LASF172
 3849 0d89 01       		.byte	0x1
 3850 0d8a EE0A     		.2byte	0xaee
 3851 0d8c 930D0000 		.4byte	0xd93
 3852 0d90 01       		.uleb128 0x1
 3853 0d91 53       		.byte	0x53
 3854 0d92 00       		.byte	0
 3855 0d93 07       		.uleb128 0x7
 3856 0d94 04       		.byte	0x4
 3857 0d95 FF020000 		.4byte	0x2ff
 3858 0d99 18       		.uleb128 0x18
 3859 0d9a 45040000 		.4byte	.LASF173
 3860 0d9e 01       		.byte	0x1
 3861 0d9f 400B     		.2byte	0xb40
 3862 0da1 81000000 		.4byte	0x81
 3863 0da5 00000000 		.4byte	.LFB26
 3864 0da9 24000000 		.4byte	.LFE26-.LFB26
 3865 0dad 01       		.uleb128 0x1
 3866 0dae 9C       		.byte	0x9c
 3867 0daf EF0D0000 		.4byte	0xdef
 3868 0db3 15       		.uleb128 0x15
 3869 0db4 2B0E0000 		.4byte	.LASF126
 3870 0db8 01       		.byte	0x1
 3871 0db9 400B     		.2byte	0xb40
 3872 0dbb 99000000 		.4byte	0x99
 3873 0dbf 58060000 		.4byte	.LLST43
 3874 0dc3 21       		.uleb128 0x21
 3875 0dc4 09060000 		.4byte	.LASF48
 3876 0dc8 01       		.byte	0x1
 3877 0dc9 400B     		.2byte	0xb40
 3878 0dcb 99000000 		.4byte	0x99
 3879 0dcf 01       		.uleb128 0x1
 3880 0dd0 51       		.byte	0x51
 3881 0dd1 16       		.uleb128 0x16
 3882 0dd2 260B0000 		.4byte	.LASF174
 3883 0dd6 01       		.byte	0x1
 3884 0dd7 420B     		.2byte	0xb42
 3885 0dd9 99000000 		.4byte	0x99
 3886 0ddd 92060000 		.4byte	.LLST44
 3887 0de1 1D       		.uleb128 0x1d
 3888 0de2 390E0000 		.4byte	.LASF175
 3889 0de6 01       		.byte	0x1
 3890 0de7 430B     		.2byte	0xb43
 3891 0de9 99000000 		.4byte	0x99
 3892 0ded 01       		.byte	0x1
 3893 0dee 00       		.byte	0
 3894 0def 22       		.uleb128 0x22
 3895 0df0 15020000 		.4byte	.LASF201
 3896 0df4 01       		.byte	0x1
 3897 0df5 9909     		.2byte	0x999
 3898 0df7 00000000 		.4byte	.LFB22
 3899 0dfb 3A000000 		.4byte	.LFE22-.LFB22
 3900 0dff 01       		.uleb128 0x1
 3901 0e00 9C       		.byte	0x9c
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 132


 3902 0e01 D40E0000 		.4byte	0xed4
 3903 0e05 15       		.uleb128 0x15
 3904 0e06 89080000 		.4byte	.LASF140
 3905 0e0a 01       		.byte	0x1
 3906 0e0b 9909     		.2byte	0x999
 3907 0e0d 99000000 		.4byte	0x99
 3908 0e11 A5060000 		.4byte	.LLST45
 3909 0e15 15       		.uleb128 0x15
 3910 0e16 04020000 		.4byte	.LASF172
 3911 0e1a 01       		.byte	0x1
 3912 0e1b 9909     		.2byte	0x999
 3913 0e1d 930D0000 		.4byte	0xd93
 3914 0e21 C6060000 		.4byte	.LLST46
 3915 0e25 16       		.uleb128 0x16
 3916 0e26 D5030000 		.4byte	.LASF130
 3917 0e2a 01       		.byte	0x1
 3918 0e2b 9B09     		.2byte	0x99b
 3919 0e2d 81000000 		.4byte	0x81
 3920 0e31 F2060000 		.4byte	.LLST47
 3921 0e35 16       		.uleb128 0x16
 3922 0e36 23010000 		.4byte	.LASF131
 3923 0e3a 01       		.byte	0x1
 3924 0e3b 9C09     		.2byte	0x99c
 3925 0e3d 81000000 		.4byte	0x81
 3926 0e41 10070000 		.4byte	.LLST48
 3927 0e45 16       		.uleb128 0x16
 3928 0e46 D9050000 		.4byte	.LASF127
 3929 0e4a 01       		.byte	0x1
 3930 0e4b A009     		.2byte	0x9a0
 3931 0e4d 99000000 		.4byte	0x99
 3932 0e51 23070000 		.4byte	.LLST49
 3933 0e55 16       		.uleb128 0x16
 3934 0e56 2B0E0000 		.4byte	.LASF126
 3935 0e5a 01       		.byte	0x1
 3936 0e5b A209     		.2byte	0x9a2
 3937 0e5d 99000000 		.4byte	0x99
 3938 0e61 41070000 		.4byte	.LLST50
 3939 0e65 1A       		.uleb128 0x1a
 3940 0e66 08000000 		.4byte	.LVL136
 3941 0e6a 4C0D0000 		.4byte	0xd4c
 3942 0e6e 7A0E0000 		.4byte	0xe7a
 3943 0e72 1B       		.uleb128 0x1b
 3944 0e73 01       		.uleb128 0x1
 3945 0e74 50       		.byte	0x50
 3946 0e75 03       		.uleb128 0x3
 3947 0e76 F3       		.byte	0xf3
 3948 0e77 01       		.uleb128 0x1
 3949 0e78 50       		.byte	0x50
 3950 0e79 00       		.byte	0
 3951 0e7a 1A       		.uleb128 0x1a
 3952 0e7b 12000000 		.4byte	.LVL138
 3953 0e7f E3140000 		.4byte	0x14e3
 3954 0e83 930E0000 		.4byte	0xe93
 3955 0e87 1B       		.uleb128 0x1b
 3956 0e88 01       		.uleb128 0x1
 3957 0e89 50       		.byte	0x50
 3958 0e8a 02       		.uleb128 0x2
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 133


 3959 0e8b 75       		.byte	0x75
 3960 0e8c 00       		.sleb128 0
 3961 0e8d 1B       		.uleb128 0x1b
 3962 0e8e 01       		.uleb128 0x1
 3963 0e8f 52       		.byte	0x52
 3964 0e90 01       		.uleb128 0x1
 3965 0e91 30       		.byte	0x30
 3966 0e92 00       		.byte	0
 3967 0e93 1A       		.uleb128 0x1a
 3968 0e94 1A000000 		.4byte	.LVL141
 3969 0e98 E3070000 		.4byte	0x7e3
 3970 0e9c A70E0000 		.4byte	0xea7
 3971 0ea0 1B       		.uleb128 0x1b
 3972 0ea1 01       		.uleb128 0x1
 3973 0ea2 50       		.byte	0x50
 3974 0ea3 02       		.uleb128 0x2
 3975 0ea4 75       		.byte	0x75
 3976 0ea5 00       		.sleb128 0
 3977 0ea6 00       		.byte	0
 3978 0ea7 1A       		.uleb128 0x1a
 3979 0ea8 26000000 		.4byte	.LVL144
 3980 0eac 990D0000 		.4byte	0xd99
 3981 0eb0 BD0E0000 		.4byte	0xebd
 3982 0eb4 1B       		.uleb128 0x1b
 3983 0eb5 01       		.uleb128 0x1
 3984 0eb6 50       		.byte	0x50
 3985 0eb7 04       		.uleb128 0x4
 3986 0eb8 75       		.byte	0x75
 3987 0eb9 00       		.sleb128 0
 3988 0eba 31       		.byte	0x31
 3989 0ebb 24       		.byte	0x24
 3990 0ebc 00       		.byte	0
 3991 0ebd 1E       		.uleb128 0x1e
 3992 0ebe 30000000 		.4byte	.LVL146
 3993 0ec2 2E080000 		.4byte	0x82e
 3994 0ec6 1B       		.uleb128 0x1b
 3995 0ec7 01       		.uleb128 0x1
 3996 0ec8 50       		.byte	0x50
 3997 0ec9 02       		.uleb128 0x2
 3998 0eca 75       		.byte	0x75
 3999 0ecb 00       		.sleb128 0
 4000 0ecc 1B       		.uleb128 0x1b
 4001 0ecd 01       		.uleb128 0x1
 4002 0ece 51       		.byte	0x51
 4003 0ecf 02       		.uleb128 0x2
 4004 0ed0 74       		.byte	0x74
 4005 0ed1 00       		.sleb128 0
 4006 0ed2 00       		.byte	0
 4007 0ed3 00       		.byte	0
 4008 0ed4 23       		.uleb128 0x23
 4009 0ed5 25030000 		.4byte	.LASF176
 4010 0ed9 01       		.byte	0x1
 4011 0eda F406     		.2byte	0x6f4
 4012 0edc BA000000 		.4byte	0xba
 4013 0ee0 00000000 		.4byte	.LFB19
 4014 0ee4 5C010000 		.4byte	.LFE19-.LFB19
 4015 0ee8 01       		.uleb128 0x1
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 134


 4016 0ee9 9C       		.byte	0x9c
 4017 0eea 4A100000 		.4byte	0x104a
 4018 0eee 15       		.uleb128 0x15
 4019 0eef 790E0000 		.4byte	.LASF134
 4020 0ef3 01       		.byte	0x1
 4021 0ef4 F406     		.2byte	0x6f4
 4022 0ef6 99000000 		.4byte	0x99
 4023 0efa 5F070000 		.4byte	.LLST51
 4024 0efe 16       		.uleb128 0x16
 4025 0eff 14040000 		.4byte	.LASF177
 4026 0f03 01       		.byte	0x1
 4027 0f04 F606     		.2byte	0x6f6
 4028 0f06 BA000000 		.4byte	0xba
 4029 0f0a 8B070000 		.4byte	.LLST52
 4030 0f0e 16       		.uleb128 0x16
 4031 0f0f 93080000 		.4byte	.LASF178
 4032 0f13 01       		.byte	0x1
 4033 0f14 F806     		.2byte	0x6f8
 4034 0f16 99000000 		.4byte	0x99
 4035 0f1a B5070000 		.4byte	.LLST53
 4036 0f1e 16       		.uleb128 0x16
 4037 0f1f C6000000 		.4byte	.LASF179
 4038 0f23 01       		.byte	0x1
 4039 0f24 F906     		.2byte	0x6f9
 4040 0f26 99000000 		.4byte	0x99
 4041 0f2a D4070000 		.4byte	.LLST54
 4042 0f2e 16       		.uleb128 0x16
 4043 0f2f 6C0C0000 		.4byte	.LASF180
 4044 0f33 01       		.byte	0x1
 4045 0f34 FA06     		.2byte	0x6fa
 4046 0f36 99000000 		.4byte	0x99
 4047 0f3a F2070000 		.4byte	.LLST55
 4048 0f3e 16       		.uleb128 0x16
 4049 0f3f 490A0000 		.4byte	.LASF181
 4050 0f43 01       		.byte	0x1
 4051 0f44 FB06     		.2byte	0x6fb
 4052 0f46 99000000 		.4byte	0x99
 4053 0f4a 42080000 		.4byte	.LLST56
 4054 0f4e 20       		.uleb128 0x20
 4055 0f4f 1C050000 		.4byte	.LASF182
 4056 0f53 01       		.byte	0x1
 4057 0f54 FD06     		.2byte	0x6fd
 4058 0f56 9A010000 		.4byte	0x19a
 4059 0f5a 02       		.uleb128 0x2
 4060 0f5b 91       		.byte	0x91
 4061 0f5c 4C       		.sleb128 -52
 4062 0f5d 16       		.uleb128 0x16
 4063 0f5e D80D0000 		.4byte	.LASF183
 4064 0f62 01       		.byte	0x1
 4065 0f63 FF06     		.2byte	0x6ff
 4066 0f65 99000000 		.4byte	0x99
 4067 0f69 71080000 		.4byte	.LLST57
 4068 0f6d 16       		.uleb128 0x16
 4069 0f6e 30000000 		.4byte	.LASF184
 4070 0f72 01       		.byte	0x1
 4071 0f73 0007     		.2byte	0x700
 4072 0f75 99000000 		.4byte	0x99
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 135


 4073 0f79 A6080000 		.4byte	.LLST58
 4074 0f7d 16       		.uleb128 0x16
 4075 0f7e F00B0000 		.4byte	.LASF185
 4076 0f82 01       		.byte	0x1
 4077 0f83 0107     		.2byte	0x701
 4078 0f85 99000000 		.4byte	0x99
 4079 0f89 D1080000 		.4byte	.LLST59
 4080 0f8d 16       		.uleb128 0x16
 4081 0f8e 33010000 		.4byte	.LASF186
 4082 0f92 01       		.byte	0x1
 4083 0f93 0807     		.2byte	0x708
 4084 0f95 4A100000 		.4byte	0x104a
 4085 0f99 06090000 		.4byte	.LLST60
 4086 0f9d 16       		.uleb128 0x16
 4087 0f9e E5000000 		.4byte	.LASF187
 4088 0fa2 01       		.byte	0x1
 4089 0fa3 0907     		.2byte	0x709
 4090 0fa5 930D0000 		.4byte	0xd93
 4091 0fa9 19090000 		.4byte	.LLST61
 4092 0fad 16       		.uleb128 0x16
 4093 0fae E8050000 		.4byte	.LASF188
 4094 0fb2 01       		.byte	0x1
 4095 0fb3 0A07     		.2byte	0x70a
 4096 0fb5 29070000 		.4byte	0x729
 4097 0fb9 2C090000 		.4byte	.LLST62
 4098 0fbd 1A       		.uleb128 0x1a
 4099 0fbe 82000000 		.4byte	.LVL169
 4100 0fc2 D7140000 		.4byte	0x14d7
 4101 0fc6 D70F0000 		.4byte	0xfd7
 4102 0fca 1B       		.uleb128 0x1b
 4103 0fcb 01       		.uleb128 0x1
 4104 0fcc 50       		.byte	0x50
 4105 0fcd 02       		.uleb128 0x2
 4106 0fce 75       		.byte	0x75
 4107 0fcf 00       		.sleb128 0
 4108 0fd0 1B       		.uleb128 0x1b
 4109 0fd1 01       		.uleb128 0x1
 4110 0fd2 51       		.byte	0x51
 4111 0fd3 02       		.uleb128 0x2
 4112 0fd4 08       		.byte	0x8
 4113 0fd5 55       		.byte	0x55
 4114 0fd6 00       		.byte	0
 4115 0fd7 1A       		.uleb128 0x1a
 4116 0fd8 DC000000 		.4byte	.LVL181
 4117 0fdc EF140000 		.4byte	0x14ef
 4118 0fe0 EB0F0000 		.4byte	0xfeb
 4119 0fe4 1B       		.uleb128 0x1b
 4120 0fe5 01       		.uleb128 0x1
 4121 0fe6 50       		.byte	0x50
 4122 0fe7 02       		.uleb128 0x2
 4123 0fe8 77       		.byte	0x77
 4124 0fe9 00       		.sleb128 0
 4125 0fea 00       		.byte	0
 4126 0feb 1A       		.uleb128 0x1a
 4127 0fec FE000000 		.4byte	.LVL186
 4128 0ff0 D7140000 		.4byte	0x14d7
 4129 0ff4 05100000 		.4byte	0x1005
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 136


 4130 0ff8 1B       		.uleb128 0x1b
 4131 0ff9 01       		.uleb128 0x1
 4132 0ffa 50       		.byte	0x50
 4133 0ffb 02       		.uleb128 0x2
 4134 0ffc 75       		.byte	0x75
 4135 0ffd 00       		.sleb128 0
 4136 0ffe 1B       		.uleb128 0x1b
 4137 0fff 01       		.uleb128 0x1
 4138 1000 51       		.byte	0x51
 4139 1001 02       		.uleb128 0x2
 4140 1002 08       		.byte	0x8
 4141 1003 55       		.byte	0x55
 4142 1004 00       		.byte	0
 4143 1005 1A       		.uleb128 0x1a
 4144 1006 18010000 		.4byte	.LVL187
 4145 100a FA140000 		.4byte	0x14fa
 4146 100e 19100000 		.4byte	0x1019
 4147 1012 1B       		.uleb128 0x1b
 4148 1013 01       		.uleb128 0x1
 4149 1014 50       		.byte	0x50
 4150 1015 02       		.uleb128 0x2
 4151 1016 77       		.byte	0x77
 4152 1017 00       		.sleb128 0
 4153 1018 00       		.byte	0
 4154 1019 1A       		.uleb128 0x1a
 4155 101a 22010000 		.4byte	.LVL188
 4156 101e EF0D0000 		.4byte	0xdef
 4157 1022 33100000 		.4byte	0x1033
 4158 1026 1B       		.uleb128 0x1b
 4159 1027 01       		.uleb128 0x1
 4160 1028 50       		.byte	0x50
 4161 1029 02       		.uleb128 0x2
 4162 102a 75       		.byte	0x75
 4163 102b 00       		.sleb128 0
 4164 102c 1B       		.uleb128 0x1b
 4165 102d 01       		.uleb128 0x1
 4166 102e 51       		.byte	0x51
 4167 102f 02       		.uleb128 0x2
 4168 1030 74       		.byte	0x74
 4169 1031 00       		.sleb128 0
 4170 1032 00       		.byte	0
 4171 1033 1E       		.uleb128 0x1e
 4172 1034 2A010000 		.4byte	.LVL189
 4173 1038 D7140000 		.4byte	0x14d7
 4174 103c 1B       		.uleb128 0x1b
 4175 103d 01       		.uleb128 0x1
 4176 103e 50       		.byte	0x50
 4177 103f 02       		.uleb128 0x2
 4178 1040 75       		.byte	0x75
 4179 1041 00       		.sleb128 0
 4180 1042 1B       		.uleb128 0x1b
 4181 1043 01       		.uleb128 0x1
 4182 1044 51       		.byte	0x51
 4183 1045 02       		.uleb128 0x2
 4184 1046 08       		.byte	0x8
 4185 1047 55       		.byte	0x55
 4186 1048 00       		.byte	0
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 137


 4187 1049 00       		.byte	0
 4188 104a 07       		.uleb128 0x7
 4189 104b 04       		.byte	0x4
 4190 104c 50100000 		.4byte	0x1050
 4191 1050 1F       		.uleb128 0x1f
 4192 1051 3B070000 		.4byte	0x73b
 4193 1055 18       		.uleb128 0x18
 4194 1056 F5050000 		.4byte	.LASF189
 4195 105a 01       		.byte	0x1
 4196 105b FF07     		.2byte	0x7ff
 4197 105d BA000000 		.4byte	0xba
 4198 1061 00000000 		.4byte	.LFB20
 4199 1065 1A000000 		.4byte	.LFE20-.LFB20
 4200 1069 01       		.uleb128 0x1
 4201 106a 9C       		.byte	0x9c
 4202 106b A0100000 		.4byte	0x10a0
 4203 106f 16       		.uleb128 0x16
 4204 1070 14040000 		.4byte	.LASF177
 4205 1074 01       		.byte	0x1
 4206 1075 0108     		.2byte	0x801
 4207 1077 BA000000 		.4byte	0xba
 4208 107b 3F090000 		.4byte	.LLST63
 4209 107f 16       		.uleb128 0x16
 4210 1080 89080000 		.4byte	.LASF140
 4211 1084 01       		.byte	0x1
 4212 1085 0208     		.2byte	0x802
 4213 1087 99000000 		.4byte	0x99
 4214 108b 69090000 		.4byte	.LLST64
 4215 108f 1E       		.uleb128 0x1e
 4216 1090 0E000000 		.4byte	.LVL195
 4217 1094 D40E0000 		.4byte	0xed4
 4218 1098 1B       		.uleb128 0x1b
 4219 1099 01       		.uleb128 0x1
 4220 109a 50       		.byte	0x50
 4221 109b 02       		.uleb128 0x2
 4222 109c 74       		.byte	0x74
 4223 109d 00       		.sleb128 0
 4224 109e 00       		.byte	0
 4225 109f 00       		.byte	0
 4226 10a0 1C       		.uleb128 0x1c
 4227 10a1 A00E0000 		.4byte	.LASF190
 4228 10a5 01       		.byte	0x1
 4229 10a6 6409     		.2byte	0x964
 4230 10a8 00000000 		.4byte	.LFB21
 4231 10ac 20000000 		.4byte	.LFE21-.LFB21
 4232 10b0 01       		.uleb128 0x1
 4233 10b1 9C       		.byte	0x9c
 4234 10b2 E7100000 		.4byte	0x10e7
 4235 10b6 16       		.uleb128 0x16
 4236 10b7 89080000 		.4byte	.LASF140
 4237 10bb 01       		.byte	0x1
 4238 10bc 6609     		.2byte	0x966
 4239 10be 99000000 		.4byte	0x99
 4240 10c2 88090000 		.4byte	.LLST65
 4241 10c6 16       		.uleb128 0x16
 4242 10c7 04020000 		.4byte	.LASF172
 4243 10cb 01       		.byte	0x1
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 138


 4244 10cc 6709     		.2byte	0x967
 4245 10ce 930D0000 		.4byte	0xd93
 4246 10d2 A7090000 		.4byte	.LLST66
 4247 10d6 1E       		.uleb128 0x1e
 4248 10d7 14000000 		.4byte	.LVL203
 4249 10db EF0D0000 		.4byte	0xdef
 4250 10df 1B       		.uleb128 0x1b
 4251 10e0 01       		.uleb128 0x1
 4252 10e1 50       		.byte	0x50
 4253 10e2 02       		.uleb128 0x2
 4254 10e3 74       		.byte	0x74
 4255 10e4 00       		.sleb128 0
 4256 10e5 00       		.byte	0
 4257 10e6 00       		.byte	0
 4258 10e7 1C       		.uleb128 0x1c
 4259 10e8 56050000 		.4byte	.LASF191
 4260 10ec 01       		.byte	0x1
 4261 10ed 7A0B     		.2byte	0xb7a
 4262 10ef 00000000 		.4byte	.LFB27
 4263 10f3 D4000000 		.4byte	.LFE27-.LFB27
 4264 10f7 01       		.uleb128 0x1
 4265 10f8 9C       		.byte	0x9c
 4266 10f9 E0110000 		.4byte	0x11e0
 4267 10fd 15       		.uleb128 0x15
 4268 10fe 99040000 		.4byte	.LASF192
 4269 1102 01       		.byte	0x1
 4270 1103 7A0B     		.2byte	0xb7a
 4271 1105 99000000 		.4byte	0x99
 4272 1109 BA090000 		.4byte	.LLST67
 4273 110d 16       		.uleb128 0x16
 4274 110e AE010000 		.4byte	.LASF193
 4275 1112 01       		.byte	0x1
 4276 1113 7C0B     		.2byte	0xb7c
 4277 1115 99000000 		.4byte	0x99
 4278 1119 E7090000 		.4byte	.LLST68
 4279 111d 16       		.uleb128 0x16
 4280 111e 2D010000 		.4byte	.LASF194
 4281 1122 01       		.byte	0x1
 4282 1123 7D0B     		.2byte	0xb7d
 4283 1125 99000000 		.4byte	0x99
 4284 1129 060A0000 		.4byte	.LLST69
 4285 112d 16       		.uleb128 0x16
 4286 112e F9030000 		.4byte	.LASF195
 4287 1132 01       		.byte	0x1
 4288 1133 7E0B     		.2byte	0xb7e
 4289 1135 99000000 		.4byte	0x99
 4290 1139 240A0000 		.4byte	.LLST70
 4291 113d 16       		.uleb128 0x16
 4292 113e CC0D0000 		.4byte	.LASF165
 4293 1142 01       		.byte	0x1
 4294 1143 7F0B     		.2byte	0xb7f
 4295 1145 99000000 		.4byte	0x99
 4296 1149 420A0000 		.4byte	.LLST71
 4297 114d 16       		.uleb128 0x16
 4298 114e 14010000 		.4byte	.LASF148
 4299 1152 01       		.byte	0x1
 4300 1153 800B     		.2byte	0xb80
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 139


 4301 1155 81000000 		.4byte	0x81
 4302 1159 AD0A0000 		.4byte	.LLST72
 4303 115d 19       		.uleb128 0x19
 4304 115e 38000000 		.4byte	.LVL211
 4305 1162 AA140000 		.4byte	0x14aa
 4306 1166 19       		.uleb128 0x19
 4307 1167 46000000 		.4byte	.LVL215
 4308 116b B5140000 		.4byte	0x14b5
 4309 116f 19       		.uleb128 0x19
 4310 1170 4A000000 		.4byte	.LVL216
 4311 1174 AA140000 		.4byte	0x14aa
 4312 1178 19       		.uleb128 0x19
 4313 1179 56000000 		.4byte	.LVL219
 4314 117d B5140000 		.4byte	0x14b5
 4315 1181 19       		.uleb128 0x19
 4316 1182 5A000000 		.4byte	.LVL220
 4317 1186 AA140000 		.4byte	0x14aa
 4318 118a 19       		.uleb128 0x19
 4319 118b 6C000000 		.4byte	.LVL225
 4320 118f B5140000 		.4byte	0x14b5
 4321 1193 1A       		.uleb128 0x1a
 4322 1194 74000000 		.4byte	.LVL226
 4323 1198 05150000 		.4byte	0x1505
 4324 119c A9110000 		.4byte	0x11a9
 4325 11a0 1B       		.uleb128 0x1b
 4326 11a1 01       		.uleb128 0x1
 4327 11a2 50       		.byte	0x50
 4328 11a3 04       		.uleb128 0x4
 4329 11a4 7D       		.byte	0x7d
 4330 11a5 04       		.sleb128 4
 4331 11a6 94       		.byte	0x94
 4332 11a7 02       		.byte	0x2
 4333 11a8 00       		.byte	0
 4334 11a9 19       		.uleb128 0x19
 4335 11aa 78000000 		.4byte	.LVL227
 4336 11ae AA140000 		.4byte	0x14aa
 4337 11b2 19       		.uleb128 0x19
 4338 11b3 86000000 		.4byte	.LVL231
 4339 11b7 B5140000 		.4byte	0x14b5
 4340 11bb 19       		.uleb128 0x19
 4341 11bc 8A000000 		.4byte	.LVL232
 4342 11c0 AA140000 		.4byte	0x14aa
 4343 11c4 19       		.uleb128 0x19
 4344 11c5 9A000000 		.4byte	.LVL236
 4345 11c9 B5140000 		.4byte	0x14b5
 4346 11cd 19       		.uleb128 0x19
 4347 11ce 9E000000 		.4byte	.LVL237
 4348 11d2 AA140000 		.4byte	0x14aa
 4349 11d6 19       		.uleb128 0x19
 4350 11d7 B0000000 		.4byte	.LVL241
 4351 11db B5140000 		.4byte	0x14b5
 4352 11df 00       		.byte	0
 4353 11e0 18       		.uleb128 0x18
 4354 11e1 9C060000 		.4byte	.LASF196
 4355 11e5 01       		.byte	0x1
 4356 11e6 840C     		.2byte	0xc84
 4357 11e8 76000000 		.4byte	0x76
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 140


 4358 11ec 00000000 		.4byte	.LFB28
 4359 11f0 1C000000 		.4byte	.LFE28-.LFB28
 4360 11f4 01       		.uleb128 0x1
 4361 11f5 9C       		.byte	0x9c
 4362 11f6 3A120000 		.4byte	0x123a
 4363 11fa 15       		.uleb128 0x15
 4364 11fb 6F040000 		.4byte	.LASF197
 4365 11ff 01       		.byte	0x1
 4366 1200 840C     		.2byte	0xc84
 4367 1202 AC070000 		.4byte	0x7ac
 4368 1206 F70A0000 		.4byte	.LLST73
 4369 120a 15       		.uleb128 0x15
 4370 120b A70C0000 		.4byte	.LASF145
 4371 120f 01       		.byte	0x1
 4372 1210 840C     		.2byte	0xc84
 4373 1212 76000000 		.4byte	0x76
 4374 1216 180B0000 		.4byte	.LLST74
 4375 121a 16       		.uleb128 0x16
 4376 121b 510B0000 		.4byte	.LASF171
 4377 121f 01       		.byte	0x1
 4378 1220 860C     		.2byte	0xc86
 4379 1222 76000000 		.4byte	0x76
 4380 1226 390B0000 		.4byte	.LLST75
 4381 122a 1E       		.uleb128 0x1e
 4382 122b 14000000 		.4byte	.LVL248
 4383 122f 10150000 		.4byte	0x1510
 4384 1233 1B       		.uleb128 0x1b
 4385 1234 01       		.uleb128 0x1
 4386 1235 50       		.byte	0x50
 4387 1236 01       		.uleb128 0x1
 4388 1237 30       		.byte	0x30
 4389 1238 00       		.byte	0
 4390 1239 00       		.byte	0
 4391 123a 1C       		.uleb128 0x1c
 4392 123b 61070000 		.4byte	.LASF198
 4393 123f 01       		.byte	0x1
 4394 1240 D90C     		.2byte	0xcd9
 4395 1242 00000000 		.4byte	.LFB29
 4396 1246 1C000000 		.4byte	.LFE29-.LFB29
 4397 124a 01       		.uleb128 0x1
 4398 124b 9C       		.byte	0x9c
 4399 124c A3120000 		.4byte	0x12a3
 4400 1250 15       		.uleb128 0x15
 4401 1251 D8010000 		.4byte	.LASF199
 4402 1255 01       		.byte	0x1
 4403 1256 D90C     		.2byte	0xcd9
 4404 1258 82060000 		.4byte	0x682
 4405 125c 640B0000 		.4byte	.LLST76
 4406 1260 15       		.uleb128 0x15
 4407 1261 35080000 		.4byte	.LASF98
 4408 1265 01       		.byte	0x1
 4409 1266 D90C     		.2byte	0xcd9
 4410 1268 99000000 		.4byte	0x99
 4411 126c 900B0000 		.4byte	.LLST77
 4412 1270 15       		.uleb128 0x15
 4413 1271 FF030000 		.4byte	.LASF200
 4414 1275 01       		.byte	0x1
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 141


 4415 1276 D90C     		.2byte	0xcd9
 4416 1278 99000000 		.4byte	0x99
 4417 127c BC0B0000 		.4byte	.LLST78
 4418 1280 16       		.uleb128 0x16
 4419 1281 14010000 		.4byte	.LASF148
 4420 1285 01       		.byte	0x1
 4421 1286 DB0C     		.2byte	0xcdb
 4422 1288 81000000 		.4byte	0x81
 4423 128c E80B0000 		.4byte	.LLST79
 4424 1290 19       		.uleb128 0x19
 4425 1291 0C000000 		.4byte	.LVL251
 4426 1295 AA140000 		.4byte	0x14aa
 4427 1299 19       		.uleb128 0x19
 4428 129a 1A000000 		.4byte	.LVL253
 4429 129e B5140000 		.4byte	0x14b5
 4430 12a2 00       		.byte	0
 4431 12a3 22       		.uleb128 0x22
 4432 12a4 41000000 		.4byte	.LASF202
 4433 12a8 01       		.byte	0x1
 4434 12a9 B903     		.2byte	0x3b9
 4435 12ab 00000000 		.4byte	.LFB9
 4436 12af 28000000 		.4byte	.LFE9-.LFB9
 4437 12b3 01       		.uleb128 0x1
 4438 12b4 9C       		.byte	0x9c
 4439 12b5 F6120000 		.4byte	0x12f6
 4440 12b9 16       		.uleb128 0x16
 4441 12ba CC0D0000 		.4byte	.LASF165
 4442 12be 01       		.byte	0x1
 4443 12bf BE03     		.2byte	0x3be
 4444 12c1 99000000 		.4byte	0x99
 4445 12c5 FB0B0000 		.4byte	.LLST80
 4446 12c9 1A       		.uleb128 0x1a
 4447 12ca 18000000 		.4byte	.LVL258
 4448 12ce 3A120000 		.4byte	0x123a
 4449 12d2 EC120000 		.4byte	0x12ec
 4450 12d6 1B       		.uleb128 0x1b
 4451 12d7 01       		.uleb128 0x1
 4452 12d8 50       		.byte	0x50
 4453 12d9 05       		.uleb128 0x5
 4454 12da 0C       		.byte	0xc
 4455 12db 00040240 		.4byte	0x40020400
 4456 12df 1B       		.uleb128 0x1b
 4457 12e0 01       		.uleb128 0x1
 4458 12e1 51       		.byte	0x51
 4459 12e2 03       		.uleb128 0x3
 4460 12e3 0A       		.byte	0xa
 4461 12e4 00F0     		.2byte	0xf000
 4462 12e6 1B       		.uleb128 0x1b
 4463 12e7 01       		.uleb128 0x1
 4464 12e8 52       		.byte	0x52
 4465 12e9 01       		.uleb128 0x1
 4466 12ea 30       		.byte	0x30
 4467 12eb 00       		.byte	0
 4468 12ec 19       		.uleb128 0x19
 4469 12ed 1C000000 		.4byte	.LVL259
 4470 12f1 1B150000 		.4byte	0x151b
 4471 12f5 00       		.byte	0
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 142


 4472 12f6 1C       		.uleb128 0x1c
 4473 12f7 E00C0000 		.4byte	.LASF203
 4474 12fb 01       		.byte	0x1
 4475 12fc 2B04     		.2byte	0x42b
 4476 12fe 00000000 		.4byte	.LFB10
 4477 1302 3C000000 		.4byte	.LFE10-.LFB10
 4478 1306 01       		.uleb128 0x1
 4479 1307 9C       		.byte	0x9c
 4480 1308 2F130000 		.4byte	0x132f
 4481 130c 15       		.uleb128 0x15
 4482 130d 6F040000 		.4byte	.LASF197
 4483 1311 01       		.byte	0x1
 4484 1312 2B04     		.2byte	0x42b
 4485 1314 38020000 		.4byte	0x238
 4486 1318 0E0C0000 		.4byte	.LLST81
 4487 131c 19       		.uleb128 0x19
 4488 131d 14000000 		.4byte	.LVL261
 4489 1321 A3120000 		.4byte	0x12a3
 4490 1325 19       		.uleb128 0x19
 4491 1326 1C000000 		.4byte	.LVL262
 4492 132a 27150000 		.4byte	0x1527
 4493 132e 00       		.byte	0
 4494 132f 18       		.uleb128 0x18
 4495 1330 0A090000 		.4byte	.LASF204
 4496 1334 01       		.byte	0x1
 4497 1335 C302     		.2byte	0x2c3
 4498 1337 BA000000 		.4byte	0xba
 4499 133b 00000000 		.4byte	.LFB7
 4500 133f 28000000 		.4byte	.LFE7-.LFB7
 4501 1343 01       		.uleb128 0x1
 4502 1344 9C       		.byte	0x9c
 4503 1345 95130000 		.4byte	0x1395
 4504 1349 1D       		.uleb128 0x1d
 4505 134a 7B0D0000 		.4byte	.LASF205
 4506 134e 01       		.byte	0x1
 4507 134f C502     		.2byte	0x2c5
 4508 1351 BA000000 		.4byte	0xba
 4509 1355 00       		.byte	0
 4510 1356 19       		.uleb128 0x19
 4511 1357 06000000 		.4byte	.LVL264
 4512 135b A0100000 		.4byte	0x10a0
 4513 135f 1A       		.uleb128 0x1a
 4514 1360 0C000000 		.4byte	.LVL265
 4515 1364 DB0A0000 		.4byte	0xadb
 4516 1368 72130000 		.4byte	0x1372
 4517 136c 1B       		.uleb128 0x1b
 4518 136d 01       		.uleb128 0x1
 4519 136e 50       		.byte	0x50
 4520 136f 01       		.uleb128 0x1
 4521 1370 30       		.byte	0x30
 4522 1371 00       		.byte	0
 4523 1372 1A       		.uleb128 0x1a
 4524 1373 1A000000 		.4byte	.LVL266
 4525 1377 F6120000 		.4byte	0x12f6
 4526 137b 85130000 		.4byte	0x1385
 4527 137f 1B       		.uleb128 0x1b
 4528 1380 01       		.uleb128 0x1
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 143


 4529 1381 50       		.byte	0x50
 4530 1382 01       		.uleb128 0x1
 4531 1383 30       		.byte	0x30
 4532 1384 00       		.byte	0
 4533 1385 1E       		.uleb128 0x1e
 4534 1386 20000000 		.4byte	.LVL267
 4535 138a F6120000 		.4byte	0x12f6
 4536 138e 1B       		.uleb128 0x1b
 4537 138f 01       		.uleb128 0x1
 4538 1390 50       		.byte	0x50
 4539 1391 01       		.uleb128 0x1
 4540 1392 31       		.byte	0x31
 4541 1393 00       		.byte	0
 4542 1394 00       		.byte	0
 4543 1395 24       		.uleb128 0x24
 4544 1396 89070000 		.4byte	.LASF206
 4545 139a 07       		.byte	0x7
 4546 139b 6404     		.2byte	0x464
 4547 139d F7050000 		.4byte	0x5f7
 4548 13a1 24       		.uleb128 0x24
 4549 13a2 590A0000 		.4byte	.LASF207
 4550 13a6 07       		.byte	0x7
 4551 13a7 6504     		.2byte	0x465
 4552 13a9 AD130000 		.4byte	0x13ad
 4553 13ad 1F       		.uleb128 0x1f
 4554 13ae 6E070000 		.4byte	0x76e
 4555 13b2 0D       		.uleb128 0xd
 4556 13b3 D60A0000 		.4byte	0xad6
 4557 13b7 C2130000 		.4byte	0x13c2
 4558 13bb 0E       		.uleb128 0xe
 4559 13bc F8020000 		.4byte	0x2f8
 4560 13c0 02       		.byte	0x2
 4561 13c1 00       		.byte	0
 4562 13c2 24       		.uleb128 0x24
 4563 13c3 860D0000 		.4byte	.LASF208
 4564 13c7 07       		.byte	0x7
 4565 13c8 6604     		.2byte	0x466
 4566 13ca CE130000 		.4byte	0x13ce
 4567 13ce 1F       		.uleb128 0x1f
 4568 13cf B2130000 		.4byte	0x13b2
 4569 13d3 25       		.uleb128 0x25
 4570 13d4 73000000 		.4byte	.LASF209
 4571 13d8 01       		.byte	0x1
 4572 13d9 BC       		.byte	0xbc
 4573 13da C6000000 		.4byte	0xc6
 4574 13de 05       		.uleb128 0x5
 4575 13df 03       		.byte	0x3
 4576 13e0 00000000 		.4byte	CapSense_widgetIndex
 4577 13e4 25       		.uleb128 0x25
 4578 13e5 7F030000 		.4byte	.LASF210
 4579 13e9 01       		.byte	0x1
 4580 13ea BD       		.byte	0xbd
 4581 13eb C6000000 		.4byte	0xc6
 4582 13ef 05       		.uleb128 0x5
 4583 13f0 03       		.byte	0x3
 4584 13f1 00000000 		.4byte	CapSense_sensorIndex
 4585 13f5 25       		.uleb128 0x25
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 144


 4586 13f6 820E0000 		.4byte	.LASF211
 4587 13fa 01       		.byte	0x1
 4588 13fb BE       		.byte	0xbe
 4589 13fc 81000000 		.4byte	0x81
 4590 1400 05       		.uleb128 0x5
 4591 1401 03       		.byte	0x3
 4592 1402 00000000 		.4byte	CapSense_requestScanAllWidget
 4593 1406 25       		.uleb128 0x25
 4594 1407 140D0000 		.4byte	.LASF212
 4595 140b 01       		.byte	0x1
 4596 140c C1       		.byte	0xc1
 4597 140d 29070000 		.4byte	0x729
 4598 1411 05       		.uleb128 0x5
 4599 1412 03       		.byte	0x3
 4600 1413 00000000 		.4byte	CapSense_curRamSnsPtr
 4601 1417 25       		.uleb128 0x25
 4602 1418 0A0B0000 		.4byte	.LASF213
 4603 141c 01       		.byte	0x1
 4604 141d AF       		.byte	0xaf
 4605 141e 38020000 		.4byte	0x238
 4606 1422 05       		.uleb128 0x5
 4607 1423 03       		.byte	0x3
 4608 1424 00000000 		.4byte	CapSense_currentSenseMethod
 4609 1428 25       		.uleb128 0x25
 4610 1429 360D0000 		.4byte	.LASF214
 4611 142d 01       		.byte	0x1
 4612 142e B8       		.byte	0xb8
 4613 142f 39140000 		.4byte	0x1439
 4614 1433 05       		.uleb128 0x5
 4615 1434 03       		.byte	0x3
 4616 1435 00000000 		.4byte	CapSense_scanFreqIndex
 4617 1439 1F       		.uleb128 0x1f
 4618 143a 81000000 		.4byte	0x81
 4619 143e 25       		.uleb128 0x25
 4620 143f 20080000 		.4byte	.LASF215
 4621 1443 01       		.byte	0x1
 4622 1444 D0       		.byte	0xd0
 4623 1445 D00A0000 		.4byte	0xad0
 4624 1449 05       		.uleb128 0x5
 4625 144a 03       		.byte	0x3
 4626 144b 00000000 		.4byte	CapSense_curSnsIOPtr
 4627 144f 0D       		.uleb128 0xd
 4628 1450 5F140000 		.4byte	0x145f
 4629 1454 5F140000 		.4byte	0x145f
 4630 1458 0E       		.uleb128 0xe
 4631 1459 F8020000 		.4byte	0x2f8
 4632 145d 05       		.byte	0x5
 4633 145e 00       		.byte	0
 4634 145f 1F       		.uleb128 0x1f
 4635 1460 D8070000 		.4byte	0x7d8
 4636 1464 25       		.uleb128 0x25
 4637 1465 C40E0000 		.4byte	.LASF216
 4638 1469 01       		.byte	0x1
 4639 146a D2       		.byte	0xd2
 4640 146b 75140000 		.4byte	0x1475
 4641 146f 05       		.uleb128 0x5
 4642 1470 03       		.byte	0x3
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 145


 4643 1471 00000000 		.4byte	CapSense_idacGainTable
 4644 1475 1F       		.uleb128 0x1f
 4645 1476 4F140000 		.4byte	0x144f
 4646 147a 26       		.uleb128 0x26
 4647 147b 3F030000 		.4byte	.LASF217
 4648 147f 3F030000 		.4byte	.LASF217
 4649 1483 09       		.byte	0x9
 4650 1484 8801     		.2byte	0x188
 4651 1486 26       		.uleb128 0x26
 4652 1487 790C0000 		.4byte	.LASF218
 4653 148b 790C0000 		.4byte	.LASF218
 4654 148f 09       		.byte	0x9
 4655 1490 8A01     		.2byte	0x18a
 4656 1492 26       		.uleb128 0x26
 4657 1493 DE030000 		.4byte	.LASF219
 4658 1497 DE030000 		.4byte	.LASF219
 4659 149b 09       		.byte	0x9
 4660 149c 8901     		.2byte	0x189
 4661 149e 26       		.uleb128 0x26
 4662 149f 740A0000 		.4byte	.LASF220
 4663 14a3 740A0000 		.4byte	.LASF220
 4664 14a7 09       		.byte	0x9
 4665 14a8 8B01     		.2byte	0x18b
 4666 14aa 27       		.uleb128 0x27
 4667 14ab FD0C0000 		.4byte	.LASF221
 4668 14af FD0C0000 		.4byte	.LASF221
 4669 14b3 0A       		.byte	0xa
 4670 14b4 F8       		.byte	0xf8
 4671 14b5 27       		.uleb128 0x27
 4672 14b6 38050000 		.4byte	.LASF222
 4673 14ba 38050000 		.4byte	.LASF222
 4674 14be 0A       		.byte	0xa
 4675 14bf F9       		.byte	0xf9
 4676 14c0 26       		.uleb128 0x26
 4677 14c1 D70A0000 		.4byte	.LASF223
 4678 14c5 D70A0000 		.4byte	.LASF223
 4679 14c9 09       		.byte	0x9
 4680 14ca 9101     		.2byte	0x191
 4681 14cc 27       		.uleb128 0x27
 4682 14cd 650B0000 		.4byte	.LASF224
 4683 14d1 650B0000 		.4byte	.LASF224
 4684 14d5 0B       		.byte	0xb
 4685 14d6 18       		.byte	0x18
 4686 14d7 26       		.uleb128 0x26
 4687 14d8 250A0000 		.4byte	.LASF225
 4688 14dc 250A0000 		.4byte	.LASF225
 4689 14e0 09       		.byte	0x9
 4690 14e1 8E01     		.2byte	0x18e
 4691 14e3 26       		.uleb128 0x26
 4692 14e4 76050000 		.4byte	.LASF226
 4693 14e8 76050000 		.4byte	.LASF226
 4694 14ec 09       		.byte	0x9
 4695 14ed AE01     		.2byte	0x1ae
 4696 14ef 27       		.uleb128 0x27
 4697 14f0 930A0000 		.4byte	.LASF227
 4698 14f4 930A0000 		.4byte	.LASF227
 4699 14f8 06       		.byte	0x6
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 146


 4700 14f9 B7       		.byte	0xb7
 4701 14fa 27       		.uleb128 0x27
 4702 14fb 4B010000 		.4byte	.LASF228
 4703 14ff 4B010000 		.4byte	.LASF228
 4704 1503 06       		.byte	0x6
 4705 1504 B8       		.byte	0xb8
 4706 1505 27       		.uleb128 0x27
 4707 1506 73080000 		.4byte	.LASF229
 4708 150a 73080000 		.4byte	.LASF229
 4709 150e 0A       		.byte	0xa
 4710 150f ED       		.byte	0xed
 4711 1510 27       		.uleb128 0x27
 4712 1511 F2000000 		.4byte	.LASF230
 4713 1515 F2000000 		.4byte	.LASF230
 4714 1519 0A       		.byte	0xa
 4715 151a FA       		.byte	0xfa
 4716 151b 26       		.uleb128 0x26
 4717 151c 46090000 		.4byte	.LASF231
 4718 1520 46090000 		.4byte	.LASF231
 4719 1524 09       		.byte	0x9
 4720 1525 A501     		.2byte	0x1a5
 4721 1527 26       		.uleb128 0x26
 4722 1528 E4060000 		.4byte	.LASF232
 4723 152c E4060000 		.4byte	.LASF232
 4724 1530 09       		.byte	0x9
 4725 1531 A101     		.2byte	0x1a1
 4726 1533 00       		.byte	0
 4727              		.section	.debug_abbrev,"",%progbits
 4728              	.Ldebug_abbrev0:
 4729 0000 01       		.uleb128 0x1
 4730 0001 11       		.uleb128 0x11
 4731 0002 01       		.byte	0x1
 4732 0003 25       		.uleb128 0x25
 4733 0004 0E       		.uleb128 0xe
 4734 0005 13       		.uleb128 0x13
 4735 0006 0B       		.uleb128 0xb
 4736 0007 03       		.uleb128 0x3
 4737 0008 0E       		.uleb128 0xe
 4738 0009 1B       		.uleb128 0x1b
 4739 000a 0E       		.uleb128 0xe
 4740 000b 55       		.uleb128 0x55
 4741 000c 17       		.uleb128 0x17
 4742 000d 11       		.uleb128 0x11
 4743 000e 01       		.uleb128 0x1
 4744 000f 10       		.uleb128 0x10
 4745 0010 17       		.uleb128 0x17
 4746 0011 00       		.byte	0
 4747 0012 00       		.byte	0
 4748 0013 02       		.uleb128 0x2
 4749 0014 24       		.uleb128 0x24
 4750 0015 00       		.byte	0
 4751 0016 0B       		.uleb128 0xb
 4752 0017 0B       		.uleb128 0xb
 4753 0018 3E       		.uleb128 0x3e
 4754 0019 0B       		.uleb128 0xb
 4755 001a 03       		.uleb128 0x3
 4756 001b 0E       		.uleb128 0xe
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 147


 4757 001c 00       		.byte	0
 4758 001d 00       		.byte	0
 4759 001e 03       		.uleb128 0x3
 4760 001f 16       		.uleb128 0x16
 4761 0020 00       		.byte	0
 4762 0021 03       		.uleb128 0x3
 4763 0022 0E       		.uleb128 0xe
 4764 0023 3A       		.uleb128 0x3a
 4765 0024 0B       		.uleb128 0xb
 4766 0025 3B       		.uleb128 0x3b
 4767 0026 0B       		.uleb128 0xb
 4768 0027 49       		.uleb128 0x49
 4769 0028 13       		.uleb128 0x13
 4770 0029 00       		.byte	0
 4771 002a 00       		.byte	0
 4772 002b 04       		.uleb128 0x4
 4773 002c 24       		.uleb128 0x24
 4774 002d 00       		.byte	0
 4775 002e 0B       		.uleb128 0xb
 4776 002f 0B       		.uleb128 0xb
 4777 0030 3E       		.uleb128 0x3e
 4778 0031 0B       		.uleb128 0xb
 4779 0032 03       		.uleb128 0x3
 4780 0033 08       		.uleb128 0x8
 4781 0034 00       		.byte	0
 4782 0035 00       		.byte	0
 4783 0036 05       		.uleb128 0x5
 4784 0037 16       		.uleb128 0x16
 4785 0038 00       		.byte	0
 4786 0039 03       		.uleb128 0x3
 4787 003a 0E       		.uleb128 0xe
 4788 003b 3A       		.uleb128 0x3a
 4789 003c 0B       		.uleb128 0xb
 4790 003d 3B       		.uleb128 0x3b
 4791 003e 05       		.uleb128 0x5
 4792 003f 49       		.uleb128 0x49
 4793 0040 13       		.uleb128 0x13
 4794 0041 00       		.byte	0
 4795 0042 00       		.byte	0
 4796 0043 06       		.uleb128 0x6
 4797 0044 35       		.uleb128 0x35
 4798 0045 00       		.byte	0
 4799 0046 49       		.uleb128 0x49
 4800 0047 13       		.uleb128 0x13
 4801 0048 00       		.byte	0
 4802 0049 00       		.byte	0
 4803 004a 07       		.uleb128 0x7
 4804 004b 0F       		.uleb128 0xf
 4805 004c 00       		.byte	0
 4806 004d 0B       		.uleb128 0xb
 4807 004e 0B       		.uleb128 0xb
 4808 004f 49       		.uleb128 0x49
 4809 0050 13       		.uleb128 0x13
 4810 0051 00       		.byte	0
 4811 0052 00       		.byte	0
 4812 0053 08       		.uleb128 0x8
 4813 0054 15       		.uleb128 0x15
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 148


 4814 0055 00       		.byte	0
 4815 0056 27       		.uleb128 0x27
 4816 0057 19       		.uleb128 0x19
 4817 0058 00       		.byte	0
 4818 0059 00       		.byte	0
 4819 005a 09       		.uleb128 0x9
 4820 005b 13       		.uleb128 0x13
 4821 005c 01       		.byte	0x1
 4822 005d 0B       		.uleb128 0xb
 4823 005e 0B       		.uleb128 0xb
 4824 005f 3A       		.uleb128 0x3a
 4825 0060 0B       		.uleb128 0xb
 4826 0061 3B       		.uleb128 0x3b
 4827 0062 0B       		.uleb128 0xb
 4828 0063 01       		.uleb128 0x1
 4829 0064 13       		.uleb128 0x13
 4830 0065 00       		.byte	0
 4831 0066 00       		.byte	0
 4832 0067 0A       		.uleb128 0xa
 4833 0068 0D       		.uleb128 0xd
 4834 0069 00       		.byte	0
 4835 006a 03       		.uleb128 0x3
 4836 006b 0E       		.uleb128 0xe
 4837 006c 3A       		.uleb128 0x3a
 4838 006d 0B       		.uleb128 0xb
 4839 006e 3B       		.uleb128 0x3b
 4840 006f 0B       		.uleb128 0xb
 4841 0070 49       		.uleb128 0x49
 4842 0071 13       		.uleb128 0x13
 4843 0072 38       		.uleb128 0x38
 4844 0073 0B       		.uleb128 0xb
 4845 0074 00       		.byte	0
 4846 0075 00       		.byte	0
 4847 0076 0B       		.uleb128 0xb
 4848 0077 04       		.uleb128 0x4
 4849 0078 01       		.byte	0x1
 4850 0079 0B       		.uleb128 0xb
 4851 007a 0B       		.uleb128 0xb
 4852 007b 49       		.uleb128 0x49
 4853 007c 13       		.uleb128 0x13
 4854 007d 3A       		.uleb128 0x3a
 4855 007e 0B       		.uleb128 0xb
 4856 007f 3B       		.uleb128 0x3b
 4857 0080 0B       		.uleb128 0xb
 4858 0081 01       		.uleb128 0x1
 4859 0082 13       		.uleb128 0x13
 4860 0083 00       		.byte	0
 4861 0084 00       		.byte	0
 4862 0085 0C       		.uleb128 0xc
 4863 0086 28       		.uleb128 0x28
 4864 0087 00       		.byte	0
 4865 0088 03       		.uleb128 0x3
 4866 0089 0E       		.uleb128 0xe
 4867 008a 1C       		.uleb128 0x1c
 4868 008b 0B       		.uleb128 0xb
 4869 008c 00       		.byte	0
 4870 008d 00       		.byte	0
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 149


 4871 008e 0D       		.uleb128 0xd
 4872 008f 01       		.uleb128 0x1
 4873 0090 01       		.byte	0x1
 4874 0091 49       		.uleb128 0x49
 4875 0092 13       		.uleb128 0x13
 4876 0093 01       		.uleb128 0x1
 4877 0094 13       		.uleb128 0x13
 4878 0095 00       		.byte	0
 4879 0096 00       		.byte	0
 4880 0097 0E       		.uleb128 0xe
 4881 0098 21       		.uleb128 0x21
 4882 0099 00       		.byte	0
 4883 009a 49       		.uleb128 0x49
 4884 009b 13       		.uleb128 0x13
 4885 009c 2F       		.uleb128 0x2f
 4886 009d 0B       		.uleb128 0xb
 4887 009e 00       		.byte	0
 4888 009f 00       		.byte	0
 4889 00a0 0F       		.uleb128 0xf
 4890 00a1 0D       		.uleb128 0xd
 4891 00a2 00       		.byte	0
 4892 00a3 03       		.uleb128 0x3
 4893 00a4 0E       		.uleb128 0xe
 4894 00a5 3A       		.uleb128 0x3a
 4895 00a6 0B       		.uleb128 0xb
 4896 00a7 3B       		.uleb128 0x3b
 4897 00a8 05       		.uleb128 0x5
 4898 00a9 49       		.uleb128 0x49
 4899 00aa 13       		.uleb128 0x13
 4900 00ab 38       		.uleb128 0x38
 4901 00ac 0B       		.uleb128 0xb
 4902 00ad 00       		.byte	0
 4903 00ae 00       		.byte	0
 4904 00af 10       		.uleb128 0x10
 4905 00b0 13       		.uleb128 0x13
 4906 00b1 01       		.byte	0x1
 4907 00b2 0B       		.uleb128 0xb
 4908 00b3 0B       		.uleb128 0xb
 4909 00b4 3A       		.uleb128 0x3a
 4910 00b5 0B       		.uleb128 0xb
 4911 00b6 3B       		.uleb128 0x3b
 4912 00b7 05       		.uleb128 0x5
 4913 00b8 01       		.uleb128 0x1
 4914 00b9 13       		.uleb128 0x13
 4915 00ba 00       		.byte	0
 4916 00bb 00       		.byte	0
 4917 00bc 11       		.uleb128 0x11
 4918 00bd 0D       		.uleb128 0xd
 4919 00be 00       		.byte	0
 4920 00bf 03       		.uleb128 0x3
 4921 00c0 08       		.uleb128 0x8
 4922 00c1 3A       		.uleb128 0x3a
 4923 00c2 0B       		.uleb128 0xb
 4924 00c3 3B       		.uleb128 0x3b
 4925 00c4 05       		.uleb128 0x5
 4926 00c5 49       		.uleb128 0x49
 4927 00c6 13       		.uleb128 0x13
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 150


 4928 00c7 38       		.uleb128 0x38
 4929 00c8 0B       		.uleb128 0xb
 4930 00c9 00       		.byte	0
 4931 00ca 00       		.byte	0
 4932 00cb 12       		.uleb128 0x12
 4933 00cc 26       		.uleb128 0x26
 4934 00cd 00       		.byte	0
 4935 00ce 00       		.byte	0
 4936 00cf 00       		.byte	0
 4937 00d0 13       		.uleb128 0x13
 4938 00d1 0F       		.uleb128 0xf
 4939 00d2 00       		.byte	0
 4940 00d3 0B       		.uleb128 0xb
 4941 00d4 0B       		.uleb128 0xb
 4942 00d5 00       		.byte	0
 4943 00d6 00       		.byte	0
 4944 00d7 14       		.uleb128 0x14
 4945 00d8 2E       		.uleb128 0x2e
 4946 00d9 01       		.byte	0x1
 4947 00da 03       		.uleb128 0x3
 4948 00db 0E       		.uleb128 0xe
 4949 00dc 3A       		.uleb128 0x3a
 4950 00dd 0B       		.uleb128 0xb
 4951 00de 3B       		.uleb128 0x3b
 4952 00df 05       		.uleb128 0x5
 4953 00e0 27       		.uleb128 0x27
 4954 00e1 19       		.uleb128 0x19
 4955 00e2 49       		.uleb128 0x49
 4956 00e3 13       		.uleb128 0x13
 4957 00e4 11       		.uleb128 0x11
 4958 00e5 01       		.uleb128 0x1
 4959 00e6 12       		.uleb128 0x12
 4960 00e7 06       		.uleb128 0x6
 4961 00e8 40       		.uleb128 0x40
 4962 00e9 18       		.uleb128 0x18
 4963 00ea 9642     		.uleb128 0x2116
 4964 00ec 19       		.uleb128 0x19
 4965 00ed 01       		.uleb128 0x1
 4966 00ee 13       		.uleb128 0x13
 4967 00ef 00       		.byte	0
 4968 00f0 00       		.byte	0
 4969 00f1 15       		.uleb128 0x15
 4970 00f2 05       		.uleb128 0x5
 4971 00f3 00       		.byte	0
 4972 00f4 03       		.uleb128 0x3
 4973 00f5 0E       		.uleb128 0xe
 4974 00f6 3A       		.uleb128 0x3a
 4975 00f7 0B       		.uleb128 0xb
 4976 00f8 3B       		.uleb128 0x3b
 4977 00f9 05       		.uleb128 0x5
 4978 00fa 49       		.uleb128 0x49
 4979 00fb 13       		.uleb128 0x13
 4980 00fc 02       		.uleb128 0x2
 4981 00fd 17       		.uleb128 0x17
 4982 00fe 00       		.byte	0
 4983 00ff 00       		.byte	0
 4984 0100 16       		.uleb128 0x16
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 151


 4985 0101 34       		.uleb128 0x34
 4986 0102 00       		.byte	0
 4987 0103 03       		.uleb128 0x3
 4988 0104 0E       		.uleb128 0xe
 4989 0105 3A       		.uleb128 0x3a
 4990 0106 0B       		.uleb128 0xb
 4991 0107 3B       		.uleb128 0x3b
 4992 0108 05       		.uleb128 0x5
 4993 0109 49       		.uleb128 0x49
 4994 010a 13       		.uleb128 0x13
 4995 010b 02       		.uleb128 0x2
 4996 010c 17       		.uleb128 0x17
 4997 010d 00       		.byte	0
 4998 010e 00       		.byte	0
 4999 010f 17       		.uleb128 0x17
 5000 0110 2E       		.uleb128 0x2e
 5001 0111 00       		.byte	0
 5002 0112 3F       		.uleb128 0x3f
 5003 0113 19       		.uleb128 0x19
 5004 0114 03       		.uleb128 0x3
 5005 0115 0E       		.uleb128 0xe
 5006 0116 3A       		.uleb128 0x3a
 5007 0117 0B       		.uleb128 0xb
 5008 0118 3B       		.uleb128 0x3b
 5009 0119 0B       		.uleb128 0xb
 5010 011a 27       		.uleb128 0x27
 5011 011b 19       		.uleb128 0x19
 5012 011c 49       		.uleb128 0x49
 5013 011d 13       		.uleb128 0x13
 5014 011e 11       		.uleb128 0x11
 5015 011f 01       		.uleb128 0x1
 5016 0120 12       		.uleb128 0x12
 5017 0121 06       		.uleb128 0x6
 5018 0122 40       		.uleb128 0x40
 5019 0123 18       		.uleb128 0x18
 5020 0124 9742     		.uleb128 0x2117
 5021 0126 19       		.uleb128 0x19
 5022 0127 00       		.byte	0
 5023 0128 00       		.byte	0
 5024 0129 18       		.uleb128 0x18
 5025 012a 2E       		.uleb128 0x2e
 5026 012b 01       		.byte	0x1
 5027 012c 3F       		.uleb128 0x3f
 5028 012d 19       		.uleb128 0x19
 5029 012e 03       		.uleb128 0x3
 5030 012f 0E       		.uleb128 0xe
 5031 0130 3A       		.uleb128 0x3a
 5032 0131 0B       		.uleb128 0xb
 5033 0132 3B       		.uleb128 0x3b
 5034 0133 05       		.uleb128 0x5
 5035 0134 27       		.uleb128 0x27
 5036 0135 19       		.uleb128 0x19
 5037 0136 49       		.uleb128 0x49
 5038 0137 13       		.uleb128 0x13
 5039 0138 11       		.uleb128 0x11
 5040 0139 01       		.uleb128 0x1
 5041 013a 12       		.uleb128 0x12
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 152


 5042 013b 06       		.uleb128 0x6
 5043 013c 40       		.uleb128 0x40
 5044 013d 18       		.uleb128 0x18
 5045 013e 9742     		.uleb128 0x2117
 5046 0140 19       		.uleb128 0x19
 5047 0141 01       		.uleb128 0x1
 5048 0142 13       		.uleb128 0x13
 5049 0143 00       		.byte	0
 5050 0144 00       		.byte	0
 5051 0145 19       		.uleb128 0x19
 5052 0146 898201   		.uleb128 0x4109
 5053 0149 00       		.byte	0
 5054 014a 11       		.uleb128 0x11
 5055 014b 01       		.uleb128 0x1
 5056 014c 31       		.uleb128 0x31
 5057 014d 13       		.uleb128 0x13
 5058 014e 00       		.byte	0
 5059 014f 00       		.byte	0
 5060 0150 1A       		.uleb128 0x1a
 5061 0151 898201   		.uleb128 0x4109
 5062 0154 01       		.byte	0x1
 5063 0155 11       		.uleb128 0x11
 5064 0156 01       		.uleb128 0x1
 5065 0157 31       		.uleb128 0x31
 5066 0158 13       		.uleb128 0x13
 5067 0159 01       		.uleb128 0x1
 5068 015a 13       		.uleb128 0x13
 5069 015b 00       		.byte	0
 5070 015c 00       		.byte	0
 5071 015d 1B       		.uleb128 0x1b
 5072 015e 8A8201   		.uleb128 0x410a
 5073 0161 00       		.byte	0
 5074 0162 02       		.uleb128 0x2
 5075 0163 18       		.uleb128 0x18
 5076 0164 9142     		.uleb128 0x2111
 5077 0166 18       		.uleb128 0x18
 5078 0167 00       		.byte	0
 5079 0168 00       		.byte	0
 5080 0169 1C       		.uleb128 0x1c
 5081 016a 2E       		.uleb128 0x2e
 5082 016b 01       		.byte	0x1
 5083 016c 3F       		.uleb128 0x3f
 5084 016d 19       		.uleb128 0x19
 5085 016e 03       		.uleb128 0x3
 5086 016f 0E       		.uleb128 0xe
 5087 0170 3A       		.uleb128 0x3a
 5088 0171 0B       		.uleb128 0xb
 5089 0172 3B       		.uleb128 0x3b
 5090 0173 05       		.uleb128 0x5
 5091 0174 27       		.uleb128 0x27
 5092 0175 19       		.uleb128 0x19
 5093 0176 11       		.uleb128 0x11
 5094 0177 01       		.uleb128 0x1
 5095 0178 12       		.uleb128 0x12
 5096 0179 06       		.uleb128 0x6
 5097 017a 40       		.uleb128 0x40
 5098 017b 18       		.uleb128 0x18
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 153


 5099 017c 9742     		.uleb128 0x2117
 5100 017e 19       		.uleb128 0x19
 5101 017f 01       		.uleb128 0x1
 5102 0180 13       		.uleb128 0x13
 5103 0181 00       		.byte	0
 5104 0182 00       		.byte	0
 5105 0183 1D       		.uleb128 0x1d
 5106 0184 34       		.uleb128 0x34
 5107 0185 00       		.byte	0
 5108 0186 03       		.uleb128 0x3
 5109 0187 0E       		.uleb128 0xe
 5110 0188 3A       		.uleb128 0x3a
 5111 0189 0B       		.uleb128 0xb
 5112 018a 3B       		.uleb128 0x3b
 5113 018b 05       		.uleb128 0x5
 5114 018c 49       		.uleb128 0x49
 5115 018d 13       		.uleb128 0x13
 5116 018e 1C       		.uleb128 0x1c
 5117 018f 0B       		.uleb128 0xb
 5118 0190 00       		.byte	0
 5119 0191 00       		.byte	0
 5120 0192 1E       		.uleb128 0x1e
 5121 0193 898201   		.uleb128 0x4109
 5122 0196 01       		.byte	0x1
 5123 0197 11       		.uleb128 0x11
 5124 0198 01       		.uleb128 0x1
 5125 0199 31       		.uleb128 0x31
 5126 019a 13       		.uleb128 0x13
 5127 019b 00       		.byte	0
 5128 019c 00       		.byte	0
 5129 019d 1F       		.uleb128 0x1f
 5130 019e 26       		.uleb128 0x26
 5131 019f 00       		.byte	0
 5132 01a0 49       		.uleb128 0x49
 5133 01a1 13       		.uleb128 0x13
 5134 01a2 00       		.byte	0
 5135 01a3 00       		.byte	0
 5136 01a4 20       		.uleb128 0x20
 5137 01a5 34       		.uleb128 0x34
 5138 01a6 00       		.byte	0
 5139 01a7 03       		.uleb128 0x3
 5140 01a8 0E       		.uleb128 0xe
 5141 01a9 3A       		.uleb128 0x3a
 5142 01aa 0B       		.uleb128 0xb
 5143 01ab 3B       		.uleb128 0x3b
 5144 01ac 05       		.uleb128 0x5
 5145 01ad 49       		.uleb128 0x49
 5146 01ae 13       		.uleb128 0x13
 5147 01af 02       		.uleb128 0x2
 5148 01b0 18       		.uleb128 0x18
 5149 01b1 00       		.byte	0
 5150 01b2 00       		.byte	0
 5151 01b3 21       		.uleb128 0x21
 5152 01b4 05       		.uleb128 0x5
 5153 01b5 00       		.byte	0
 5154 01b6 03       		.uleb128 0x3
 5155 01b7 0E       		.uleb128 0xe
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 154


 5156 01b8 3A       		.uleb128 0x3a
 5157 01b9 0B       		.uleb128 0xb
 5158 01ba 3B       		.uleb128 0x3b
 5159 01bb 05       		.uleb128 0x5
 5160 01bc 49       		.uleb128 0x49
 5161 01bd 13       		.uleb128 0x13
 5162 01be 02       		.uleb128 0x2
 5163 01bf 18       		.uleb128 0x18
 5164 01c0 00       		.byte	0
 5165 01c1 00       		.byte	0
 5166 01c2 22       		.uleb128 0x22
 5167 01c3 2E       		.uleb128 0x2e
 5168 01c4 01       		.byte	0x1
 5169 01c5 03       		.uleb128 0x3
 5170 01c6 0E       		.uleb128 0xe
 5171 01c7 3A       		.uleb128 0x3a
 5172 01c8 0B       		.uleb128 0xb
 5173 01c9 3B       		.uleb128 0x3b
 5174 01ca 05       		.uleb128 0x5
 5175 01cb 27       		.uleb128 0x27
 5176 01cc 19       		.uleb128 0x19
 5177 01cd 11       		.uleb128 0x11
 5178 01ce 01       		.uleb128 0x1
 5179 01cf 12       		.uleb128 0x12
 5180 01d0 06       		.uleb128 0x6
 5181 01d1 40       		.uleb128 0x40
 5182 01d2 18       		.uleb128 0x18
 5183 01d3 9742     		.uleb128 0x2117
 5184 01d5 19       		.uleb128 0x19
 5185 01d6 01       		.uleb128 0x1
 5186 01d7 13       		.uleb128 0x13
 5187 01d8 00       		.byte	0
 5188 01d9 00       		.byte	0
 5189 01da 23       		.uleb128 0x23
 5190 01db 2E       		.uleb128 0x2e
 5191 01dc 01       		.byte	0x1
 5192 01dd 3F       		.uleb128 0x3f
 5193 01de 19       		.uleb128 0x19
 5194 01df 03       		.uleb128 0x3
 5195 01e0 0E       		.uleb128 0xe
 5196 01e1 3A       		.uleb128 0x3a
 5197 01e2 0B       		.uleb128 0xb
 5198 01e3 3B       		.uleb128 0x3b
 5199 01e4 05       		.uleb128 0x5
 5200 01e5 27       		.uleb128 0x27
 5201 01e6 19       		.uleb128 0x19
 5202 01e7 49       		.uleb128 0x49
 5203 01e8 13       		.uleb128 0x13
 5204 01e9 11       		.uleb128 0x11
 5205 01ea 01       		.uleb128 0x1
 5206 01eb 12       		.uleb128 0x12
 5207 01ec 06       		.uleb128 0x6
 5208 01ed 40       		.uleb128 0x40
 5209 01ee 18       		.uleb128 0x18
 5210 01ef 9642     		.uleb128 0x2116
 5211 01f1 19       		.uleb128 0x19
 5212 01f2 01       		.uleb128 0x1
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 155


 5213 01f3 13       		.uleb128 0x13
 5214 01f4 00       		.byte	0
 5215 01f5 00       		.byte	0
 5216 01f6 24       		.uleb128 0x24
 5217 01f7 34       		.uleb128 0x34
 5218 01f8 00       		.byte	0
 5219 01f9 03       		.uleb128 0x3
 5220 01fa 0E       		.uleb128 0xe
 5221 01fb 3A       		.uleb128 0x3a
 5222 01fc 0B       		.uleb128 0xb
 5223 01fd 3B       		.uleb128 0x3b
 5224 01fe 05       		.uleb128 0x5
 5225 01ff 49       		.uleb128 0x49
 5226 0200 13       		.uleb128 0x13
 5227 0201 3F       		.uleb128 0x3f
 5228 0202 19       		.uleb128 0x19
 5229 0203 3C       		.uleb128 0x3c
 5230 0204 19       		.uleb128 0x19
 5231 0205 00       		.byte	0
 5232 0206 00       		.byte	0
 5233 0207 25       		.uleb128 0x25
 5234 0208 34       		.uleb128 0x34
 5235 0209 00       		.byte	0
 5236 020a 03       		.uleb128 0x3
 5237 020b 0E       		.uleb128 0xe
 5238 020c 3A       		.uleb128 0x3a
 5239 020d 0B       		.uleb128 0xb
 5240 020e 3B       		.uleb128 0x3b
 5241 020f 0B       		.uleb128 0xb
 5242 0210 49       		.uleb128 0x49
 5243 0211 13       		.uleb128 0x13
 5244 0212 3F       		.uleb128 0x3f
 5245 0213 19       		.uleb128 0x19
 5246 0214 02       		.uleb128 0x2
 5247 0215 18       		.uleb128 0x18
 5248 0216 00       		.byte	0
 5249 0217 00       		.byte	0
 5250 0218 26       		.uleb128 0x26
 5251 0219 2E       		.uleb128 0x2e
 5252 021a 00       		.byte	0
 5253 021b 3F       		.uleb128 0x3f
 5254 021c 19       		.uleb128 0x19
 5255 021d 3C       		.uleb128 0x3c
 5256 021e 19       		.uleb128 0x19
 5257 021f 6E       		.uleb128 0x6e
 5258 0220 0E       		.uleb128 0xe
 5259 0221 03       		.uleb128 0x3
 5260 0222 0E       		.uleb128 0xe
 5261 0223 3A       		.uleb128 0x3a
 5262 0224 0B       		.uleb128 0xb
 5263 0225 3B       		.uleb128 0x3b
 5264 0226 05       		.uleb128 0x5
 5265 0227 00       		.byte	0
 5266 0228 00       		.byte	0
 5267 0229 27       		.uleb128 0x27
 5268 022a 2E       		.uleb128 0x2e
 5269 022b 00       		.byte	0
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 156


 5270 022c 3F       		.uleb128 0x3f
 5271 022d 19       		.uleb128 0x19
 5272 022e 3C       		.uleb128 0x3c
 5273 022f 19       		.uleb128 0x19
 5274 0230 6E       		.uleb128 0x6e
 5275 0231 0E       		.uleb128 0xe
 5276 0232 03       		.uleb128 0x3
 5277 0233 0E       		.uleb128 0xe
 5278 0234 3A       		.uleb128 0x3a
 5279 0235 0B       		.uleb128 0xb
 5280 0236 3B       		.uleb128 0x3b
 5281 0237 0B       		.uleb128 0xb
 5282 0238 00       		.byte	0
 5283 0239 00       		.byte	0
 5284 023a 00       		.byte	0
 5285              		.section	.debug_loc,"",%progbits
 5286              	.Ldebug_loc0:
 5287              	.LLST0:
 5288 0000 00000000 		.4byte	.LVL0
 5289 0004 14000000 		.4byte	.LVL3
 5290 0008 0100     		.2byte	0x1
 5291 000a 50       		.byte	0x50
 5292 000b 14000000 		.4byte	.LVL3
 5293 000f 76000000 		.4byte	.LVL9
 5294 0013 0100     		.2byte	0x1
 5295 0015 54       		.byte	0x54
 5296 0016 76000000 		.4byte	.LVL9
 5297 001a 84000000 		.4byte	.LFE23
 5298 001e 0400     		.2byte	0x4
 5299 0020 F3       		.byte	0xf3
 5300 0021 01       		.uleb128 0x1
 5301 0022 50       		.byte	0x50
 5302 0023 9F       		.byte	0x9f
 5303 0024 00000000 		.4byte	0
 5304 0028 00000000 		.4byte	0
 5305              	.LLST1:
 5306 002c 00000000 		.4byte	.LVL0
 5307 0030 12000000 		.4byte	.LVL2
 5308 0034 0100     		.2byte	0x1
 5309 0036 51       		.byte	0x51
 5310 0037 12000000 		.4byte	.LVL2
 5311 003b 76000000 		.4byte	.LVL10
 5312 003f 0100     		.2byte	0x1
 5313 0041 55       		.byte	0x55
 5314 0042 76000000 		.4byte	.LVL10
 5315 0046 84000000 		.4byte	.LFE23
 5316 004a 0400     		.2byte	0x4
 5317 004c F3       		.byte	0xf3
 5318 004d 01       		.uleb128 0x1
 5319 004e 51       		.byte	0x51
 5320 004f 9F       		.byte	0x9f
 5321 0050 00000000 		.4byte	0
 5322 0054 00000000 		.4byte	0
 5323              	.LLST2:
 5324 0058 06000000 		.4byte	.LVL1
 5325 005c 76000000 		.4byte	.LVL8
 5326 0060 0200     		.2byte	0x2
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 157


 5327 0062 30       		.byte	0x30
 5328 0063 9F       		.byte	0x9f
 5329 0064 76000000 		.4byte	.LVL8
 5330 0068 84000000 		.4byte	.LFE23
 5331 006c 0100     		.2byte	0x1
 5332 006e 50       		.byte	0x50
 5333 006f 00000000 		.4byte	0
 5334 0073 00000000 		.4byte	0
 5335              	.LLST3:
 5336 0077 00000000 		.4byte	.LVL11
 5337 007b 20000000 		.4byte	.LVL15
 5338 007f 0100     		.2byte	0x1
 5339 0081 50       		.byte	0x50
 5340 0082 20000000 		.4byte	.LVL15
 5341 0086 23000000 		.4byte	.LVL16-1
 5342 008a 0100     		.2byte	0x1
 5343 008c 51       		.byte	0x51
 5344 008d 23000000 		.4byte	.LVL16-1
 5345 0091 38000000 		.4byte	.LVL21
 5346 0095 0400     		.2byte	0x4
 5347 0097 F3       		.byte	0xf3
 5348 0098 01       		.uleb128 0x1
 5349 0099 50       		.byte	0x50
 5350 009a 9F       		.byte	0x9f
 5351 009b 38000000 		.4byte	.LVL21
 5352 009f 3E000000 		.4byte	.LVL24
 5353 00a3 0100     		.2byte	0x1
 5354 00a5 50       		.byte	0x50
 5355 00a6 3E000000 		.4byte	.LVL24
 5356 00aa 42000000 		.4byte	.LFE24
 5357 00ae 0400     		.2byte	0x4
 5358 00b0 F3       		.byte	0xf3
 5359 00b1 01       		.uleb128 0x1
 5360 00b2 50       		.byte	0x50
 5361 00b3 9F       		.byte	0x9f
 5362 00b4 00000000 		.4byte	0
 5363 00b8 00000000 		.4byte	0
 5364              	.LLST4:
 5365 00bc 00000000 		.4byte	.LVL11
 5366 00c0 1E000000 		.4byte	.LVL14
 5367 00c4 0100     		.2byte	0x1
 5368 00c6 51       		.byte	0x51
 5369 00c7 1E000000 		.4byte	.LVL14
 5370 00cb 38000000 		.4byte	.LVL21
 5371 00cf 0400     		.2byte	0x4
 5372 00d1 F3       		.byte	0xf3
 5373 00d2 01       		.uleb128 0x1
 5374 00d3 51       		.byte	0x51
 5375 00d4 9F       		.byte	0x9f
 5376 00d5 38000000 		.4byte	.LVL21
 5377 00d9 3E000000 		.4byte	.LVL24
 5378 00dd 0100     		.2byte	0x1
 5379 00df 51       		.byte	0x51
 5380 00e0 3E000000 		.4byte	.LVL24
 5381 00e4 42000000 		.4byte	.LFE24
 5382 00e8 0400     		.2byte	0x4
 5383 00ea F3       		.byte	0xf3
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 158


 5384 00eb 01       		.uleb128 0x1
 5385 00ec 51       		.byte	0x51
 5386 00ed 9F       		.byte	0x9f
 5387 00ee 00000000 		.4byte	0
 5388 00f2 00000000 		.4byte	0
 5389              	.LLST5:
 5390 00f6 24000000 		.4byte	.LVL16
 5391 00fa 28000000 		.4byte	.LVL17
 5392 00fe 0200     		.2byte	0x2
 5393 0100 30       		.byte	0x30
 5394 0101 9F       		.byte	0x9f
 5395 0102 28000000 		.4byte	.LVL17
 5396 0106 38000000 		.4byte	.LVL21
 5397 010a 0100     		.2byte	0x1
 5398 010c 53       		.byte	0x53
 5399 010d 3E000000 		.4byte	.LVL24
 5400 0111 42000000 		.4byte	.LFE24
 5401 0115 0100     		.2byte	0x1
 5402 0117 53       		.byte	0x53
 5403 0118 00000000 		.4byte	0
 5404 011c 00000000 		.4byte	0
 5405              	.LLST6:
 5406 0120 10000000 		.4byte	.LVL12
 5407 0124 1C000000 		.4byte	.LVL13
 5408 0128 0100     		.2byte	0x1
 5409 012a 53       		.byte	0x53
 5410 012b 38000000 		.4byte	.LVL21
 5411 012f 3A000000 		.4byte	.LVL22
 5412 0133 0100     		.2byte	0x1
 5413 0135 53       		.byte	0x53
 5414 0136 3C000000 		.4byte	.LVL23
 5415 013a 3E000000 		.4byte	.LVL24
 5416 013e 0100     		.2byte	0x1
 5417 0140 53       		.byte	0x53
 5418 0141 00000000 		.4byte	0
 5419 0145 00000000 		.4byte	0
 5420              	.LLST7:
 5421 0149 24000000 		.4byte	.LVL16
 5422 014d 38000000 		.4byte	.LVL21
 5423 0151 0100     		.2byte	0x1
 5424 0153 50       		.byte	0x50
 5425 0154 00000000 		.4byte	0
 5426 0158 00000000 		.4byte	0
 5427              	.LLST8:
 5428 015c 00000000 		.4byte	.LVL25
 5429 0160 37000000 		.4byte	.LVL27-1
 5430 0164 0100     		.2byte	0x1
 5431 0166 50       		.byte	0x50
 5432 0167 37000000 		.4byte	.LVL27-1
 5433 016b 40000000 		.4byte	.LFE2
 5434 016f 0400     		.2byte	0x4
 5435 0171 F3       		.byte	0xf3
 5436 0172 01       		.uleb128 0x1
 5437 0173 50       		.byte	0x50
 5438 0174 9F       		.byte	0x9f
 5439 0175 00000000 		.4byte	0
 5440 0179 00000000 		.4byte	0
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 159


 5441              	.LLST9:
 5442 017d 30000000 		.4byte	.LVL26
 5443 0181 3A000000 		.4byte	.LVL28
 5444 0185 0100     		.2byte	0x1
 5445 0187 54       		.byte	0x54
 5446 0188 3A000000 		.4byte	.LVL28
 5447 018c 40000000 		.4byte	.LFE2
 5448 0190 0100     		.2byte	0x1
 5449 0192 50       		.byte	0x50
 5450 0193 00000000 		.4byte	0
 5451 0197 00000000 		.4byte	0
 5452              	.LLST10:
 5453 019b 02000000 		.4byte	.LVL29
 5454 019f 22000000 		.4byte	.LVL31
 5455 01a3 0200     		.2byte	0x2
 5456 01a5 30       		.byte	0x30
 5457 01a6 9F       		.byte	0x9f
 5458 01a7 22000000 		.4byte	.LVL31
 5459 01ab 2C000000 		.4byte	.LFE3
 5460 01af 0100     		.2byte	0x1
 5461 01b1 50       		.byte	0x50
 5462 01b2 00000000 		.4byte	0
 5463 01b6 00000000 		.4byte	0
 5464              	.LLST11:
 5465 01ba 02000000 		.4byte	.LVL32
 5466 01be 12000000 		.4byte	.LVL33
 5467 01c2 0300     		.2byte	0x3
 5468 01c4 09       		.byte	0x9
 5469 01c5 FF       		.byte	0xff
 5470 01c6 9F       		.byte	0x9f
 5471 01c7 12000000 		.4byte	.LVL33
 5472 01cb 14000000 		.4byte	.LVL34
 5473 01cf 0100     		.2byte	0x1
 5474 01d1 50       		.byte	0x50
 5475 01d2 18000000 		.4byte	.LVL35
 5476 01d6 31000000 		.4byte	.LVL36-1
 5477 01da 0100     		.2byte	0x1
 5478 01dc 50       		.byte	0x50
 5479 01dd 32000000 		.4byte	.LVL36
 5480 01e1 3C000000 		.4byte	.LVL38
 5481 01e5 0100     		.2byte	0x1
 5482 01e7 50       		.byte	0x50
 5483 01e8 3C000000 		.4byte	.LVL38
 5484 01ec 3E000000 		.4byte	.LVL39
 5485 01f0 0300     		.2byte	0x3
 5486 01f2 09       		.byte	0x9
 5487 01f3 FF       		.byte	0xff
 5488 01f4 9F       		.byte	0x9f
 5489 01f5 3E000000 		.4byte	.LVL39
 5490 01f9 48000000 		.4byte	.LFE4
 5491 01fd 0100     		.2byte	0x1
 5492 01ff 50       		.byte	0x50
 5493 0200 00000000 		.4byte	0
 5494 0204 00000000 		.4byte	0
 5495              	.LLST12:
 5496 0208 12000000 		.4byte	.LVL33
 5497 020c 3C000000 		.4byte	.LVL38
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 160


 5498 0210 0100     		.2byte	0x1
 5499 0212 54       		.byte	0x54
 5500 0213 00000000 		.4byte	0
 5501 0217 00000000 		.4byte	0
 5502              	.LLST13:
 5503 021b 00000000 		.4byte	.LVL40
 5504 021f 47000000 		.4byte	.LVL42-1
 5505 0223 0100     		.2byte	0x1
 5506 0225 50       		.byte	0x50
 5507 0226 47000000 		.4byte	.LVL42-1
 5508 022a 54000000 		.4byte	.LFE5
 5509 022e 0400     		.2byte	0x4
 5510 0230 F3       		.byte	0xf3
 5511 0231 01       		.uleb128 0x1
 5512 0232 50       		.byte	0x50
 5513 0233 9F       		.byte	0x9f
 5514 0234 00000000 		.4byte	0
 5515 0238 00000000 		.4byte	0
 5516              	.LLST14:
 5517 023c 00000000 		.4byte	.LVL40
 5518 0240 47000000 		.4byte	.LVL42-1
 5519 0244 0100     		.2byte	0x1
 5520 0246 51       		.byte	0x51
 5521 0247 47000000 		.4byte	.LVL42-1
 5522 024b 54000000 		.4byte	.LFE5
 5523 024f 0400     		.2byte	0x4
 5524 0251 F3       		.byte	0xf3
 5525 0252 01       		.uleb128 0x1
 5526 0253 51       		.byte	0x51
 5527 0254 9F       		.byte	0x9f
 5528 0255 00000000 		.4byte	0
 5529 0259 00000000 		.4byte	0
 5530              	.LLST15:
 5531 025d 40000000 		.4byte	.LVL41
 5532 0261 4A000000 		.4byte	.LVL43
 5533 0265 0100     		.2byte	0x1
 5534 0267 54       		.byte	0x54
 5535 0268 4A000000 		.4byte	.LVL43
 5536 026c 54000000 		.4byte	.LFE5
 5537 0270 0100     		.2byte	0x1
 5538 0272 50       		.byte	0x50
 5539 0273 00000000 		.4byte	0
 5540 0277 00000000 		.4byte	0
 5541              	.LLST16:
 5542 027b 02000000 		.4byte	.LVL44
 5543 027f 22000000 		.4byte	.LVL46
 5544 0283 0200     		.2byte	0x2
 5545 0285 30       		.byte	0x30
 5546 0286 9F       		.byte	0x9f
 5547 0287 22000000 		.4byte	.LVL46
 5548 028b 2C000000 		.4byte	.LFE6
 5549 028f 0100     		.2byte	0x1
 5550 0291 50       		.byte	0x50
 5551 0292 00000000 		.4byte	0
 5552 0296 00000000 		.4byte	0
 5553              	.LLST17:
 5554 029a 00000000 		.4byte	.LVL47
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 161


 5555 029e 06000000 		.4byte	.LVL48
 5556 02a2 0100     		.2byte	0x1
 5557 02a4 50       		.byte	0x50
 5558 02a5 06000000 		.4byte	.LVL48
 5559 02a9 9C000000 		.4byte	.LFE8
 5560 02ad 0400     		.2byte	0x4
 5561 02af F3       		.byte	0xf3
 5562 02b0 01       		.uleb128 0x1
 5563 02b1 50       		.byte	0x50
 5564 02b2 9F       		.byte	0x9f
 5565 02b3 00000000 		.4byte	0
 5566 02b7 00000000 		.4byte	0
 5567              	.LLST18:
 5568 02bb 00000000 		.4byte	.LVL47
 5569 02bf 0E000000 		.4byte	.LVL49
 5570 02c3 0100     		.2byte	0x1
 5571 02c5 51       		.byte	0x51
 5572 02c6 0E000000 		.4byte	.LVL49
 5573 02ca 9C000000 		.4byte	.LFE8
 5574 02ce 0400     		.2byte	0x4
 5575 02d0 F3       		.byte	0xf3
 5576 02d1 01       		.uleb128 0x1
 5577 02d2 51       		.byte	0x51
 5578 02d3 9F       		.byte	0x9f
 5579 02d4 00000000 		.4byte	0
 5580 02d8 00000000 		.4byte	0
 5581              	.LLST19:
 5582 02dc 00000000 		.4byte	.LVL47
 5583 02e0 16000000 		.4byte	.LVL51
 5584 02e4 0100     		.2byte	0x1
 5585 02e6 52       		.byte	0x52
 5586 02e7 16000000 		.4byte	.LVL51
 5587 02eb 94000000 		.4byte	.LVL63
 5588 02ef 0100     		.2byte	0x1
 5589 02f1 56       		.byte	0x56
 5590 02f2 94000000 		.4byte	.LVL63
 5591 02f6 9C000000 		.4byte	.LFE8
 5592 02fa 0400     		.2byte	0x4
 5593 02fc F3       		.byte	0xf3
 5594 02fd 01       		.uleb128 0x1
 5595 02fe 52       		.byte	0x52
 5596 02ff 9F       		.byte	0x9f
 5597 0300 00000000 		.4byte	0
 5598 0304 00000000 		.4byte	0
 5599              	.LLST20:
 5600 0308 12000000 		.4byte	.LVL50
 5601 030c 16000000 		.4byte	.LVL51
 5602 0310 0200     		.2byte	0x2
 5603 0312 30       		.byte	0x30
 5604 0313 9F       		.byte	0x9f
 5605 0314 16000000 		.4byte	.LVL51
 5606 0318 94000000 		.4byte	.LVL62
 5607 031c 0100     		.2byte	0x1
 5608 031e 55       		.byte	0x55
 5609 031f 00000000 		.4byte	0
 5610 0323 00000000 		.4byte	0
 5611              	.LLST21:
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 162


 5612 0327 1A000000 		.4byte	.LVL52
 5613 032b 39000000 		.4byte	.LVL53-1
 5614 032f 0100     		.2byte	0x1
 5615 0331 50       		.byte	0x50
 5616 0332 4C000000 		.4byte	.LVL54
 5617 0336 6B000000 		.4byte	.LVL55-1
 5618 033a 0100     		.2byte	0x1
 5619 033c 50       		.byte	0x50
 5620 033d 72000000 		.4byte	.LVL56
 5621 0341 83000000 		.4byte	.LVL57-1
 5622 0345 0100     		.2byte	0x1
 5623 0347 50       		.byte	0x50
 5624 0348 00000000 		.4byte	0
 5625 034c 00000000 		.4byte	0
 5626              	.LLST22:
 5627 0350 12000000 		.4byte	.LVL50
 5628 0354 94000000 		.4byte	.LVL61
 5629 0358 0100     		.2byte	0x1
 5630 035a 54       		.byte	0x54
 5631 035b 00000000 		.4byte	0
 5632 035f 00000000 		.4byte	0
 5633              	.LLST23:
 5634 0363 00000000 		.4byte	.LVL64
 5635 0367 30000000 		.4byte	.LVL68
 5636 036b 0100     		.2byte	0x1
 5637 036d 50       		.byte	0x50
 5638 036e 30000000 		.4byte	.LVL68
 5639 0372 80000000 		.4byte	.LFE11
 5640 0376 0400     		.2byte	0x4
 5641 0378 F3       		.byte	0xf3
 5642 0379 01       		.uleb128 0x1
 5643 037a 50       		.byte	0x50
 5644 037b 9F       		.byte	0x9f
 5645 037c 00000000 		.4byte	0
 5646 0380 00000000 		.4byte	0
 5647              	.LLST24:
 5648 0384 34000000 		.4byte	.LVL69
 5649 0388 6B000000 		.4byte	.LVL80-1
 5650 038c 0100     		.2byte	0x1
 5651 038e 50       		.byte	0x50
 5652 038f 00000000 		.4byte	0
 5653 0393 00000000 		.4byte	0
 5654              	.LLST25:
 5655 0397 2A000000 		.4byte	.LVL67
 5656 039b 30000000 		.4byte	.LVL68
 5657 039f 0200     		.2byte	0x2
 5658 03a1 30       		.byte	0x30
 5659 03a2 9F       		.byte	0x9f
 5660 03a3 30000000 		.4byte	.LVL68
 5661 03a7 74000000 		.4byte	.LVL84
 5662 03ab 0100     		.2byte	0x1
 5663 03ad 55       		.byte	0x55
 5664 03ae 00000000 		.4byte	0
 5665 03b2 00000000 		.4byte	0
 5666              	.LLST26:
 5667 03b6 1A000000 		.4byte	.LVL65
 5668 03ba 24000000 		.4byte	.LVL66
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 163


 5669 03be 0200     		.2byte	0x2
 5670 03c0 30       		.byte	0x30
 5671 03c1 9F       		.byte	0x9f
 5672 03c2 2A000000 		.4byte	.LVL67
 5673 03c6 74000000 		.4byte	.LVL85
 5674 03ca 0100     		.2byte	0x1
 5675 03cc 58       		.byte	0x58
 5676 03cd 00000000 		.4byte	0
 5677 03d1 00000000 		.4byte	0
 5678              	.LLST27:
 5679 03d5 1A000000 		.4byte	.LVL65
 5680 03d9 24000000 		.4byte	.LVL66
 5681 03dd 0200     		.2byte	0x2
 5682 03df 35       		.byte	0x35
 5683 03e0 9F       		.byte	0x9f
 5684 03e1 2A000000 		.4byte	.LVL67
 5685 03e5 74000000 		.4byte	.LVL86
 5686 03e9 0100     		.2byte	0x1
 5687 03eb 59       		.byte	0x59
 5688 03ec 00000000 		.4byte	0
 5689 03f0 00000000 		.4byte	0
 5690              	.LLST28:
 5691 03f4 42000000 		.4byte	.LVL72
 5692 03f8 54000000 		.4byte	.LVL75
 5693 03fc 0100     		.2byte	0x1
 5694 03fe 52       		.byte	0x52
 5695 03ff 54000000 		.4byte	.LVL75
 5696 0403 5E000000 		.4byte	.LVL77
 5697 0407 0200     		.2byte	0x2
 5698 0409 76       		.byte	0x76
 5699 040a 00       		.sleb128 0
 5700 040b 62000000 		.4byte	.LVL78
 5701 040f 6B000000 		.4byte	.LVL80-1
 5702 0413 0100     		.2byte	0x1
 5703 0415 53       		.byte	0x53
 5704 0416 00000000 		.4byte	0
 5705 041a 00000000 		.4byte	0
 5706              	.LLST29:
 5707 041e 38000000 		.4byte	.LVL70
 5708 0422 62000000 		.4byte	.LVL78
 5709 0426 0100     		.2byte	0x1
 5710 0428 53       		.byte	0x53
 5711 0429 00000000 		.4byte	0
 5712 042d 00000000 		.4byte	0
 5713              	.LLST30:
 5714 0431 30000000 		.4byte	.LVL68
 5715 0435 74000000 		.4byte	.LVL83
 5716 0439 0100     		.2byte	0x1
 5717 043b 54       		.byte	0x54
 5718 043c 00000000 		.4byte	0
 5719 0440 00000000 		.4byte	0
 5720              	.LLST31:
 5721 0444 16000000 		.4byte	.LVL88
 5722 0448 29000000 		.4byte	.LVL89-1
 5723 044c 0100     		.2byte	0x1
 5724 044e 50       		.byte	0x50
 5725 044f 29000000 		.4byte	.LVL89-1
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 164


 5726 0453 2C000000 		.4byte	.LVL90
 5727 0457 0100     		.2byte	0x1
 5728 0459 54       		.byte	0x54
 5729 045a 2C000000 		.4byte	.LVL90
 5730 045e 54000000 		.4byte	.LVL91
 5731 0462 0100     		.2byte	0x1
 5732 0464 50       		.byte	0x50
 5733 0465 54000000 		.4byte	.LVL91
 5734 0469 58000000 		.4byte	.LVL92
 5735 046d 0200     		.2byte	0x2
 5736 046f 30       		.byte	0x30
 5737 0470 9F       		.byte	0x9f
 5738 0471 58000000 		.4byte	.LVL92
 5739 0475 6A000000 		.4byte	.LVL93
 5740 0479 0100     		.2byte	0x1
 5741 047b 50       		.byte	0x50
 5742 047c 6A000000 		.4byte	.LVL93
 5743 0480 6E000000 		.4byte	.LVL94
 5744 0484 0100     		.2byte	0x1
 5745 0486 54       		.byte	0x54
 5746 0487 00000000 		.4byte	0
 5747 048b 00000000 		.4byte	0
 5748              	.LLST32:
 5749 048f 00000000 		.4byte	.LVL95
 5750 0493 05000000 		.4byte	.LVL96-1
 5751 0497 0100     		.2byte	0x1
 5752 0499 50       		.byte	0x50
 5753 049a 05000000 		.4byte	.LVL96-1
 5754 049e 08000000 		.4byte	.LFE13
 5755 04a2 0400     		.2byte	0x4
 5756 04a4 F3       		.byte	0xf3
 5757 04a5 01       		.uleb128 0x1
 5758 04a6 50       		.byte	0x50
 5759 04a7 9F       		.byte	0x9f
 5760 04a8 00000000 		.4byte	0
 5761 04ac 00000000 		.4byte	0
 5762              	.LLST33:
 5763 04b0 00000000 		.4byte	.LVL97
 5764 04b4 08000000 		.4byte	.LVL98
 5765 04b8 0100     		.2byte	0x1
 5766 04ba 50       		.byte	0x50
 5767 04bb 08000000 		.4byte	.LVL98
 5768 04bf 0A000000 		.4byte	.LVL99
 5769 04c3 0300     		.2byte	0x3
 5770 04c5 70       		.byte	0x70
 5771 04c6 01       		.sleb128 1
 5772 04c7 9F       		.byte	0x9f
 5773 04c8 0A000000 		.4byte	.LVL99
 5774 04cc 30000000 		.4byte	.LFE14
 5775 04d0 0400     		.2byte	0x4
 5776 04d2 F3       		.byte	0xf3
 5777 04d3 01       		.uleb128 0x1
 5778 04d4 50       		.byte	0x50
 5779 04d5 9F       		.byte	0x9f
 5780 04d6 00000000 		.4byte	0
 5781 04da 00000000 		.4byte	0
 5782              	.LLST34:
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 165


 5783 04de 00000000 		.4byte	.LVL100
 5784 04e2 0A000000 		.4byte	.LVL104
 5785 04e6 0100     		.2byte	0x1
 5786 04e8 50       		.byte	0x50
 5787 04e9 0A000000 		.4byte	.LVL104
 5788 04ed 0C000000 		.4byte	.LVL105
 5789 04f1 0300     		.2byte	0x3
 5790 04f3 70       		.byte	0x70
 5791 04f4 01       		.sleb128 1
 5792 04f5 9F       		.byte	0x9f
 5793 04f6 0C000000 		.4byte	.LVL105
 5794 04fa 14000000 		.4byte	.LFE15
 5795 04fe 0400     		.2byte	0x4
 5796 0500 F3       		.byte	0xf3
 5797 0501 01       		.uleb128 0x1
 5798 0502 50       		.byte	0x50
 5799 0503 9F       		.byte	0x9f
 5800 0504 00000000 		.4byte	0
 5801 0508 00000000 		.4byte	0
 5802              	.LLST35:
 5803 050c 04000000 		.4byte	.LVL101
 5804 0510 06000000 		.4byte	.LVL102
 5805 0514 0100     		.2byte	0x1
 5806 0516 53       		.byte	0x53
 5807 0517 08000000 		.4byte	.LVL103
 5808 051b 0C000000 		.4byte	.LVL105
 5809 051f 0100     		.2byte	0x1
 5810 0521 53       		.byte	0x53
 5811 0522 0C000000 		.4byte	.LVL105
 5812 0526 14000000 		.4byte	.LFE15
 5813 052a 0100     		.2byte	0x1
 5814 052c 50       		.byte	0x50
 5815 052d 00000000 		.4byte	0
 5816 0531 00000000 		.4byte	0
 5817              	.LLST36:
 5818 0535 00000000 		.4byte	.LVL106
 5819 0539 06000000 		.4byte	.LVL107
 5820 053d 0100     		.2byte	0x1
 5821 053f 50       		.byte	0x50
 5822 0540 06000000 		.4byte	.LVL107
 5823 0544 10000000 		.4byte	.LVL110
 5824 0548 0100     		.2byte	0x1
 5825 054a 54       		.byte	0x54
 5826 054b 10000000 		.4byte	.LVL110
 5827 054f 12000000 		.4byte	.LFE16
 5828 0553 0400     		.2byte	0x4
 5829 0555 F3       		.byte	0xf3
 5830 0556 01       		.uleb128 0x1
 5831 0557 50       		.byte	0x50
 5832 0558 9F       		.byte	0x9f
 5833 0559 00000000 		.4byte	0
 5834 055d 00000000 		.4byte	0
 5835              	.LLST37:
 5836 0561 00000000 		.4byte	.LVL106
 5837 0565 09000000 		.4byte	.LVL108-1
 5838 0569 0100     		.2byte	0x1
 5839 056b 51       		.byte	0x51
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 166


 5840 056c 09000000 		.4byte	.LVL108-1
 5841 0570 12000000 		.4byte	.LFE16
 5842 0574 0400     		.2byte	0x4
 5843 0576 F3       		.byte	0xf3
 5844 0577 01       		.uleb128 0x1
 5845 0578 51       		.byte	0x51
 5846 0579 9F       		.byte	0x9f
 5847 057a 00000000 		.4byte	0
 5848 057e 00000000 		.4byte	0
 5849              	.LLST38:
 5850 0582 00000000 		.4byte	.LVL111
 5851 0586 0A000000 		.4byte	.LVL113
 5852 058a 0100     		.2byte	0x1
 5853 058c 50       		.byte	0x50
 5854 058d 0A000000 		.4byte	.LVL113
 5855 0591 0C000000 		.4byte	.LVL114
 5856 0595 0100     		.2byte	0x1
 5857 0597 53       		.byte	0x53
 5858 0598 0C000000 		.4byte	.LVL114
 5859 059c 0E000000 		.4byte	.LVL115
 5860 05a0 0100     		.2byte	0x1
 5861 05a2 50       		.byte	0x50
 5862 05a3 0E000000 		.4byte	.LVL115
 5863 05a7 19000000 		.4byte	.LVL117-1
 5864 05ab 0100     		.2byte	0x1
 5865 05ad 53       		.byte	0x53
 5866 05ae 19000000 		.4byte	.LVL117-1
 5867 05b2 1C000000 		.4byte	.LFE17
 5868 05b6 0400     		.2byte	0x4
 5869 05b8 F3       		.byte	0xf3
 5870 05b9 01       		.uleb128 0x1
 5871 05ba 50       		.byte	0x50
 5872 05bb 9F       		.byte	0x9f
 5873 05bc 00000000 		.4byte	0
 5874 05c0 00000000 		.4byte	0
 5875              	.LLST39:
 5876 05c4 04000000 		.4byte	.LVL112
 5877 05c8 0E000000 		.4byte	.LVL115
 5878 05cc 0200     		.2byte	0x2
 5879 05ce 30       		.byte	0x30
 5880 05cf 9F       		.byte	0x9f
 5881 05d0 0E000000 		.4byte	.LVL115
 5882 05d4 16000000 		.4byte	.LVL116
 5883 05d8 0100     		.2byte	0x1
 5884 05da 50       		.byte	0x50
 5885 05db 1A000000 		.4byte	.LVL117
 5886 05df 1C000000 		.4byte	.LFE17
 5887 05e3 0100     		.2byte	0x1
 5888 05e5 50       		.byte	0x50
 5889 05e6 00000000 		.4byte	0
 5890 05ea 00000000 		.4byte	0
 5891              	.LLST40:
 5892 05ee 02000000 		.4byte	.LVL118
 5893 05f2 08000000 		.4byte	.LVL119
 5894 05f6 0200     		.2byte	0x2
 5895 05f8 30       		.byte	0x30
 5896 05f9 9F       		.byte	0x9f
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 167


 5897 05fa 08000000 		.4byte	.LVL119
 5898 05fe 18000000 		.4byte	.LVL124
 5899 0602 0100     		.2byte	0x1
 5900 0604 55       		.byte	0x55
 5901 0605 18000000 		.4byte	.LVL124
 5902 0609 1A000000 		.4byte	.LFE18
 5903 060d 0100     		.2byte	0x1
 5904 060f 50       		.byte	0x50
 5905 0610 00000000 		.4byte	0
 5906 0614 00000000 		.4byte	0
 5907              	.LLST41:
 5908 0618 02000000 		.4byte	.LVL118
 5909 061c 08000000 		.4byte	.LVL119
 5910 0620 0200     		.2byte	0x2
 5911 0622 30       		.byte	0x30
 5912 0623 9F       		.byte	0x9f
 5913 0624 08000000 		.4byte	.LVL119
 5914 0628 18000000 		.4byte	.LVL123
 5915 062c 0100     		.2byte	0x1
 5916 062e 54       		.byte	0x54
 5917 062f 00000000 		.4byte	0
 5918 0633 00000000 		.4byte	0
 5919              	.LLST42:
 5920 0637 00000000 		.4byte	.LVL125
 5921 063b 02000000 		.4byte	.LVL126
 5922 063f 0100     		.2byte	0x1
 5923 0641 50       		.byte	0x50
 5924 0642 02000000 		.4byte	.LVL126
 5925 0646 10000000 		.4byte	.LFE25
 5926 064a 0400     		.2byte	0x4
 5927 064c F3       		.byte	0xf3
 5928 064d 01       		.uleb128 0x1
 5929 064e 50       		.byte	0x50
 5930 064f 9F       		.byte	0x9f
 5931 0650 00000000 		.4byte	0
 5932 0654 00000000 		.4byte	0
 5933              	.LLST43:
 5934 0658 00000000 		.4byte	.LVL129
 5935 065c 12000000 		.4byte	.LVL130
 5936 0660 0100     		.2byte	0x1
 5937 0662 50       		.byte	0x50
 5938 0663 12000000 		.4byte	.LVL130
 5939 0667 1A000000 		.4byte	.LVL131
 5940 066b 0400     		.2byte	0x4
 5941 066d F3       		.byte	0xf3
 5942 066e 01       		.uleb128 0x1
 5943 066f 50       		.byte	0x50
 5944 0670 9F       		.byte	0x9f
 5945 0671 1A000000 		.4byte	.LVL131
 5946 0675 1C000000 		.4byte	.LVL132
 5947 0679 0100     		.2byte	0x1
 5948 067b 50       		.byte	0x50
 5949 067c 1C000000 		.4byte	.LVL132
 5950 0680 24000000 		.4byte	.LFE26
 5951 0684 0400     		.2byte	0x4
 5952 0686 F3       		.byte	0xf3
 5953 0687 01       		.uleb128 0x1
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 168


 5954 0688 50       		.byte	0x50
 5955 0689 9F       		.byte	0x9f
 5956 068a 00000000 		.4byte	0
 5957 068e 00000000 		.4byte	0
 5958              	.LLST44:
 5959 0692 20000000 		.4byte	.LVL133
 5960 0696 22000000 		.4byte	.LVL134
 5961 069a 0100     		.2byte	0x1
 5962 069c 50       		.byte	0x50
 5963 069d 00000000 		.4byte	0
 5964 06a1 00000000 		.4byte	0
 5965              	.LLST45:
 5966 06a5 00000000 		.4byte	.LVL135
 5967 06a9 07000000 		.4byte	.LVL136-1
 5968 06ad 0100     		.2byte	0x1
 5969 06af 50       		.byte	0x50
 5970 06b0 07000000 		.4byte	.LVL136-1
 5971 06b4 3A000000 		.4byte	.LFE22
 5972 06b8 0400     		.2byte	0x4
 5973 06ba F3       		.byte	0xf3
 5974 06bb 01       		.uleb128 0x1
 5975 06bc 50       		.byte	0x50
 5976 06bd 9F       		.byte	0x9f
 5977 06be 00000000 		.4byte	0
 5978 06c2 00000000 		.4byte	0
 5979              	.LLST46:
 5980 06c6 00000000 		.4byte	.LVL135
 5981 06ca 07000000 		.4byte	.LVL136-1
 5982 06ce 0100     		.2byte	0x1
 5983 06d0 51       		.byte	0x51
 5984 06d1 07000000 		.4byte	.LVL136-1
 5985 06d5 38000000 		.4byte	.LVL150
 5986 06d9 0100     		.2byte	0x1
 5987 06db 56       		.byte	0x56
 5988 06dc 38000000 		.4byte	.LVL150
 5989 06e0 3A000000 		.4byte	.LFE22
 5990 06e4 0400     		.2byte	0x4
 5991 06e6 F3       		.byte	0xf3
 5992 06e7 01       		.uleb128 0x1
 5993 06e8 51       		.byte	0x51
 5994 06e9 9F       		.byte	0x9f
 5995 06ea 00000000 		.4byte	0
 5996 06ee 00000000 		.4byte	0
 5997              	.LLST47:
 5998 06f2 1C000000 		.4byte	.LVL142
 5999 06f6 20000000 		.4byte	.LVL143
 6000 06fa 0100     		.2byte	0x1
 6001 06fc 50       		.byte	0x50
 6002 06fd 20000000 		.4byte	.LVL143
 6003 0701 38000000 		.4byte	.LVL148
 6004 0705 0100     		.2byte	0x1
 6005 0707 54       		.byte	0x54
 6006 0708 00000000 		.4byte	0
 6007 070c 00000000 		.4byte	0
 6008              	.LLST48:
 6009 0710 30000000 		.4byte	.LVL146
 6010 0714 32000000 		.4byte	.LVL147
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 169


 6011 0718 0100     		.2byte	0x1
 6012 071a 50       		.byte	0x50
 6013 071b 00000000 		.4byte	0
 6014 071f 00000000 		.4byte	0
 6015              	.LLST49:
 6016 0723 14000000 		.4byte	.LVL139
 6017 0727 16000000 		.4byte	.LVL140
 6018 072b 0100     		.2byte	0x1
 6019 072d 50       		.byte	0x50
 6020 072e 16000000 		.4byte	.LVL140
 6021 0732 19000000 		.4byte	.LVL141-1
 6022 0736 0100     		.2byte	0x1
 6023 0738 51       		.byte	0x51
 6024 0739 00000000 		.4byte	0
 6025 073d 00000000 		.4byte	0
 6026              	.LLST50:
 6027 0741 0A000000 		.4byte	.LVL137
 6028 0745 11000000 		.4byte	.LVL138-1
 6029 0749 0100     		.2byte	0x1
 6030 074b 50       		.byte	0x50
 6031 074c 11000000 		.4byte	.LVL138-1
 6032 0750 38000000 		.4byte	.LVL149
 6033 0754 0100     		.2byte	0x1
 6034 0756 55       		.byte	0x55
 6035 0757 00000000 		.4byte	0
 6036 075b 00000000 		.4byte	0
 6037              	.LLST51:
 6038 075f 00000000 		.4byte	.LVL151
 6039 0763 1A000000 		.4byte	.LVL157
 6040 0767 0100     		.2byte	0x1
 6041 0769 50       		.byte	0x50
 6042 076a 1A000000 		.4byte	.LVL157
 6043 076e 2E010000 		.4byte	.LVL192
 6044 0772 0100     		.2byte	0x1
 6045 0774 55       		.byte	0x55
 6046 0775 2E010000 		.4byte	.LVL192
 6047 0779 5C010000 		.4byte	.LFE19
 6048 077d 0400     		.2byte	0x4
 6049 077f F3       		.byte	0xf3
 6050 0780 01       		.uleb128 0x1
 6051 0781 50       		.byte	0x50
 6052 0782 9F       		.byte	0x9f
 6053 0783 00000000 		.4byte	0
 6054 0787 00000000 		.4byte	0
 6055              	.LLST52:
 6056 078b 0A000000 		.4byte	.LVL152
 6057 078f F6000000 		.4byte	.LVL184
 6058 0793 0200     		.2byte	0x2
 6059 0795 30       		.byte	0x30
 6060 0796 9F       		.byte	0x9f
 6061 0797 F6000000 		.4byte	.LVL184
 6062 079b 2C010000 		.4byte	.LVL190
 6063 079f 0100     		.2byte	0x1
 6064 07a1 56       		.byte	0x56
 6065 07a2 2C010000 		.4byte	.LVL190
 6066 07a6 5C010000 		.4byte	.LFE19
 6067 07aa 0100     		.2byte	0x1
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 170


 6068 07ac 50       		.byte	0x50
 6069 07ad 00000000 		.4byte	0
 6070 07b1 00000000 		.4byte	0
 6071              	.LLST53:
 6072 07b5 82000000 		.4byte	.LVL169
 6073 07b9 8C000000 		.4byte	.LVL170
 6074 07bd 0200     		.2byte	0x2
 6075 07bf 30       		.byte	0x30
 6076 07c0 9F       		.byte	0x9f
 6077 07c1 8C000000 		.4byte	.LVL170
 6078 07c5 B6000000 		.4byte	.LVL177
 6079 07c9 0100     		.2byte	0x1
 6080 07cb 52       		.byte	0x52
 6081 07cc 00000000 		.4byte	0
 6082 07d0 00000000 		.4byte	0
 6083              	.LLST54:
 6084 07d4 20000000 		.4byte	.LVL159
 6085 07d8 22000000 		.4byte	.LVL160
 6086 07dc 0100     		.2byte	0x1
 6087 07de 50       		.byte	0x50
 6088 07df 22000000 		.4byte	.LVL160
 6089 07e3 C0000000 		.4byte	.LVL178
 6090 07e7 0100     		.2byte	0x1
 6091 07e9 58       		.byte	0x58
 6092 07ea 00000000 		.4byte	0
 6093 07ee 00000000 		.4byte	0
 6094              	.LLST55:
 6095 07f2 20000000 		.4byte	.LVL159
 6096 07f6 38000000 		.4byte	.LVL163
 6097 07fa 0400     		.2byte	0x4
 6098 07fc 0A       		.byte	0xa
 6099 07fd A00F     		.2byte	0xfa0
 6100 07ff 9F       		.byte	0x9f
 6101 0800 38000000 		.4byte	.LVL163
 6102 0804 3E000000 		.4byte	.LVL164
 6103 0808 0100     		.2byte	0x1
 6104 080a 50       		.byte	0x50
 6105 080b 3E000000 		.4byte	.LVL164
 6106 080f 45000000 		.4byte	.LVL165-1
 6107 0813 0400     		.2byte	0x4
 6108 0815 70       		.byte	0x70
 6109 0816 9978     		.sleb128 -999
 6110 0818 9F       		.byte	0x9f
 6111 0819 48000000 		.4byte	.LVL166
 6112 081d 4E000000 		.4byte	.LVL167
 6113 0821 0100     		.2byte	0x1
 6114 0823 50       		.byte	0x50
 6115 0824 4E000000 		.4byte	.LVL167
 6116 0828 F2000000 		.4byte	.LVL182
 6117 082c 0100     		.2byte	0x1
 6118 082e 56       		.byte	0x56
 6119 082f F4000000 		.4byte	.LVL183
 6120 0833 F6000000 		.4byte	.LVL184
 6121 0837 0100     		.2byte	0x1
 6122 0839 56       		.byte	0x56
 6123 083a 00000000 		.4byte	0
 6124 083e 00000000 		.4byte	0
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 171


 6125              	.LLST56:
 6126 0842 28000000 		.4byte	.LVL161
 6127 0846 2D000000 		.4byte	.LVL162-1
 6128 084a 0100     		.2byte	0x1
 6129 084c 50       		.byte	0x50
 6130 084d 2D000000 		.4byte	.LVL162-1
 6131 0851 2E000000 		.4byte	.LVL162
 6132 0855 0700     		.2byte	0x7
 6133 0857 78       		.byte	0x78
 6134 0858 00       		.sleb128 0
 6135 0859 0A       		.byte	0xa
 6136 085a E803     		.2byte	0x3e8
 6137 085c 1E       		.byte	0x1e
 6138 085d 9F       		.byte	0x9f
 6139 085e 2E000000 		.4byte	.LVL162
 6140 0862 38000000 		.4byte	.LVL163
 6141 0866 0100     		.2byte	0x1
 6142 0868 50       		.byte	0x50
 6143 0869 00000000 		.4byte	0
 6144 086d 00000000 		.4byte	0
 6145              	.LLST57:
 6146 0871 0A000000 		.4byte	.LVL152
 6147 0875 8C000000 		.4byte	.LVL170
 6148 0879 0200     		.2byte	0x2
 6149 087b 30       		.byte	0x30
 6150 087c 9F       		.byte	0x9f
 6151 087d 8C000000 		.4byte	.LVL170
 6152 0881 96000000 		.4byte	.LVL172
 6153 0885 0100     		.2byte	0x1
 6154 0887 5C       		.byte	0x5c
 6155 0888 96000000 		.4byte	.LVL172
 6156 088c 98000000 		.4byte	.LVL173
 6157 0890 0100     		.2byte	0x1
 6158 0892 51       		.byte	0x51
 6159 0893 98000000 		.4byte	.LVL173
 6160 0897 D3000000 		.4byte	.LVL180-1
 6161 089b 0100     		.2byte	0x1
 6162 089d 5C       		.byte	0x5c
 6163 089e 00000000 		.4byte	0
 6164 08a2 00000000 		.4byte	0
 6165              	.LLST58:
 6166 08a6 0A000000 		.4byte	.LVL152
 6167 08aa DC000000 		.4byte	.LVL181
 6168 08ae 0200     		.2byte	0x2
 6169 08b0 30       		.byte	0x30
 6170 08b1 9F       		.byte	0x9f
 6171 08b2 DC000000 		.4byte	.LVL181
 6172 08b6 FA000000 		.4byte	.LVL185
 6173 08ba 0100     		.2byte	0x1
 6174 08bc 50       		.byte	0x50
 6175 08bd FA000000 		.4byte	.LVL185
 6176 08c1 FD000000 		.4byte	.LVL186-1
 6177 08c5 0200     		.2byte	0x2
 6178 08c7 77       		.byte	0x77
 6179 08c8 00       		.sleb128 0
 6180 08c9 00000000 		.4byte	0
 6181 08cd 00000000 		.4byte	0
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 172


 6182              	.LLST59:
 6183 08d1 0A000000 		.4byte	.LVL152
 6184 08d5 8C000000 		.4byte	.LVL170
 6185 08d9 0200     		.2byte	0x2
 6186 08db 30       		.byte	0x30
 6187 08dc 9F       		.byte	0x9f
 6188 08dd 8C000000 		.4byte	.LVL170
 6189 08e1 92000000 		.4byte	.LVL171
 6190 08e5 0100     		.2byte	0x1
 6191 08e7 51       		.byte	0x51
 6192 08e8 92000000 		.4byte	.LVL171
 6193 08ec 98000000 		.4byte	.LVL173
 6194 08f0 0100     		.2byte	0x1
 6195 08f2 53       		.byte	0x53
 6196 08f3 98000000 		.4byte	.LVL173
 6197 08f7 D0000000 		.4byte	.LVL179
 6198 08fb 0100     		.2byte	0x1
 6199 08fd 51       		.byte	0x51
 6200 08fe 00000000 		.4byte	0
 6201 0902 00000000 		.4byte	0
 6202              	.LLST60:
 6203 0906 10000000 		.4byte	.LVL153
 6204 090a 16000000 		.4byte	.LVL156
 6205 090e 0100     		.2byte	0x1
 6206 0910 53       		.byte	0x53
 6207 0911 00000000 		.4byte	0
 6208 0915 00000000 		.4byte	0
 6209              	.LLST61:
 6210 0919 12000000 		.4byte	.LVL154
 6211 091d 2E010000 		.4byte	.LVL191
 6212 0921 0100     		.2byte	0x1
 6213 0923 54       		.byte	0x54
 6214 0924 00000000 		.4byte	0
 6215 0928 00000000 		.4byte	0
 6216              	.LLST62:
 6217 092c 14000000 		.4byte	.LVL155
 6218 0930 AC000000 		.4byte	.LVL176
 6219 0934 0100     		.2byte	0x1
 6220 0936 57       		.byte	0x57
 6221 0937 00000000 		.4byte	0
 6222 093b 00000000 		.4byte	0
 6223              	.LLST63:
 6224 093f 02000000 		.4byte	.LVL193
 6225 0943 08000000 		.4byte	.LVL194
 6226 0947 0200     		.2byte	0x2
 6227 0949 30       		.byte	0x30
 6228 094a 9F       		.byte	0x9f
 6229 094b 08000000 		.4byte	.LVL194
 6230 094f 18000000 		.4byte	.LVL199
 6231 0953 0100     		.2byte	0x1
 6232 0955 55       		.byte	0x55
 6233 0956 18000000 		.4byte	.LVL199
 6234 095a 1A000000 		.4byte	.LFE20
 6235 095e 0100     		.2byte	0x1
 6236 0960 50       		.byte	0x50
 6237 0961 00000000 		.4byte	0
 6238 0965 00000000 		.4byte	0
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 173


 6239              	.LLST64:
 6240 0969 02000000 		.4byte	.LVL193
 6241 096d 08000000 		.4byte	.LVL194
 6242 0971 0200     		.2byte	0x2
 6243 0973 30       		.byte	0x30
 6244 0974 9F       		.byte	0x9f
 6245 0975 08000000 		.4byte	.LVL194
 6246 0979 18000000 		.4byte	.LVL198
 6247 097d 0100     		.2byte	0x1
 6248 097f 54       		.byte	0x54
 6249 0980 00000000 		.4byte	0
 6250 0984 00000000 		.4byte	0
 6251              	.LLST65:
 6252 0988 02000000 		.4byte	.LVL200
 6253 098c 06000000 		.4byte	.LVL201
 6254 0990 0200     		.2byte	0x2
 6255 0992 30       		.byte	0x30
 6256 0993 9F       		.byte	0x9f
 6257 0994 06000000 		.4byte	.LVL201
 6258 0998 1A000000 		.4byte	.LVL205
 6259 099c 0100     		.2byte	0x1
 6260 099e 54       		.byte	0x54
 6261 099f 00000000 		.4byte	0
 6262 09a3 00000000 		.4byte	0
 6263              	.LLST66:
 6264 09a7 0E000000 		.4byte	.LVL202
 6265 09ab 13000000 		.4byte	.LVL203-1
 6266 09af 0100     		.2byte	0x1
 6267 09b1 51       		.byte	0x51
 6268 09b2 00000000 		.4byte	0
 6269 09b6 00000000 		.4byte	0
 6270              	.LLST67:
 6271 09ba 00000000 		.4byte	.LVL206
 6272 09be 37000000 		.4byte	.LVL211-1
 6273 09c2 0100     		.2byte	0x1
 6274 09c4 50       		.byte	0x50
 6275 09c5 37000000 		.4byte	.LVL211-1
 6276 09c9 42000000 		.4byte	.LVL214
 6277 09cd 0200     		.2byte	0x2
 6278 09cf 91       		.byte	0x91
 6279 09d0 54       		.sleb128 -44
 6280 09d1 42000000 		.4byte	.LVL214
 6281 09d5 D4000000 		.4byte	.LFE27
 6282 09d9 0400     		.2byte	0x4
 6283 09db F3       		.byte	0xf3
 6284 09dc 01       		.uleb128 0x1
 6285 09dd 50       		.byte	0x50
 6286 09de 9F       		.byte	0x9f
 6287 09df 00000000 		.4byte	0
 6288 09e3 00000000 		.4byte	0
 6289              	.LLST68:
 6290 09e7 1C000000 		.4byte	.LVL207
 6291 09eb 2A000000 		.4byte	.LVL209
 6292 09ef 0100     		.2byte	0x1
 6293 09f1 54       		.byte	0x54
 6294 09f2 2A000000 		.4byte	.LVL209
 6295 09f6 42000000 		.4byte	.LVL214
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 174


 6296 09fa 0200     		.2byte	0x2
 6297 09fc 7D       		.byte	0x7d
 6298 09fd 00       		.sleb128 0
 6299 09fe 00000000 		.4byte	0
 6300 0a02 00000000 		.4byte	0
 6301              	.LLST69:
 6302 0a06 28000000 		.4byte	.LVL208
 6303 0a0a 37000000 		.4byte	.LVL211-1
 6304 0a0e 0100     		.2byte	0x1
 6305 0a10 52       		.byte	0x52
 6306 0a11 37000000 		.4byte	.LVL211-1
 6307 0a15 B2000000 		.4byte	.LVL243
 6308 0a19 0100     		.2byte	0x1
 6309 0a1b 59       		.byte	0x59
 6310 0a1c 00000000 		.4byte	0
 6311 0a20 00000000 		.4byte	0
 6312              	.LLST70:
 6313 0a24 34000000 		.4byte	.LVL210
 6314 0a28 5E000000 		.4byte	.LVL222
 6315 0a2c 0100     		.2byte	0x1
 6316 0a2e 55       		.byte	0x55
 6317 0a2f 5E000000 		.4byte	.LVL222
 6318 0a33 B2000000 		.4byte	.LVL244
 6319 0a37 0100     		.2byte	0x1
 6320 0a39 5B       		.byte	0x5b
 6321 0a3a 00000000 		.4byte	0
 6322 0a3e 00000000 		.4byte	0
 6323              	.LLST71:
 6324 0a42 3A000000 		.4byte	.LVL212
 6325 0a46 45000000 		.4byte	.LVL215-1
 6326 0a4a 0100     		.2byte	0x1
 6327 0a4c 53       		.byte	0x53
 6328 0a4d 4C000000 		.4byte	.LVL217
 6329 0a51 55000000 		.4byte	.LVL219-1
 6330 0a55 0100     		.2byte	0x1
 6331 0a57 53       		.byte	0x53
 6332 0a58 5C000000 		.4byte	.LVL221
 6333 0a5c 6B000000 		.4byte	.LVL225-1
 6334 0a60 0100     		.2byte	0x1
 6335 0a62 53       		.byte	0x53
 6336 0a63 7A000000 		.4byte	.LVL228
 6337 0a67 7C000000 		.4byte	.LVL229
 6338 0a6b 0100     		.2byte	0x1
 6339 0a6d 53       		.byte	0x53
 6340 0a6e 7C000000 		.4byte	.LVL229
 6341 0a72 8C000000 		.4byte	.LVL233
 6342 0a76 0100     		.2byte	0x1
 6343 0a78 55       		.byte	0x55
 6344 0a79 8C000000 		.4byte	.LVL233
 6345 0a7d 99000000 		.4byte	.LVL236-1
 6346 0a81 0100     		.2byte	0x1
 6347 0a83 53       		.byte	0x53
 6348 0a84 A0000000 		.4byte	.LVL238
 6349 0a88 A6000000 		.4byte	.LVL239
 6350 0a8c 0100     		.2byte	0x1
 6351 0a8e 53       		.byte	0x53
 6352 0a8f A6000000 		.4byte	.LVL239
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 175


 6353 0a93 AA000000 		.4byte	.LVL240
 6354 0a97 0100     		.2byte	0x1
 6355 0a99 52       		.byte	0x52
 6356 0a9a AA000000 		.4byte	.LVL240
 6357 0a9e B2000000 		.4byte	.LVL242
 6358 0aa2 0100     		.2byte	0x1
 6359 0aa4 54       		.byte	0x54
 6360 0aa5 00000000 		.4byte	0
 6361 0aa9 00000000 		.4byte	0
 6362              	.LLST72:
 6363 0aad 38000000 		.4byte	.LVL211
 6364 0ab1 45000000 		.4byte	.LVL215-1
 6365 0ab5 0100     		.2byte	0x1
 6366 0ab7 50       		.byte	0x50
 6367 0ab8 4A000000 		.4byte	.LVL216
 6368 0abc 55000000 		.4byte	.LVL219-1
 6369 0ac0 0100     		.2byte	0x1
 6370 0ac2 50       		.byte	0x50
 6371 0ac3 5A000000 		.4byte	.LVL220
 6372 0ac7 6B000000 		.4byte	.LVL225-1
 6373 0acb 0100     		.2byte	0x1
 6374 0acd 50       		.byte	0x50
 6375 0ace 78000000 		.4byte	.LVL227
 6376 0ad2 85000000 		.4byte	.LVL231-1
 6377 0ad6 0100     		.2byte	0x1
 6378 0ad8 50       		.byte	0x50
 6379 0ad9 8A000000 		.4byte	.LVL232
 6380 0add 99000000 		.4byte	.LVL236-1
 6381 0ae1 0100     		.2byte	0x1
 6382 0ae3 50       		.byte	0x50
 6383 0ae4 9E000000 		.4byte	.LVL237
 6384 0ae8 AF000000 		.4byte	.LVL241-1
 6385 0aec 0100     		.2byte	0x1
 6386 0aee 50       		.byte	0x50
 6387 0aef 00000000 		.4byte	0
 6388 0af3 00000000 		.4byte	0
 6389              	.LLST73:
 6390 0af7 00000000 		.4byte	.LVL245
 6391 0afb 10000000 		.4byte	.LVL247
 6392 0aff 0100     		.2byte	0x1
 6393 0b01 50       		.byte	0x50
 6394 0b02 10000000 		.4byte	.LVL247
 6395 0b06 1C000000 		.4byte	.LFE28
 6396 0b0a 0400     		.2byte	0x4
 6397 0b0c F3       		.byte	0xf3
 6398 0b0d 01       		.uleb128 0x1
 6399 0b0e 50       		.byte	0x50
 6400 0b0f 9F       		.byte	0x9f
 6401 0b10 00000000 		.4byte	0
 6402 0b14 00000000 		.4byte	0
 6403              	.LLST74:
 6404 0b18 00000000 		.4byte	.LVL245
 6405 0b1c 13000000 		.4byte	.LVL248-1
 6406 0b20 0100     		.2byte	0x1
 6407 0b22 51       		.byte	0x51
 6408 0b23 13000000 		.4byte	.LVL248-1
 6409 0b27 1C000000 		.4byte	.LFE28
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 176


 6410 0b2b 0400     		.2byte	0x4
 6411 0b2d F3       		.byte	0xf3
 6412 0b2e 01       		.uleb128 0x1
 6413 0b2f 51       		.byte	0x51
 6414 0b30 9F       		.byte	0x9f
 6415 0b31 00000000 		.4byte	0
 6416 0b35 00000000 		.4byte	0
 6417              	.LLST75:
 6418 0b39 02000000 		.4byte	.LVL246
 6419 0b3d 14000000 		.4byte	.LVL248
 6420 0b41 0200     		.2byte	0x2
 6421 0b43 30       		.byte	0x30
 6422 0b44 9F       		.byte	0x9f
 6423 0b45 14000000 		.4byte	.LVL248
 6424 0b49 16000000 		.4byte	.LVL249
 6425 0b4d 0200     		.2byte	0x2
 6426 0b4f 31       		.byte	0x31
 6427 0b50 9F       		.byte	0x9f
 6428 0b51 16000000 		.4byte	.LVL249
 6429 0b55 1C000000 		.4byte	.LFE28
 6430 0b59 0100     		.2byte	0x1
 6431 0b5b 50       		.byte	0x50
 6432 0b5c 00000000 		.4byte	0
 6433 0b60 00000000 		.4byte	0
 6434              	.LLST76:
 6435 0b64 00000000 		.4byte	.LVL250
 6436 0b68 0B000000 		.4byte	.LVL251-1
 6437 0b6c 0100     		.2byte	0x1
 6438 0b6e 50       		.byte	0x50
 6439 0b6f 0B000000 		.4byte	.LVL251-1
 6440 0b73 1A000000 		.4byte	.LVL254
 6441 0b77 0100     		.2byte	0x1
 6442 0b79 55       		.byte	0x55
 6443 0b7a 1A000000 		.4byte	.LVL254
 6444 0b7e 1C000000 		.4byte	.LFE29
 6445 0b82 0400     		.2byte	0x4
 6446 0b84 F3       		.byte	0xf3
 6447 0b85 01       		.uleb128 0x1
 6448 0b86 50       		.byte	0x50
 6449 0b87 9F       		.byte	0x9f
 6450 0b88 00000000 		.4byte	0
 6451 0b8c 00000000 		.4byte	0
 6452              	.LLST77:
 6453 0b90 00000000 		.4byte	.LVL250
 6454 0b94 0B000000 		.4byte	.LVL251-1
 6455 0b98 0100     		.2byte	0x1
 6456 0b9a 51       		.byte	0x51
 6457 0b9b 0B000000 		.4byte	.LVL251-1
 6458 0b9f 1A000000 		.4byte	.LVL255
 6459 0ba3 0100     		.2byte	0x1
 6460 0ba5 56       		.byte	0x56
 6461 0ba6 1A000000 		.4byte	.LVL255
 6462 0baa 1C000000 		.4byte	.LFE29
 6463 0bae 0400     		.2byte	0x4
 6464 0bb0 F3       		.byte	0xf3
 6465 0bb1 01       		.uleb128 0x1
 6466 0bb2 51       		.byte	0x51
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 177


 6467 0bb3 9F       		.byte	0x9f
 6468 0bb4 00000000 		.4byte	0
 6469 0bb8 00000000 		.4byte	0
 6470              	.LLST78:
 6471 0bbc 00000000 		.4byte	.LVL250
 6472 0bc0 0B000000 		.4byte	.LVL251-1
 6473 0bc4 0100     		.2byte	0x1
 6474 0bc6 52       		.byte	0x52
 6475 0bc7 0B000000 		.4byte	.LVL251-1
 6476 0bcb 10000000 		.4byte	.LVL252
 6477 0bcf 0100     		.2byte	0x1
 6478 0bd1 54       		.byte	0x54
 6479 0bd2 10000000 		.4byte	.LVL252
 6480 0bd6 1C000000 		.4byte	.LFE29
 6481 0bda 0400     		.2byte	0x4
 6482 0bdc F3       		.byte	0xf3
 6483 0bdd 01       		.uleb128 0x1
 6484 0bde 52       		.byte	0x52
 6485 0bdf 9F       		.byte	0x9f
 6486 0be0 00000000 		.4byte	0
 6487 0be4 00000000 		.4byte	0
 6488              	.LLST79:
 6489 0be8 0C000000 		.4byte	.LVL251
 6490 0bec 19000000 		.4byte	.LVL253-1
 6491 0bf0 0100     		.2byte	0x1
 6492 0bf2 50       		.byte	0x50
 6493 0bf3 00000000 		.4byte	0
 6494 0bf7 00000000 		.4byte	0
 6495              	.LLST80:
 6496 0bfb 06000000 		.4byte	.LVL256
 6497 0bff 17000000 		.4byte	.LVL258-1
 6498 0c03 0100     		.2byte	0x1
 6499 0c05 53       		.byte	0x53
 6500 0c06 00000000 		.4byte	0
 6501 0c0a 00000000 		.4byte	0
 6502              	.LLST81:
 6503 0c0e 00000000 		.4byte	.LVL260
 6504 0c12 13000000 		.4byte	.LVL261-1
 6505 0c16 0100     		.2byte	0x1
 6506 0c18 50       		.byte	0x50
 6507 0c19 13000000 		.4byte	.LVL261-1
 6508 0c1d 3C000000 		.4byte	.LFE10
 6509 0c21 0400     		.2byte	0x4
 6510 0c23 F3       		.byte	0xf3
 6511 0c24 01       		.uleb128 0x1
 6512 0c25 50       		.byte	0x50
 6513 0c26 9F       		.byte	0x9f
 6514 0c27 00000000 		.4byte	0
 6515 0c2b 00000000 		.4byte	0
 6516              		.section	.debug_aranges,"",%progbits
 6517 0000 FC000000 		.4byte	0xfc
 6518 0004 0200     		.2byte	0x2
 6519 0006 00000000 		.4byte	.Ldebug_info0
 6520 000a 04       		.byte	0x4
 6521 000b 00       		.byte	0
 6522 000c 0000     		.2byte	0
 6523 000e 0000     		.2byte	0
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 178


 6524 0010 00000000 		.4byte	.LFB23
 6525 0014 84000000 		.4byte	.LFE23-.LFB23
 6526 0018 00000000 		.4byte	.LFB24
 6527 001c 42000000 		.4byte	.LFE24-.LFB24
 6528 0020 00000000 		.4byte	.LFB1
 6529 0024 10000000 		.4byte	.LFE1-.LFB1
 6530 0028 00000000 		.4byte	.LFB2
 6531 002c 40000000 		.4byte	.LFE2-.LFB2
 6532 0030 00000000 		.4byte	.LFB3
 6533 0034 2C000000 		.4byte	.LFE3-.LFB3
 6534 0038 00000000 		.4byte	.LFB4
 6535 003c 48000000 		.4byte	.LFE4-.LFB4
 6536 0040 00000000 		.4byte	.LFB5
 6537 0044 54000000 		.4byte	.LFE5-.LFB5
 6538 0048 00000000 		.4byte	.LFB6
 6539 004c 2C000000 		.4byte	.LFE6-.LFB6
 6540 0050 00000000 		.4byte	.LFB8
 6541 0054 9C000000 		.4byte	.LFE8-.LFB8
 6542 0058 00000000 		.4byte	.LFB11
 6543 005c 80000000 		.4byte	.LFE11-.LFB11
 6544 0060 00000000 		.4byte	.LFB12
 6545 0064 78000000 		.4byte	.LFE12-.LFB12
 6546 0068 00000000 		.4byte	.LFB13
 6547 006c 08000000 		.4byte	.LFE13-.LFB13
 6548 0070 00000000 		.4byte	.LFB14
 6549 0074 30000000 		.4byte	.LFE14-.LFB14
 6550 0078 00000000 		.4byte	.LFB15
 6551 007c 14000000 		.4byte	.LFE15-.LFB15
 6552 0080 00000000 		.4byte	.LFB16
 6553 0084 12000000 		.4byte	.LFE16-.LFB16
 6554 0088 00000000 		.4byte	.LFB17
 6555 008c 1C000000 		.4byte	.LFE17-.LFB17
 6556 0090 00000000 		.4byte	.LFB18
 6557 0094 1A000000 		.4byte	.LFE18-.LFB18
 6558 0098 00000000 		.4byte	.LFB25
 6559 009c 10000000 		.4byte	.LFE25-.LFB25
 6560 00a0 00000000 		.4byte	.LFB26
 6561 00a4 24000000 		.4byte	.LFE26-.LFB26
 6562 00a8 00000000 		.4byte	.LFB22
 6563 00ac 3A000000 		.4byte	.LFE22-.LFB22
 6564 00b0 00000000 		.4byte	.LFB19
 6565 00b4 5C010000 		.4byte	.LFE19-.LFB19
 6566 00b8 00000000 		.4byte	.LFB20
 6567 00bc 1A000000 		.4byte	.LFE20-.LFB20
 6568 00c0 00000000 		.4byte	.LFB21
 6569 00c4 20000000 		.4byte	.LFE21-.LFB21
 6570 00c8 00000000 		.4byte	.LFB27
 6571 00cc D4000000 		.4byte	.LFE27-.LFB27
 6572 00d0 00000000 		.4byte	.LFB28
 6573 00d4 1C000000 		.4byte	.LFE28-.LFB28
 6574 00d8 00000000 		.4byte	.LFB29
 6575 00dc 1C000000 		.4byte	.LFE29-.LFB29
 6576 00e0 00000000 		.4byte	.LFB9
 6577 00e4 28000000 		.4byte	.LFE9-.LFB9
 6578 00e8 00000000 		.4byte	.LFB10
 6579 00ec 3C000000 		.4byte	.LFE10-.LFB10
 6580 00f0 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 179


 6581 00f4 28000000 		.4byte	.LFE7-.LFB7
 6582 00f8 00000000 		.4byte	0
 6583 00fc 00000000 		.4byte	0
 6584              		.section	.debug_ranges,"",%progbits
 6585              	.Ldebug_ranges0:
 6586 0000 00000000 		.4byte	.LFB23
 6587 0004 84000000 		.4byte	.LFE23
 6588 0008 00000000 		.4byte	.LFB24
 6589 000c 42000000 		.4byte	.LFE24
 6590 0010 00000000 		.4byte	.LFB1
 6591 0014 10000000 		.4byte	.LFE1
 6592 0018 00000000 		.4byte	.LFB2
 6593 001c 40000000 		.4byte	.LFE2
 6594 0020 00000000 		.4byte	.LFB3
 6595 0024 2C000000 		.4byte	.LFE3
 6596 0028 00000000 		.4byte	.LFB4
 6597 002c 48000000 		.4byte	.LFE4
 6598 0030 00000000 		.4byte	.LFB5
 6599 0034 54000000 		.4byte	.LFE5
 6600 0038 00000000 		.4byte	.LFB6
 6601 003c 2C000000 		.4byte	.LFE6
 6602 0040 00000000 		.4byte	.LFB8
 6603 0044 9C000000 		.4byte	.LFE8
 6604 0048 00000000 		.4byte	.LFB11
 6605 004c 80000000 		.4byte	.LFE11
 6606 0050 00000000 		.4byte	.LFB12
 6607 0054 78000000 		.4byte	.LFE12
 6608 0058 00000000 		.4byte	.LFB13
 6609 005c 08000000 		.4byte	.LFE13
 6610 0060 00000000 		.4byte	.LFB14
 6611 0064 30000000 		.4byte	.LFE14
 6612 0068 00000000 		.4byte	.LFB15
 6613 006c 14000000 		.4byte	.LFE15
 6614 0070 00000000 		.4byte	.LFB16
 6615 0074 12000000 		.4byte	.LFE16
 6616 0078 00000000 		.4byte	.LFB17
 6617 007c 1C000000 		.4byte	.LFE17
 6618 0080 00000000 		.4byte	.LFB18
 6619 0084 1A000000 		.4byte	.LFE18
 6620 0088 00000000 		.4byte	.LFB25
 6621 008c 10000000 		.4byte	.LFE25
 6622 0090 00000000 		.4byte	.LFB26
 6623 0094 24000000 		.4byte	.LFE26
 6624 0098 00000000 		.4byte	.LFB22
 6625 009c 3A000000 		.4byte	.LFE22
 6626 00a0 00000000 		.4byte	.LFB19
 6627 00a4 5C010000 		.4byte	.LFE19
 6628 00a8 00000000 		.4byte	.LFB20
 6629 00ac 1A000000 		.4byte	.LFE20
 6630 00b0 00000000 		.4byte	.LFB21
 6631 00b4 20000000 		.4byte	.LFE21
 6632 00b8 00000000 		.4byte	.LFB27
 6633 00bc D4000000 		.4byte	.LFE27
 6634 00c0 00000000 		.4byte	.LFB28
 6635 00c4 1C000000 		.4byte	.LFE28
 6636 00c8 00000000 		.4byte	.LFB29
 6637 00cc 1C000000 		.4byte	.LFE29
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 180


 6638 00d0 00000000 		.4byte	.LFB9
 6639 00d4 28000000 		.4byte	.LFE9
 6640 00d8 00000000 		.4byte	.LFB10
 6641 00dc 3C000000 		.4byte	.LFE10
 6642 00e0 00000000 		.4byte	.LFB7
 6643 00e4 28000000 		.4byte	.LFE7
 6644 00e8 00000000 		.4byte	0
 6645 00ec 00000000 		.4byte	0
 6646              		.section	.debug_line,"",%progbits
 6647              	.Ldebug_line0:
 6648 0000 4C060000 		.section	.debug_str,"MS",%progbits,1
 6648      0200C901 
 6648      00000201 
 6648      FB0E0D00 
 6648      01010101 
 6649              	.LASF170:
 6650 0000 43617053 		.ascii	"CapSense_SsCSDGetColSnsClkDivider\000"
 6650      656E7365 
 6650      5F537343 
 6650      53444765 
 6650      74436F6C 
 6651              	.LASF144:
 6652 0022 73656E73 		.ascii	"sensorElement\000"
 6652      6F72456C 
 6652      656D656E 
 6652      7400
 6653              	.LASF184:
 6654 0030 6D617843 		.ascii	"maxCp\000"
 6654      7000
 6655              	.LASF138:
 6656 0036 7363616E 		.ascii	"scanStatus\000"
 6656      53746174 
 6656      757300
 6657              	.LASF202:
 6658 0041 43617053 		.ascii	"CapSense_SsCSDDisableMode\000"
 6658      656E7365 
 6658      5F537343 
 6658      53444469 
 6658      7361626C 
 6659              	.LASF141:
 6660 005b 43617053 		.ascii	"CapSense_SetupWidgetExt\000"
 6660      656E7365 
 6660      5F536574 
 6660      75705769 
 6660      64676574 
 6661              	.LASF209:
 6662 0073 43617053 		.ascii	"CapSense_widgetIndex\000"
 6662      656E7365 
 6662      5F776964 
 6662      67657449 
 6662      6E646578 
 6663              	.LASF86:
 6664 0088 736E7254 		.ascii	"snrTestWidgetId\000"
 6664      65737457 
 6664      69646765 
 6664      74496400 
 6665              	.LASF42:
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 181


 6666 0098 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 6666      656E7365 
 6666      5F554E44 
 6666      4546494E 
 6666      45445F45 
 6667              	.LASF8:
 6668 00ad 756E7369 		.ascii	"unsigned int\000"
 6668      676E6564 
 6668      20696E74 
 6668      00
 6669              	.LASF77:
 6670 00ba 7363616E 		.ascii	"scanCounter\000"
 6670      436F756E 
 6670      74657200 
 6671              	.LASF179:
 6672 00c6 696E7075 		.ascii	"inputSnsClk\000"
 6672      74536E73 
 6672      436C6B00 
 6673              	.LASF75:
 6674 00d2 6877436C 		.ascii	"hwClock\000"
 6674      6F636B00 
 6675              	.LASF90:
 6676 00da 7363616E 		.ascii	"scanCsdISC\000"
 6676      43736449 
 6676      534300
 6677              	.LASF187:
 6678 00e5 70747252 		.ascii	"ptrRamWidget\000"
 6678      616D5769 
 6678      64676574 
 6678      00
 6679              	.LASF230:
 6680 00f2 43794861 		.ascii	"CyHalt\000"
 6680      6C7400
 6681              	.LASF121:
 6682 00f9 43617053 		.ascii	"CapSense_BIST_CSD_SH_CAP_E\000"
 6682      656E7365 
 6682      5F424953 
 6682      545F4353 
 6682      445F5348 
 6683              	.LASF148:
 6684 0114 696E7465 		.ascii	"interruptState\000"
 6684      72727570 
 6684      74537461 
 6684      746500
 6685              	.LASF131:
 6686 0123 6C667372 		.ascii	"lfsrScale\000"
 6686      5363616C 
 6686      6500
 6687              	.LASF194:
 6688 012d 64725265 		.ascii	"drReg\000"
 6688      6700
 6689              	.LASF186:
 6690 0133 70747246 		.ascii	"ptrFlashWidget\000"
 6690      6C617368 
 6690      57696467 
 6690      657400
 6691              	.LASF23:
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 182


 6692 0142 69446163 		.ascii	"iDacGain\000"
 6692      4761696E 
 6692      00
 6693              	.LASF228:
 6694 014b 536D6172 		.ascii	"SmartSense_TuneSensitivity\000"
 6694      7453656E 
 6694      73655F54 
 6694      756E6553 
 6694      656E7369 
 6695              	.LASF29:
 6696 0166 736E7343 		.ascii	"snsClkInputClock\000"
 6696      6C6B496E 
 6696      70757443 
 6696      6C6F636B 
 6696      00
 6697              	.LASF132:
 6698 0177 6C667372 		.ascii	"lfsrRange\000"
 6698      52616E67 
 6698      6500
 6699              	.LASF169:
 6700 0181 43617053 		.ascii	"CapSense_CalibrateAllWidgets\000"
 6700      656E7365 
 6700      5F43616C 
 6700      69627261 
 6700      7465416C 
 6701              	.LASF236:
 6702 019e 43617053 		.ascii	"CapSense_IsBusy\000"
 6702      656E7365 
 6702      5F497342 
 6702      75737900 
 6703              	.LASF193:
 6704 01ae 6873696F 		.ascii	"hsiomReg\000"
 6704      6D526567 
 6704      00
 6705              	.LASF162:
 6706 01b7 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 6706      656E7365 
 6706      5F537353 
 6706      65744D6F 
 6706      64436C6B 
 6707              	.LASF199:
 6708 01d8 72656750 		.ascii	"regPtr\000"
 6708      747200
 6709              	.LASF65:
 6710 01df 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 6710      656E7365 
 6710      5F52414D 
 6710      5F57445F 
 6710      4C495354 
 6711              	.LASF142:
 6712 01fb 73656E73 		.ascii	"sensorId\000"
 6712      6F724964 
 6712      00
 6713              	.LASF172:
 6714 0204 70747257 		.ascii	"ptrWdgt\000"
 6714      64677400 
 6715              	.LASF10:
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 183


 6716 020c 75696E74 		.ascii	"uint32_t\000"
 6716      33325F74 
 6716      00
 6717              	.LASF201:
 6718 0215 43617053 		.ascii	"CapSense_SsSetWidgetSenseClkSrc\000"
 6718      656E7365 
 6718      5F537353 
 6718      65745769 
 6718      64676574 
 6719              	.LASF56:
 6720 0235 69646163 		.ascii	"idacGainIndex\000"
 6720      4761696E 
 6720      496E6465 
 6720      7800
 6721              	.LASF235:
 6722 0243 463A5C43 		.ascii	"F:\\CapSense_Tasks\\Design02.cydsn\000"
 6722      61705365 
 6722      6E73655F 
 6722      5461736B 
 6722      735C4465 
 6723              	.LASF152:
 6724 0264 6C6F6F70 		.ascii	"loopIndex\000"
 6724      496E6465 
 6724      7800
 6725              	.LASF129:
 6726 026e 43617053 		.ascii	"CapSense_SsCalcLfsrScale\000"
 6726      656E7365 
 6726      5F537343 
 6726      616C634C 
 6726      66737253 
 6727              	.LASF14:
 6728 0287 666C6F61 		.ascii	"float\000"
 6728      7400
 6729              	.LASF101:
 6730 028d 73686966 		.ascii	"shift\000"
 6730      7400
 6731              	.LASF233:
 6732 0293 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6732      43313120 
 6732      352E342E 
 6732      31203230 
 6732      31363036 
 6733 02c6 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 6733      20726576 
 6733      6973696F 
 6733      6E203233 
 6733      37373135 
 6734 02f9 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 6734      67202D66 
 6734      66756E63 
 6734      74696F6E 
 6734      2D736563 
 6735              	.LASF176:
 6736 0325 43617053 		.ascii	"CapSense_SsAutoTuneWidget\000"
 6736      656E7365 
 6736      5F537341 
 6736      75746F54 
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 184


 6736      756E6557 
 6737              	.LASF217:
 6738 033f 43617053 		.ascii	"CapSense_CSDSetupWidget\000"
 6738      656E7365 
 6738      5F435344 
 6738      53657475 
 6738      70576964 
 6739              	.LASF157:
 6740 0357 736E7349 		.ascii	"snsIoPtr\000"
 6740      6F507472 
 6740      00
 6741              	.LASF85:
 6742 0360 736E734C 		.ascii	"snsList\000"
 6742      69737400 
 6743              	.LASF7:
 6744 0368 6C6F6E67 		.ascii	"long long unsigned int\000"
 6744      206C6F6E 
 6744      6720756E 
 6744      7369676E 
 6744      65642069 
 6745              	.LASF210:
 6746 037f 43617053 		.ascii	"CapSense_sensorIndex\000"
 6746      656E7365 
 6746      5F73656E 
 6746      736F7249 
 6746      6E646578 
 6747              	.LASF102:
 6748 0394 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 6748      656E7365 
 6748      5F464C41 
 6748      53485F49 
 6748      4F5F5354 
 6749              	.LASF87:
 6750 03ad 736E7254 		.ascii	"snrTestSensorId\000"
 6750      65737453 
 6750      656E736F 
 6750      72496400 
 6751              	.LASF112:
 6752 03bd 70747232 		.ascii	"ptr2NoiseEnvlp\000"
 6752      4E6F6973 
 6752      65456E76 
 6752      6C7000
 6753              	.LASF110:
 6754 03cc 77646774 		.ascii	"wdgtType\000"
 6754      54797065 
 6754      00
 6755              	.LASF130:
 6756 03d5 6C667372 		.ascii	"lfsrSize\000"
 6756      53697A65 
 6756      00
 6757              	.LASF219:
 6758 03de 43617053 		.ascii	"CapSense_CSDSetupWidgetExt\000"
 6758      656E7365 
 6758      5F435344 
 6758      53657475 
 6758      70576964 
 6759              	.LASF195:
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 185


 6760 03f9 70635265 		.ascii	"pcReg\000"
 6760      6700
 6761              	.LASF200:
 6762 03ff 76616C75 		.ascii	"value\000"
 6762      6500
 6763              	.LASF154:
 6764 0405 6E657750 		.ascii	"newPinHsiomVal\000"
 6764      696E4873 
 6764      696F6D56 
 6764      616C00
 6765              	.LASF177:
 6766 0414 6175746F 		.ascii	"autoTuneStatus\000"
 6766      54756E65 
 6766      53746174 
 6766      757300
 6767              	.LASF83:
 6768 0423 6D6F6443 		.ascii	"modCsdClk\000"
 6768      7364436C 
 6768      6B00
 6769              	.LASF71:
 6770 042d 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 6770      656E7365 
 6770      5F52414D 
 6770      5F534E53 
 6770      5F535452 
 6771              	.LASF173:
 6772 0445 43617053 		.ascii	"CapSense_SsCSDCalcPrsSize\000"
 6772      656E7365 
 6772      5F537343 
 6772      53444361 
 6772      6C635072 
 6773              	.LASF30:
 6774 045f 63616C54 		.ascii	"calTarget\000"
 6774      61726765 
 6774      7400
 6775              	.LASF95:
 6776 0469 64725074 		.ascii	"drPtr\000"
 6776      7200
 6777              	.LASF197:
 6778 046f 6D6F6465 		.ascii	"mode\000"
 6778      00
 6779              	.LASF163:
 6780 0474 6D6F6443 		.ascii	"modClk\000"
 6780      6C6B00
 6781              	.LASF153:
 6782 047b 6E657750 		.ascii	"newPinPcVal\000"
 6782      696E5063 
 6782      56616C00 
 6783              	.LASF25:
 6784 0487 73696750 		.ascii	"sigPFC\000"
 6784      464300
 6785              	.LASF52:
 6786 048e 68797374 		.ascii	"hysteresis\000"
 6786      65726573 
 6786      697300
 6787              	.LASF192:
 6788 0499 64697363 		.ascii	"dischargeTime\000"
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 186


 6788      68617267 
 6788      6554696D 
 6788      6500
 6789              	.LASF113:
 6790 04a7 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 6790      656E7365 
 6790      5F464C41 
 6790      53485F57 
 6790      445F5354 
 6791              	.LASF146:
 6792 04c0 656C7464 		.ascii	"eltdNum\000"
 6792      4E756D00 
 6793              	.LASF54:
 6794 04c8 6C6F7742 		.ascii	"lowBslnRst\000"
 6794      736C6E52 
 6794      737400
 6795              	.LASF128:
 6796 04d3 43617053 		.ascii	"CapSense_SsCalcLfsrSize\000"
 6796      656E7365 
 6796      5F537343 
 6796      616C634C 
 6796      66737253 
 6797              	.LASF109:
 6798 04eb 746F7461 		.ascii	"totalNumSns\000"
 6798      6C4E756D 
 6798      536E7300 
 6799              	.LASF41:
 6800 04f7 534D4152 		.ascii	"SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT\000"
 6800      5453454E 
 6800      53455F43 
 6800      53445F4E 
 6800      4F495345 
 6801              	.LASF182:
 6802 051c 6175746F 		.ascii	"autoTuneConfig\000"
 6802      54756E65 
 6802      436F6E66 
 6802      696700
 6803              	.LASF50:
 6804 052b 6E6F6973 		.ascii	"noiseTh\000"
 6804      65546800 
 6805              	.LASF16:
 6806 0533 63686172 		.ascii	"char\000"
 6806      00
 6807              	.LASF222:
 6808 0538 43794578 		.ascii	"CyExitCriticalSection\000"
 6808      69744372 
 6808      69746963 
 6808      616C5365 
 6808      6374696F 
 6809              	.LASF31:
 6810 054e 69446163 		.ascii	"iDacMod\000"
 6810      4D6F6400 
 6811              	.LASF191:
 6812 0556 43617053 		.ascii	"CapSense_DischargeExtCapacitors\000"
 6812      656E7365 
 6812      5F446973 
 6812      63686172 
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 187


 6812      67654578 
 6813              	.LASF226:
 6814 0576 43617053 		.ascii	"CapSense_SsCSDGetNumberOfConversions\000"
 6814      656E7365 
 6814      5F537343 
 6814      53444765 
 6814      744E756D 
 6815              	.LASF155:
 6816 059b 746D7050 		.ascii	"tmpPcDrRegValue\000"
 6816      63447252 
 6816      65675661 
 6816      6C756500 
 6817              	.LASF119:
 6818 05ab 43617053 		.ascii	"CapSense_BIST_CSD_SNS_CAP_E\000"
 6818      656E7365 
 6818      5F424953 
 6818      545F4353 
 6818      445F534E 
 6819              	.LASF99:
 6820 05c7 6873696F 		.ascii	"hsiomShift\000"
 6820      6D536869 
 6820      667400
 6821              	.LASF12:
 6822 05d2 75696E74 		.ascii	"uint16\000"
 6822      313600
 6823              	.LASF127:
 6824 05d9 636F6E76 		.ascii	"conversionsNum\000"
 6824      65727369 
 6824      6F6E734E 
 6824      756D00
 6825              	.LASF188:
 6826 05e8 70747252 		.ascii	"ptrRamSensor\000"
 6826      616D5365 
 6826      6E736F72 
 6826      00
 6827              	.LASF189:
 6828 05f5 43617053 		.ascii	"CapSense_SsAutoTune\000"
 6828      656E7365 
 6828      5F537341 
 6828      75746F54 
 6828      756E6500 
 6829              	.LASF48:
 6830 0609 7265736F 		.ascii	"resolution\000"
 6830      6C757469 
 6830      6F6E00
 6831              	.LASF78:
 6832 0614 73746174 		.ascii	"status\000"
 6832      757300
 6833              	.LASF167:
 6834 061b 43617053 		.ascii	"CapSense_CalibrateWidget\000"
 6834      656E7365 
 6834      5F43616C 
 6834      69627261 
 6834      74655769 
 6835              	.LASF118:
 6836 0634 43617053 		.ascii	"CapSense_SCAN_CSX_E\000"
 6836      656E7365 
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 188


 6836      5F534341 
 6836      4E5F4353 
 6836      585F4500 
 6837              	.LASF21:
 6838 0648 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 6838      656E7365 
 6838      5F4C4F57 
 6838      5F42534C 
 6838      4E5F5253 
 6839              	.LASF164:
 6840 0663 43617053 		.ascii	"CapSense_SsSetSnsClockDivider\000"
 6840      656E7365 
 6840      5F537353 
 6840      6574536E 
 6840      73436C6F 
 6841              	.LASF47:
 6842 0681 43617053 		.ascii	"CapSense_SENSE_METHOD_ENUM\000"
 6842      656E7365 
 6842      5F53454E 
 6842      53455F4D 
 6842      4554484F 
 6843              	.LASF196:
 6844 069c 43617053 		.ascii	"CapSense_SetInactiveElectrodeState\000"
 6844      656E7365 
 6844      5F536574 
 6844      496E6163 
 6844      74697665 
 6845              	.LASF70:
 6846 06bf 69646163 		.ascii	"idacComp\000"
 6846      436F6D70 
 6846      00
 6847              	.LASF94:
 6848 06c8 70635074 		.ascii	"pcPtr\000"
 6848      7200
 6849              	.LASF6:
 6850 06ce 6C6F6E67 		.ascii	"long long int\000"
 6850      206C6F6E 
 6850      6720696E 
 6850      7400
 6851              	.LASF111:
 6852 06dc 6E756D43 		.ascii	"numCols\000"
 6852      6F6C7300 
 6853              	.LASF232:
 6854 06e4 43617053 		.ascii	"CapSense_SsCSDInitialize\000"
 6854      656E7365 
 6854      5F537343 
 6854      5344496E 
 6854      69746961 
 6855              	.LASF53:
 6856 06fd 6F6E4465 		.ascii	"onDebounce\000"
 6856      626F756E 
 6856      636500
 6857              	.LASF161:
 6858 0708 61646472 		.ascii	"address\000"
 6858      65737300 
 6859              	.LASF168:
 6860 0710 63616C69 		.ascii	"calibrateStatus\000"
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 189


 6860      62726174 
 6860      65537461 
 6860      74757300 
 6861              	.LASF84:
 6862 0720 77646774 		.ascii	"wdgtList\000"
 6862      4C697374 
 6862      00
 6863              	.LASF117:
 6864 0729 43617053 		.ascii	"CapSense_SCAN_CSD_E\000"
 6864      656E7365 
 6864      5F534341 
 6864      4E5F4353 
 6864      445F4500 
 6865              	.LASF115:
 6866 073d 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 6866      656E7365 
 6866      5F464C41 
 6866      53485F53 
 6866      54525543 
 6867              	.LASF137:
 6868 0753 43617053 		.ascii	"CapSense_Scan\000"
 6868      656E7365 
 6868      5F536361 
 6868      6E00
 6869              	.LASF198:
 6870 0761 43617053 		.ascii	"CapSense_WriteBitsSafe\000"
 6870      656E7365 
 6870      5F577269 
 6870      74654269 
 6870      74735361 
 6871              	.LASF156:
 6872 0778 746D7048 		.ascii	"tmpHsiomRegValue\000"
 6872      73696F6D 
 6872      52656756 
 6872      616C7565 
 6872      00
 6873              	.LASF206:
 6874 0789 43617053 		.ascii	"CapSense_dsRam\000"
 6874      656E7365 
 6874      5F647352 
 6874      616D00
 6875              	.LASF89:
 6876 0798 736E7254 		.ascii	"snrTestRawCount\000"
 6876      65737452 
 6876      6177436F 
 6876      756E7400 
 6877              	.LASF51:
 6878 07a8 6E4E6F69 		.ascii	"nNoiseTh\000"
 6878      73655468 
 6878      00
 6879              	.LASF82:
 6880 07b1 63736430 		.ascii	"csd0Config\000"
 6880      436F6E66 
 6880      696700
 6881              	.LASF19:
 6882 07bc 63796973 		.ascii	"cyisraddress\000"
 6882      72616464 
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 190


 6882      72657373 
 6882      00
 6883              	.LASF143:
 6884 07c9 43617053 		.ascii	"CapSense_ScanExt\000"
 6884      656E7365 
 6884      5F536361 
 6884      6E457874 
 6884      00
 6885              	.LASF60:
 6886 07da 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 6886      656E7365 
 6886      5F52414D 
 6886      5F57445F 
 6886      42415345 
 6887              	.LASF93:
 6888 07f6 6873696F 		.ascii	"hsiomPtr\000"
 6888      6D507472 
 6888      00
 6889              	.LASF13:
 6890 07ff 75696E74 		.ascii	"uint32\000"
 6890      333200
 6891              	.LASF106:
 6892 0806 70747232 		.ascii	"ptr2FltrHistory\000"
 6892      466C7472 
 6892      48697374 
 6892      6F727900 
 6893              	.LASF124:
 6894 0816 6761696E 		.ascii	"gainValue\000"
 6894      56616C75 
 6894      6500
 6895              	.LASF215:
 6896 0820 43617053 		.ascii	"CapSense_curSnsIOPtr\000"
 6896      656E7365 
 6896      5F637572 
 6896      536E7349 
 6896      4F507472 
 6897              	.LASF98:
 6898 0835 6D61736B 		.ascii	"mask\000"
 6898      00
 6899              	.LASF166:
 6900 083a 43617053 		.ascii	"CapSense_SsSetClockDividers\000"
 6900      656E7365 
 6900      5F537353 
 6900      6574436C 
 6900      6F636B44 
 6901              	.LASF122:
 6902 0856 43617053 		.ascii	"CapSense_OPERATION_MODE_ENUM\000"
 6902      656E7365 
 6902      5F4F5045 
 6902      52415449 
 6902      4F4E5F4D 
 6903              	.LASF229:
 6904 0873 43794465 		.ascii	"CyDelayUs\000"
 6904      6C617955 
 6904      7300
 6905              	.LASF24:
 6906 087d 70747253 		.ascii	"ptrSenseClk\000"
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 191


 6906      656E7365 
 6906      436C6B00 
 6907              	.LASF140:
 6908 0889 77646774 		.ascii	"wdgtIndex\000"
 6908      496E6465 
 6908      7800
 6909              	.LASF178:
 6910 0893 736E7349 		.ascii	"snsIndex\000"
 6910      6E646578 
 6910      00
 6911              	.LASF46:
 6912 089c 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 6912      656E7365 
 6912      5F53454E 
 6912      53455F4D 
 6912      4554484F 
 6913              	.LASF116:
 6914 08b8 6C6F6E67 		.ascii	"long double\000"
 6914      20646F75 
 6914      626C6500 
 6915              	.LASF26:
 6916 08c4 736E7343 		.ascii	"snsClkConstantR\000"
 6916      6C6B436F 
 6916      6E737461 
 6916      6E745200 
 6917              	.LASF18:
 6918 08d4 72656733 		.ascii	"reg32\000"
 6918      3200
 6919              	.LASF88:
 6920 08da 736E7254 		.ascii	"snrTestScanCounter\000"
 6920      65737453 
 6920      63616E43 
 6920      6F756E74 
 6920      657200
 6921              	.LASF32:
 6922 08ed 69446163 		.ascii	"iDacComp\000"
 6922      436F6D70 
 6922      00
 6923              	.LASF73:
 6924 08f6 636F6E66 		.ascii	"configId\000"
 6924      69674964 
 6924      00
 6925              	.LASF105:
 6926 08ff 70747232 		.ascii	"ptr2SnsRam\000"
 6926      536E7352 
 6926      616D00
 6927              	.LASF204:
 6928 090a 43617053 		.ascii	"CapSense_SsInitialize\000"
 6928      656E7365 
 6928      5F537349 
 6928      6E697469 
 6928      616C697A 
 6929              	.LASF81:
 6930 0920 736E7353 		.ascii	"snsStatus\000"
 6930      74617475 
 6930      7300
 6931              	.LASF159:
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 192


 6932 092a 706F7374 		.ascii	"postScanStatus\000"
 6932      5363616E 
 6932      53746174 
 6932      757300
 6933              	.LASF58:
 6934 0939 736E7343 		.ascii	"snsClkSource\000"
 6934      6C6B536F 
 6934      75726365 
 6934      00
 6935              	.LASF231:
 6936 0946 43617053 		.ascii	"CapSense_SsCSDElectrodeCheck\000"
 6936      656E7365 
 6936      5F537343 
 6936      5344456C 
 6936      65637472 
 6937              	.LASF160:
 6938 0963 43617053 		.ascii	"CapSense_SsIsrInitialize\000"
 6938      656E7365 
 6938      5F537349 
 6938      7372496E 
 6938      69746961 
 6939              	.LASF2:
 6940 097c 73686F72 		.ascii	"short int\000"
 6940      7420696E 
 6940      7400
 6941              	.LASF92:
 6942 0986 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 6942      656E7365 
 6942      5F52414D 
 6942      5F535452 
 6942      55435400 
 6943              	.LASF151:
 6944 099a 43617053 		.ascii	"CapSense_SsSetAllIOsState\000"
 6944      656E7365 
 6944      5F537353 
 6944      6574416C 
 6944      6C494F73 
 6945              	.LASF4:
 6946 09b4 6C6F6E67 		.ascii	"long int\000"
 6946      20696E74 
 6946      00
 6947              	.LASF79:
 6948 09bd 77646774 		.ascii	"wdgtEnable\000"
 6948      456E6162 
 6948      6C6500
 6949              	.LASF68:
 6950 09c8 64696666 		.ascii	"diff\000"
 6950      00
 6951              	.LASF76:
 6952 09cd 74756E65 		.ascii	"tunerCmd\000"
 6952      72436D64 
 6952      00
 6953              	.LASF44:
 6954 09d6 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 6954      656E7365 
 6954      5F53454E 
 6954      53455F4D 
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 193


 6954      4554484F 
 6955              	.LASF96:
 6956 09f2 70735074 		.ascii	"psPtr\000"
 6956      7200
 6957              	.LASF136:
 6958 09f8 43617053 		.ascii	"CapSense_SetupWidget\000"
 6958      656E7365 
 6958      5F536574 
 6958      75705769 
 6958      64676574 
 6959              	.LASF62:
 6960 0a0d 62757474 		.ascii	"button0\000"
 6960      6F6E3000 
 6961              	.LASF63:
 6962 0a15 62757474 		.ascii	"button1\000"
 6962      6F6E3100 
 6963              	.LASF64:
 6964 0a1d 62757474 		.ascii	"button2\000"
 6964      6F6E3200 
 6965              	.LASF225:
 6966 0a25 43617053 		.ascii	"CapSense_CSDCalibrateWidget\000"
 6966      656E7365 
 6966      5F435344 
 6966      43616C69 
 6966      62726174 
 6967              	.LASF123:
 6968 0a41 6761696E 		.ascii	"gainReg\000"
 6968      52656700 
 6969              	.LASF181:
 6970 0a49 6D696E53 		.ascii	"minSnsClkDivTmp\000"
 6970      6E73436C 
 6970      6B446976 
 6970      546D7000 
 6971              	.LASF207:
 6972 0a59 43617053 		.ascii	"CapSense_dsFlash\000"
 6972      656E7365 
 6972      5F647346 
 6972      6C617368 
 6972      00
 6973              	.LASF28:
 6974 0a6a 66696E67 		.ascii	"fingerCap\000"
 6974      65724361 
 6974      7000
 6975              	.LASF220:
 6976 0a74 43617053 		.ascii	"CapSense_CSDScanExt\000"
 6976      656E7365 
 6976      5F435344 
 6976      5363616E 
 6976      45787400 
 6977              	.LASF80:
 6978 0a88 77646774 		.ascii	"wdgtStatus\000"
 6978      53746174 
 6978      757300
 6979              	.LASF227:
 6980 0a93 536D6172 		.ascii	"SmartSense_TunePrescalers\000"
 6980      7453656E 
 6980      73655F54 
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 194


 6980      756E6550 
 6980      72657363 
 6981              	.LASF234:
 6982 0aad 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_Sensing.c\000"
 6982      72617465 
 6982      645F536F 
 6982      75726365 
 6982      5C50536F 
 6983              	.LASF223:
 6984 0ad7 43617053 		.ascii	"CapSense_CSDConnectSns\000"
 6984      656E7365 
 6984      5F435344 
 6984      436F6E6E 
 6984      65637453 
 6985              	.LASF43:
 6986 0aee 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 6986      656E7365 
 6986      5F53454E 
 6986      53455F4D 
 6986      4554484F 
 6987              	.LASF213:
 6988 0b0a 43617053 		.ascii	"CapSense_currentSenseMethod\000"
 6988      656E7365 
 6988      5F637572 
 6988      72656E74 
 6988      53656E73 
 6989              	.LASF174:
 6990 0b26 70727353 		.ascii	"prsSize\000"
 6990      697A6500 
 6991              	.LASF59:
 6992 0b2e 73697A65 		.ascii	"sizetype\000"
 6992      74797065 
 6992      00
 6993              	.LASF100:
 6994 0b37 64725368 		.ascii	"drShift\000"
 6994      69667400 
 6995              	.LASF5:
 6996 0b3f 6C6F6E67 		.ascii	"long unsigned int\000"
 6996      20756E73 
 6996      69676E65 
 6996      6420696E 
 6996      7400
 6997              	.LASF171:
 6998 0b51 72657456 		.ascii	"retVal\000"
 6998      616C00
 6999              	.LASF27:
 7000 0b58 76526566 		.ascii	"vRef\000"
 7000      00
 7001              	.LASF55:
 7002 0b5d 69646163 		.ascii	"idacMod\000"
 7002      4D6F6400 
 7003              	.LASF224:
 7004 0b65 43617053 		.ascii	"CapSense_ISR_StartEx\000"
 7004      656E7365 
 7004      5F495352 
 7004      5F537461 
 7004      72744578 
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 195


 7005              	.LASF107:
 7006 0b7a 70747232 		.ascii	"ptr2DebounceArr\000"
 7006      4465626F 
 7006      756E6365 
 7006      41727200 
 7007              	.LASF49:
 7008 0b8a 66696E67 		.ascii	"fingerTh\000"
 7008      65725468 
 7008      00
 7009              	.LASF67:
 7010 0b93 62736C6E 		.ascii	"bslnExt\000"
 7010      45787400 
 7011              	.LASF125:
 7012 0b9b 43617053 		.ascii	"CapSense_IDAC_GAIN_TABLE_STRUCT\000"
 7012      656E7365 
 7012      5F494441 
 7012      435F4741 
 7012      494E5F54 
 7013              	.LASF61:
 7014 0bbb 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 7014      656E7365 
 7014      5F52414D 
 7014      5F57445F 
 7014      42555454 
 7015              	.LASF17:
 7016 0bd9 63797374 		.ascii	"cystatus\000"
 7016      61747573 
 7016      00
 7017              	.LASF1:
 7018 0be2 756E7369 		.ascii	"unsigned char\000"
 7018      676E6564 
 7018      20636861 
 7018      7200
 7019              	.LASF185:
 7020 0bf0 6D617849 		.ascii	"maxIdacComp\000"
 7020      64616343 
 7020      6F6D7000 
 7021              	.LASF9:
 7022 0bfc 5F5F7569 		.ascii	"__uint32_t\000"
 7022      6E743332 
 7022      5F7400
 7023              	.LASF150:
 7024 0c07 43617053 		.ascii	"CapSense_SetPinState\000"
 7024      656E7365 
 7024      5F536574 
 7024      50696E53 
 7024      74617465 
 7025              	.LASF108:
 7026 0c1c 73746174 		.ascii	"staticConfig\000"
 7026      6963436F 
 7026      6E666967 
 7026      00
 7027              	.LASF22:
 7028 0c29 73656E73 		.ascii	"sensorCap\000"
 7028      6F724361 
 7028      7000
 7029              	.LASF149:
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 196


 7030 0c33 696F5074 		.ascii	"ioPtr\000"
 7030      7200
 7031              	.LASF91:
 7032 0c39 7363616E 		.ascii	"scanCurrentISC\000"
 7032      43757272 
 7032      656E7449 
 7032      534300
 7033              	.LASF104:
 7034 0c48 70747232 		.ascii	"ptr2WdgtRam\000"
 7034      57646774 
 7034      52616D00 
 7035              	.LASF20:
 7036 0c54 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 7036      656E7365 
 7036      5F544852 
 7036      4553484F 
 7036      4C445F54 
 7037              	.LASF180:
 7038 0c6c 6D696E53 		.ascii	"minSnsClkDiv\000"
 7038      6E73436C 
 7038      6B446976 
 7038      00
 7039              	.LASF218:
 7040 0c79 43617053 		.ascii	"CapSense_CSDScan\000"
 7040      656E7365 
 7040      5F435344 
 7040      5363616E 
 7040      00
 7041              	.LASF45:
 7042 0c8a 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
 7042      656E7365 
 7042      5F53454E 
 7042      53455F4D 
 7042      4554484F 
 7043              	.LASF145:
 7044 0ca7 73746174 		.ascii	"state\000"
 7044      6500
 7045              	.LASF147:
 7046 0cad 656C7464 		.ascii	"eltdIndex\000"
 7046      496E6465 
 7046      7800
 7047              	.LASF139:
 7048 0cb7 43617053 		.ascii	"CapSense_ScanAllWidgets\000"
 7048      656E7365 
 7048      5F536361 
 7048      6E416C6C 
 7048      57696467 
 7049              	.LASF97:
 7050 0ccf 6873696F 		.ascii	"hsiomMask\000"
 7050      6D4D6173 
 7050      6B00
 7051              	.LASF57:
 7052 0cd9 736E7343 		.ascii	"snsClk\000"
 7052      6C6B00
 7053              	.LASF203:
 7054 0ce0 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 7054      656E7365 
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 197


 7054      5F537353 
 7054      77697463 
 7054      6853656E 
 7055              	.LASF221:
 7056 0cfd 4379456E 		.ascii	"CyEnterCriticalSection\000"
 7056      74657243 
 7056      72697469 
 7056      63616C53 
 7056      65637469 
 7057              	.LASF212:
 7058 0d14 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 7058      656E7365 
 7058      5F637572 
 7058      52616D53 
 7058      6E735074 
 7059              	.LASF0:
 7060 0d2a 7369676E 		.ascii	"signed char\000"
 7060      65642063 
 7060      68617200 
 7061              	.LASF214:
 7062 0d36 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 7062      656E7365 
 7062      5F736361 
 7062      6E467265 
 7062      71496E64 
 7063              	.LASF66:
 7064 0d4d 62736C6E 		.ascii	"bsln\000"
 7064      00
 7065              	.LASF3:
 7066 0d52 73686F72 		.ascii	"short unsigned int\000"
 7066      7420756E 
 7066      7369676E 
 7066      65642069 
 7066      6E7400
 7067              	.LASF33:
 7068 0d65 4155544F 		.ascii	"AUTO_TUNE_CONFIG_TYPE\000"
 7068      5F54554E 
 7068      455F434F 
 7068      4E464947 
 7068      5F545950 
 7069              	.LASF205:
 7070 0d7b 696E6974 		.ascii	"initStatus\000"
 7070      53746174 
 7070      757300
 7071              	.LASF208:
 7072 0d86 43617053 		.ascii	"CapSense_ioList\000"
 7072      656E7365 
 7072      5F696F4C 
 7072      69737400 
 7073              	.LASF158:
 7074 0d96 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 7074      656E7365 
 7074      5F537350 
 7074      6F737441 
 7074      6C6C5769 
 7075              	.LASF103:
 7076 0db4 70747232 		.ascii	"ptr2SnsFlash\000"
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 198


 7076      536E7346 
 7076      6C617368 
 7076      00
 7077              	.LASF133:
 7078 0dc1 6C667372 		.ascii	"lfsrDither\000"
 7078      44697468 
 7078      657200
 7079              	.LASF165:
 7080 0dcc 6E657752 		.ascii	"newRegValue\000"
 7080      65675661 
 7080      6C756500 
 7081              	.LASF183:
 7082 0dd8 6D617852 		.ascii	"maxRaw\000"
 7082      617700
 7083              	.LASF11:
 7084 0ddf 75696E74 		.ascii	"uint8\000"
 7084      3800
 7085              	.LASF15:
 7086 0de5 646F7562 		.ascii	"double\000"
 7086      6C6500
 7087              	.LASF69:
 7088 0dec 6E656742 		.ascii	"negBslnRstCnt\000"
 7088      736C6E52 
 7088      7374436E 
 7088      7400
 7089              	.LASF34:
 7090 0dfa 70617261 		.ascii	"param0\000"
 7090      6D3000
 7091              	.LASF35:
 7092 0e01 70617261 		.ascii	"param1\000"
 7092      6D3100
 7093              	.LASF36:
 7094 0e08 70617261 		.ascii	"param2\000"
 7094      6D3200
 7095              	.LASF37:
 7096 0e0f 70617261 		.ascii	"param3\000"
 7096      6D3300
 7097              	.LASF38:
 7098 0e16 70617261 		.ascii	"param4\000"
 7098      6D3400
 7099              	.LASF39:
 7100 0e1d 70617261 		.ascii	"param5\000"
 7100      6D3500
 7101              	.LASF40:
 7102 0e24 70617261 		.ascii	"param6\000"
 7102      6D3600
 7103              	.LASF126:
 7104 0e2b 736E7343 		.ascii	"snsClkDivider\000"
 7104      6C6B4469 
 7104      76696465 
 7104      7200
 7105              	.LASF175:
 7106 0e39 6D6F6443 		.ascii	"modClkDivider\000"
 7106      6C6B4469 
 7106      76696465 
 7106      7200
 7107              	.LASF74:
ARM GAS  C:\Users\adm\AppData\Local\Temp\ccb3zq0b.s 			page 199


 7108 0e47 64657669 		.ascii	"deviceId\000"
 7108      63654964 
 7108      00
 7109              	.LASF135:
 7110 0e50 77696467 		.ascii	"widgetStatus\000"
 7110      65745374 
 7110      61747573 
 7110      00
 7111              	.LASF120:
 7112 0e5d 43617053 		.ascii	"CapSense_BIST_CSX_SNS_CAP_E\000"
 7112      656E7365 
 7112      5F424953 
 7112      545F4353 
 7112      585F534E 
 7113              	.LASF134:
 7114 0e79 77696467 		.ascii	"widgetId\000"
 7114      65744964 
 7114      00
 7115              	.LASF211:
 7116 0e82 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 7116      656E7365 
 7116      5F726571 
 7116      75657374 
 7116      5363616E 
 7117              	.LASF190:
 7118 0ea0 43617053 		.ascii	"CapSense_SsInitializeSourceSenseClk\000"
 7118      656E7365 
 7118      5F537349 
 7118      6E697469 
 7118      616C697A 
 7119              	.LASF216:
 7120 0ec4 43617053 		.ascii	"CapSense_idacGainTable\000"
 7120      656E7365 
 7120      5F696461 
 7120      63476169 
 7120      6E546162 
 7121              	.LASF72:
 7122 0edb 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 7122      656E7365 
 7122      5F52414D 
 7122      5F534E53 
 7122      5F4C4953 
 7123              	.LASF114:
 7124 0ef8 77646774 		.ascii	"wdgtArray\000"
 7124      41727261 
 7124      7900
 7125              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

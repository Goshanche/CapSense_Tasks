ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_SensingCSD_LL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_SsCSDSetModeSnsClockDivider,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_SsCSDSetModeSnsClockDivider, %function
  24              	CapSense_SsCSDSetModeSnsClockDivider:
  25              	.LFB1:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.c"
   1:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \file CapSense_SensingCSD_LL.c
   3:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \version 7.0
   4:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
   5:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   This file defines the data structure global variables and provides
   7:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   implementation for the low-level APIs of the CSD part of
   8:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   the Sensing module. The file contains the APIs used for the CSD block
   9:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   initialization, calibration, and scanning.
  10:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
  11:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \see CapSense v7.0 Datasheet
  12:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
  13:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *//*****************************************************************************
  14:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Copyright (2016-2019), Cypress Semiconductor Corporation.
  15:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ********************************************************************************
  16:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  17:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * protected by and subject to worldwide patent protection (United States and
  18:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * foreign), United States copyright laws and international treaty provisions.
  19:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  20:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * license to copy, use, modify, create derivative works of, and compile the
  21:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  22:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * custom software in support of licensee product to be used only in conjunction
  23:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  24:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Any reproduction, modification, translation, compilation, or representation of
  25:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * this software except as specified above is prohibited without the express
  26:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * written permission of Cypress.
  27:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
  28:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  29:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  30:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  31:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Cypress reserves the right to make changes without further notice to the
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 2


  32:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * materials described herein. Cypress does not assume any liability arising out
  33:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * of the application or use of any product or circuit described herein. Cypress
  34:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * does not authorize its products for use as critical components in life-support
  35:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * systems where a malfunction or failure may reasonably be expected to result in
  36:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  37:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * support systems application implies that the manufacturer assumes all risk of
  38:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  39:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * limited by and subject to the applicable Cypress software license agreement.
  40:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
  41:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #include "CapSense_Structure.h"
  42:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #include "CapSense_Configuration.h"
  43:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #include "CapSense_SensingCSD_LL.h"
  44:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  45:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #include "CapSense_SelfTest.h"
  46:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif
  47:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  48:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #include "cyapicallbacks.h"
  49:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  50:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  52:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /***************************************
  53:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * API Constants
  54:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ***************************************/
  55:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  56:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  57:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  58:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_AUTO_ZERO_EN)
  59:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_CSD_AZ_ENABLE_CFG                  (CapSense_CSD_AZ_EN_MASK)
  60:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
  61:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_CSD_AZ_ENABLE_CFG                  (0uL)
  62:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_AUTO_ZERO_EN) */
  63:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  64:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
  65:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_HSCMP_SCAN_MASK                    (CapSense_HSCMP_EN_MASK | CapSense_CSD_
  66:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                      CapSense_HSCMP_INVERT_MASK)
  67:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
  68:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_HSCMP_SCAN_MASK                    (CapSense_HSCMP_EN_MASK | CapSense_CSD_
  69:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG) */
  70:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  71:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_HSCMP_INIT_MASK                        (CapSense_HSCMP_EN_MASK | CapSense_CSD_
  72:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  73:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_SW_SHIELD_SEL                  (0x00000000uL)
  74:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_CSD_SW_DSI_SEL                 (CapSense_SW_DSI_SEL_CMODPAD | CapSense
  75:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_CSD_INTR_SET                   (0x00000000uL)
  76:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_SW_HS_P_SEL                    (0x00000000uL)
  77:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_SW_HS_N_SEL                    (0x00000000uL)
  78:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_CSD_SW_FW_TANK_SEL             (0x00000000uL)
  79:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_CSD_ADC_CTL                    (0x00000000uL)
  80:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_HSCMP_CFG                      (0x00000000uL)
  81:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  82:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* CY_ID285392 */
  83:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_FILTER_DELAY_MAX                   (CapSense_CONFIG_FILTER_DELAY_4_CYCLES)
  84:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_EXTRA_COUNTS_MAX                   (CapSense_FILTER_DELAY_MAX + 5u + 20u)
  85:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  86:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #else
  87:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  88:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set IDAC ranges */
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 3


  89:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_IDAC_GAIN_8X == CapSense_CSD_IDAC_GAIN)
  90:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_IDAC_MOD_RANGE         (CapSense_IDAC_MOD_RANGE_MASK)
  91:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_IDAC_COMP_RANGE        (CapSense_IDAC_COMP_RANGE_MASK)
  92:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
  93:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_IDAC_MOD_RANGE         (0u)
  94:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_IDAC_COMP_RANGE        (0u)
  95:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_IDAC_GAIN_8X == CapSense_CSD_IDAC_GAIN) */
  96:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  97:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Defining default IDACs configuration according to settings in customizer. */
  98:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
  99:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_CSD_IDAC_CONFIG        (CapSense_IDAC_MOD_MODE_VARIABLE |\
 100:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                  CapSense_IDAC_COMP_MODE_FIXED |\
 101:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                  CapSense_DEFAULT_IDAC_MOD_RANGE |\
 102:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                  CapSense_DEFAULT_IDAC_COMP_RANGE)
 103:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 104:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_CSD_IDAC_CONFIG        (CapSense_IDAC_MOD_MODE_VARIABLE |\
 105:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                  CapSense_DEFAULT_IDAC_MOD_RANGE)
 106:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 107:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 108:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 109:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 110:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 111:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /***************************************
 112:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Variables
 113:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ***************************************/
 114:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 115:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 116:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 CapSense_configCsd = CapSense_DEFAULT_CSD_CONFIG;
 117:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #else
 118:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 CapSense_configCsd = CapSense_DEFAULT_CSD_CONFIG | CapSense_DEFAULT_MODULATION_MODE;
 119:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static uint32 CapSense_counterResolution = CapSense_CNT_RESOLUTION_12_BITS;
 120:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 121:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 122:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /* Flag to indicate electrodes that were connected previously */
 123:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** static uint8 CapSense_eleCsdDisconnectFlag = 0u;
 124:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if ((CapSense_ENABLE == CapSense_CSDV2) && (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN))
 125:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Number of re-samplings when the bad conversion occurs */
 126:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint8 CapSense_badConversionsNum = CapSense_BAD_CONVERSIONS_NUM;
 127:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 128:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 129:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 130:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 131:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Static Function Prototypes
 132:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
 133:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 134:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /**
 135:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \cond SECTION_C_INTERNAL
 136:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \addtogroup group_c_internal
 137:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \{
 138:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** */
 139:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 140:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 141:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static void CapSense_SsSetShieldDelay(uint32 delay);
 142:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)
 143:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static void CapSense_SsCSDEnableShieldTank(void);
 144:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN) */
 145:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 4


 146:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 147:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if ((CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) || \
 148:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****      (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN))
 149:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static cystatus CapSense_SsCSDCalibrateCheck(uint32 widgetId, uint32 target);
 150:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static void CapSense_SsCSDCalibrate(uint32 widgetId, uint32 target);
 151:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 152:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static void CapSense_SsCSDNormalizeIdac(CapSense_FLASH_WD_STRUCT const *ptrFlashWidget, uin
 153:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
 154:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTO_GAIN_EN)
 155:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static uint32 CapSense_SsCSDSwitchIdacGain(CapSense_FLASH_WD_STRUCT const *ptrFlashWidget);
 156:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
 157:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* ((CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) || \
 158:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****            (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN))  */
 159:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 160:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 161:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static void CapSense_SsCSDSetFilterDelay(void);
 162:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #else
 163:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_INLINE static void CapSense_SsCSDClockRestart(void);
 164:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 165:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** CY_INLINE static void CapSense_SsCSDCmodPrecharge(void);
 166:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** CY_INLINE static void CapSense_SsCSDTriggerScan(void);
 167:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** static void CapSense_SsCSDConfigIDACs(void);
 168:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** static void CapSense_SsCSDSetModeSnsClockDivider(uint32 snsClkSource, uint32 snsClkDivider);
 169:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 170:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /** \}
 171:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \endcond */
 172:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 173:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 174:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 175:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
 176:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsSetShieldDelay
 177:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
 178:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 179:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
 180:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   This is an internal function that sets a shield delay.
 181:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 182:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
 183:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   The function updates the CSD configuration register bits that define the shield
 184:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   signal delay relatively to the sense signal.
 185:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 186:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param delay
 187:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   Specifies the shield delay value:
 188:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    PSoC 4100/4200 value interpretation:
 189:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         0 - no delay
 190:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         1 - 1 cycle of HFCLK
 191:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         2 - 2 cycles of HFCLK
 192:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    Third-generation HW block (except 4100/4200 devices):
 193:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         0 - no delay
 194:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         3 - 10ns delay
 195:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         2 - 50ns delay
 196:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    Fourth-generation HW block:
 197:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         0 - no delay
 198:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         1 - 5ns delay
 199:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         2 - 10ns delay
 200:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         3 - 20ns delay
 201:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 202:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 5


 203:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static void CapSense_SsSetShieldDelay(uint32 delay)
 204:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 205:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Update CSD config register shield delay bits with shield delay value */
 206:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_configCsd &= (uint32)(~CapSense_CONFIG_SHIELD_DELAY_MASK);
 207:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_configCsd |= (delay << CapSense_SHIELD_DELAY_SHIFT);
 208:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 209:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 210:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)
 211:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*******************************************************************************
 212:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * Function Name: CapSense_SsCSDEnableShieldTank
 213:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ****************************************************************************//**
 214:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 215:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \brief
 216:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   This function configures Csh pin
 217:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 218:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \details
 219:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   The function updates the CSH_HSIOM register to connect Csh to AMUXBUS-B.
 220:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   For Third-generation HW block it additionally sets Strong drive mode for Csh
 221:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   and applies High level to Csh pin when precharge is set to IO buffer.
 222:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 223:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *******************************************************************************/
 224:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static void CapSense_SsCSDEnableShieldTank(void)
 225:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 226:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Update the CSH_HSIOM register to connect Csh to AMUXBUS-B */
 227:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_CSH_HSIOM_MASK,
 228:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         (uint32)(CapSense_HSIOM_SEL_AMUXB << CapSense_CSH_HSIOM_SHIFT));
 229:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 230:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
 231:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                  (CapSense_DISABLE == CapSense_CSDV2))
 232:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Set Strong drive mode for Csh */
 233:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_PC_PTR,
 234:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             (uint32)(CapSense_CSH_PC_MASK << CapSense_CSH_PC_SHIFT),
 235:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             (uint32)(CapSense_CSH_PC_STRONG_MODE << CapSense_CSH_PC_SHIFT));
 236:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Appliy High level to Csh pin for Csh */
 237:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR, (uint32)(CapSense_DR_MASK << CapSense_C
 238:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #else
 239:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Set output port register to 0 to connect to GND */
 240:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR, (uint32)(CapSense_DR_MASK << CapSense_C
 241:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
 242:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 243:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN) */
 244:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 245:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (0u != CapSense_CSD_TOTAL_SHIELD_COUNT)
 246:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*******************************************************************************
 247:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * Function Name: CapSense_SsCSDEnableShieldElectrodes
 248:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ****************************************************************************//**
 249:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 250:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \brief
 251:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   This internal function initializes Shield Electrodes.
 252:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 253:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \details
 254:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   The function sets the bit in the HSIOM register which enables the shield electrode
 255:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   functionality on the pin. The port and pin configurations are stored in
 256:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   the CapSense_shieldIoList structure.
 257:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 258:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *******************************************************************************/
 259:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         void CapSense_SsCSDEnableShieldElectrodes(void)
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 6


 260:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 261:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDSetShieldElectrodesState(CapSense_SNS_CONNECTION_SHIELD);
 262:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 263:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 264:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 265:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*******************************************************************************
 266:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * Function Name: CapSense_SsCSDDisableShieldElectrodes
 267:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ****************************************************************************//**
 268:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 269:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \brief
 270:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   This internal function disables Shield Electrodes.
 271:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 272:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \details
 273:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   The function resets the bit in the HSIOM register which disables the shield
 274:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   electrode functionality on the pin. The port and pin configurations are
 275:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   stored in  the CapSense_shieldIoList structure.
 276:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 277:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *******************************************************************************/
 278:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         void CapSense_SsCSDDisableShieldElectrodes(void)
 279:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 280:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDSetShieldElectrodesState(CapSense_SNS_CONNECTION_GROUND);
 281:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 282:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 283:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 284:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*******************************************************************************
 285:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * Function Name: CapSense_SsCSDSetShieldElectrodesState
 286:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ****************************************************************************//**
 287:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 288:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \brief
 289:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   Sets specified shield electrode pin connection state for all dedicated
 290:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   shield electrodes.
 291:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 292:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \details
 293:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   The function updates following registers for each shield
 294:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   electrode:
 295:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - port configuration register
 296:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - pin data register
 297:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - pin HSIOM register
 298:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   The shield electrodes port and pin configuration registers addresses are
 299:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   stored in the CapSense_shieldIoList structure.
 300:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 301:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \param state
 302:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   A new state of the shield electrodes. Available values:
 303:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - CapSense_SNS_CONNECTION_GROUND - disconnects electrode from
 304:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *       CSD hardware block and sets it to GPIO mode with Strong Drive
 305:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - CapSense_SNS_CONNECTION_HIGHZ - disconnects electrode from
 306:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *       CSD hardware block and sets it to GPIO mode with Analog Hi-Z
 307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - CapSense_SNS_CONNECTION_SHIELD - connects electrode to
 308:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *       CSD hardware block
 309:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - CapSense_SNS_CONNECTION_UNDEFINED - sets the same electrode
 310:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *       connection as for CapSense_SNS_CONNECTION_GROUND
 311:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 312:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *******************************************************************************/
 313:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         void CapSense_SsCSDSetShieldElectrodesState(uint32 state)
 314:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 315:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint8  interruptState;
 316:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 7


 317:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 loopIndex;
 318:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 319:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 newPinPcVal;
 320:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 newPinHsiomVal;
 321:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 322:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 tmpPcDrRegValue;
 323:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 tmpHsiomRegValue;
 324:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 325:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SHIELD_IO_STRUCT const *shieldIoPtr;
 326:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 327:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             switch(state)
 328:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 329:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 case CapSense_SNS_CONNECTION_GROUND:
 330:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinPcVal = CY_SYS_PINS_DM_STRONG;
 331:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 332:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     break;
 333:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 case CapSense_SNS_CONNECTION_HIGHZ:
 334:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
 335:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 336:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     break;
 337:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 case CapSense_SNS_CONNECTION_SHIELD:
 338:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
 339:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinHsiomVal = CapSense_HSIOM_SEL_CSD_SHIELD;
 340:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     break;
 341:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 default:
 342:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinPcVal = CY_SYS_PINS_DM_STRONG;
 343:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 344:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     break;
 345:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 346:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 347:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             shieldIoPtr = &CapSense_shieldIoList[0u];
 348:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for (loopIndex = 0u; loopIndex < CapSense_CSD_TOTAL_SHIELD_COUNT; loopIndex++)
 349:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 350:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 interruptState = CyEnterCriticalSection();
 351:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 352:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpHsiomRegValue = CY_GET_REG32 (shieldIoPtr->hsiomPtr);
 353:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpHsiomRegValue &= ~(shieldIoPtr->hsiomMask);
 354:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32 (shieldIoPtr->hsiomPtr, tmpHsiomRegValue);
 355:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 356:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue = CY_GET_REG32 (shieldIoPtr->pcPtr);
 357:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << shieldIoPtr->shift);
 358:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue |=  (newPinPcVal << shieldIoPtr->shift);
 359:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32 (shieldIoPtr->pcPtr, tmpPcDrRegValue);
 360:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 361:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpHsiomRegValue |=  (newPinHsiomVal << shieldIoPtr->hsiomShift);
 362:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32 (shieldIoPtr->hsiomPtr, tmpHsiomRegValue);
 363:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 364:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue = CY_GET_REG32 (shieldIoPtr->drPtr);
 365:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue &= ~(1uL << shieldIoPtr->drShift);
 366:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32 (shieldIoPtr->drPtr, tmpPcDrRegValue);
 367:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 368:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CyExitCriticalSection(interruptState);
 369:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 370:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Get next electrode */
 371:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 shieldIoPtr++;
 372:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 373:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 8


 374:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (0u != CapSense_CSD_TOTAL_SHIELD_COUNT) */
 375:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 376:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 377:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 378:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 379:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDSetModeSnsClockDivider
 380:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 381:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 382:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 383:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   Sets sense source and Sense Clock Divider
 384:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 385:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 386:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   For Fourth-generation HW block: Updates CapSense_SENSE_PERIOD register with
 387:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   sense source and Sense Clock Divider.
 388:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   For Third-generation HW block: Updates CapSense_configCsd variable with
 389:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   sense source and sets sense clock divider.
 390:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 391:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param
 392:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   snsClkSource The sense source for the sense clock.
 393:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param
 394:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   snsClkDivider The divider value for the sense clock.
 395:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 396:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
 397:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** static void CapSense_SsCSDSetModeSnsClockDivider(uint32 snsClkSource, uint32 snsClkDivider)
 398:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
  27              		.loc 1 398 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 399:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 400:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Update reg value with divider and configuration */
 401:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, snsClkSource | (snsClkDivider - 1u));
  33              		.loc 1 401 0
  34 0000 0139     		subs	r1, r1, #1
  35              	.LVL1:
  36 0002 0843     		orrs	r0, r1
  37              	.LVL2:
  38 0004 014B     		ldr	r3, .L2
  39 0006 1860     		str	r0, [r3]
 402:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 403:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set configuration */
 404:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_configCsd &= ~(CapSense_CONFIG_PRS_SELECT_MASK | CapSense_CSD_PRS_12_BIT);
 405:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_configCsd |= snsClkSource;
 406:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 407:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set sense clock divider */
 408:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsSetSnsClockDivider(snsClkDivider);
 409:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 410:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
  40              		.loc 1 410 0
  41              		@ sp needed
  42 0008 7047     		bx	lr
  43              	.L3:
  44 000a C046     		.align	2
  45              	.L2:
  46 000c 00020B40 		.word	1074463232
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 9


  47              		.cfi_endproc
  48              	.LFE1:
  49              		.size	CapSense_SsCSDSetModeSnsClockDivider, .-CapSense_SsCSDSetModeSnsClockDivider
  50              		.global	__aeabi_uidiv
  51              		.section	.text.CapSense_SsCSDSetFilterDelay,"ax",%progbits
  52              		.align	2
  53              		.code	16
  54              		.thumb_func
  55              		.type	CapSense_SsCSDSetFilterDelay, %function
  56              	CapSense_SsCSDSetFilterDelay:
  57              	.LFB2:
 411:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 412:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 413:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 414:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
 415:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsCSDSetFilterDelay
 416:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
 417:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 418:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
 419:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   Sets the filter delay for Fourth-generation HW block.
 420:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 421:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
 422:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   This function updates Fourth-generation HW block configuration
 423:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   variable CapSense_configCsd
 424:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   with the filter delay which depends on the sample clock frequency.
 425:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   This variable is written into register during enabling
 426:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   Fourth-generation HW block .
 427:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 428:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
 429:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static void CapSense_SsCSDSetFilterDelay(void)
 430:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
  58              		.loc 1 430 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62 0000 10B5     		push	{r4, lr}
  63              		.cfi_def_cfa_offset 8
  64              		.cfi_offset 4, -8
  65              		.cfi_offset 14, -4
 431:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 432:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 sampleClkFreqHz;
 433:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 434:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 435:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_configCsd &= ~CapSense_CONFIG_FILTER_DELAY_MASK;
  66              		.loc 1 435 0
  67 0002 0F4B     		ldr	r3, .L8
  68 0004 1B68     		ldr	r3, [r3]
  69 0006 7022     		movs	r2, #112
  70 0008 9343     		bics	r3, r2
  71 000a 1C00     		movs	r4, r3
 436:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 437:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 438:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             sampleClkFreqHz = CYDEV_BCLK__HFCLK__HZ / (uint32)CapSense_dsRam.modCsdClk;
  72              		.loc 1 438 0
  73 000c 0D4B     		ldr	r3, .L8+4
  74 000e 997F     		ldrb	r1, [r3, #30]
  75 0010 0D48     		ldr	r0, .L8+8
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 10


  76 0012 FFF7FEFF 		bl	__aeabi_uidiv
  77              	.LVL3:
 439:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if(sampleClkFreqHz <= CapSense_MOD_CSD_CLK_12MHZ)
  78              		.loc 1 439 0
  79 0016 0D4B     		ldr	r3, .L8+12
  80 0018 9842     		cmp	r0, r3
  81 001a 04D8     		bhi	.L5
 440:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 441:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_configCsd |= CapSense_CONFIG_FILTER_DELAY_12MHZ;
  82              		.loc 1 441 0
  83 001c 2023     		movs	r3, #32
  84 001e 2343     		orrs	r3, r4
  85 0020 074A     		ldr	r2, .L8
  86 0022 1360     		str	r3, [r2]
  87 0024 0BE0     		b	.L4
  88              	.L5:
 442:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 443:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             else if(sampleClkFreqHz <= CapSense_MOD_CSD_CLK_24MHZ)
  89              		.loc 1 443 0
  90 0026 084B     		ldr	r3, .L8+8
  91 0028 9842     		cmp	r0, r3
  92 002a 04D8     		bhi	.L7
 444:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 445:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_configCsd |= CapSense_CONFIG_FILTER_DELAY_24MHZ;
  93              		.loc 1 445 0
  94 002c 3023     		movs	r3, #48
  95 002e 2343     		orrs	r3, r4
  96 0030 034A     		ldr	r2, .L8
  97 0032 1360     		str	r3, [r2]
  98 0034 03E0     		b	.L4
  99              	.L7:
 446:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 447:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             else
 448:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 449:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_configCsd |= CapSense_CONFIG_FILTER_DELAY_48MHZ;
 100              		.loc 1 449 0
 101 0036 4023     		movs	r3, #64
 102 0038 2343     		orrs	r3, r4
 103 003a 014A     		ldr	r2, .L8
 104 003c 1360     		str	r3, [r2]
 105              	.L4:
 450:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 451:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 452:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_configCsd |= CapSense_CONFIG_FILTER_DELAY_12MHZ;
 453:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 454:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 106              		.loc 1 454 0
 107              		@ sp needed
 108 003e 10BD     		pop	{r4, pc}
 109              	.L9:
 110              		.align	2
 111              	.L8:
 112 0040 00000000 		.word	.LANCHOR0
 113 0044 00000000 		.word	CapSense_dsRam
 114 0048 00366E01 		.word	24000000
 115 004c 001BB700 		.word	12000000
 116              		.cfi_endproc
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 11


 117              	.LFE2:
 118              		.size	CapSense_SsCSDSetFilterDelay, .-CapSense_SsCSDSetFilterDelay
 119              		.section	.text.CapSense_SsCSDConfigIDACs,"ax",%progbits
 120              		.align	2
 121              		.code	16
 122              		.thumb_func
 123              		.type	CapSense_SsCSDConfigIDACs, %function
 124              	CapSense_SsCSDConfigIDACs:
 125              	.LFB3:
 455:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
 456:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 457:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 458:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 459:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDConfigIDACs
 460:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 461:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 462:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 463:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   Configures the mode for IDAC registers
 464:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 465:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 466:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   This function configures the IDAC modes depend on Compensation IDAC
 467:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   enabled or disabled.
 468:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 469:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
 470:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** static void CapSense_SsCSDConfigIDACs(void)
 471:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
 126              		.loc 1 471 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 472:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 473:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_CSD_IDACA_PTR, CapSense_IDAC_MOD_DEFAULT_CFG);
 131              		.loc 1 473 0
 132 0000 034A     		ldr	r2, .L11
 133 0002 044B     		ldr	r3, .L11+4
 134 0004 1A60     		str	r2, [r3]
 474:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 475:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CSD_IDACB_PTR, CapSense_IDAC_COMP_DEFAULT_CFG);
 135              		.loc 1 475 0
 136 0006 C522     		movs	r2, #197
 137 0008 5204     		lsls	r2, r2, #17
 138 000a 034B     		ldr	r3, .L11+8
 139 000c 1A60     		str	r2, [r3]
 476:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 477:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 478:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 479:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_IDAC_PTR, CapSense_DEFAULT_CSD_IDAC_CONFIG);
 480:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 481:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_IDAC_PTR, CY_GET_REG32(CapSense_IDAC_PTR) &
 482:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                 ~(CapSense_IDAC_MOD_MODE_MASK |
 483:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                   CapSense_IDAC_MOD_MASK));
 484:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_IDAC_PTR, CY_GET_REG32(CapSense_IDAC_PTR) |
 485:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                  CapSense_DEFAULT_CSD_IDAC_CONFIG);
 486:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 487:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 488:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 12


 140              		.loc 1 488 0
 141              		@ sp needed
 142 000e 7047     		bx	lr
 143              	.L12:
 144              		.align	2
 145              	.L11:
 146 0010 00008F01 		.word	26148864
 147 0014 C0010B40 		.word	1074463168
 148 0018 C4010B40 		.word	1074463172
 149              		.cfi_endproc
 150              	.LFE3:
 151              		.size	CapSense_SsCSDConfigIDACs, .-CapSense_SsCSDConfigIDACs
 152              		.section	.text.CapSense_SsCSDCalibrateCheck,"ax",%progbits
 153              		.align	2
 154              		.code	16
 155              		.thumb_func
 156              		.type	CapSense_SsCSDCalibrateCheck, %function
 157              	CapSense_SsCSDCalibrateCheck:
 158              	.LFB19:
 489:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 490:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 491:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 492:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDInitialize
 493:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 494:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 495:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 496:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   This API initializes the CSD module.
 497:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 498:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 499:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The function performs the following steps for Fourth-generation HW block:
 500:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   1) Sets GPIO output to "0" for all sensor pins;
 501:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   2) Connects CMOD to AMUXBUS-A and to CSDBUS-A;
 502:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   3) Connects CMOD to (sense path) to CSDCOMP;
 503:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   4) Connects Csh_tank to AMUXBUS-B and to CSDBUS-B;
 504:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   5) Connects VREF to REFGEN;
 505:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   6) Configures REFGEN and sets the reference voltage;
 506:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   7) Connects VREF to CSDCOMP and HSCOMP;
 507:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   8) Configures IDAC and connect to CSDBUS-A (to drive CMOD);
 508:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   9) Configures ModClk;
 509:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   10) Configure SnsClk source;
 510:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   11) Sets other CSD configurations (Csd Auto Zero time,
 511:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *       Sample Init period, interrupts,
 512:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *       CMOD and Csh_tank/shield initialization switch resistance).
 513:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 514:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The function performs the following steps for Third-generation HW block:
 515:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   1) Sets all the sensors to the inactive state;
 516:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   2) Enables Shield Electrodes;
 517:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   3) Configures the CSD block and IDACs;
 518:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   4) Connects Cmod to AMUXBUS-A;
 519:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   5) Enables the clocks;
 520:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   6) Sets the shield delay;
 521:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   7) Enables the CSD block; connects Vref Buffer to the AMUX bus.
 522:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 523:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
 524:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDInitialize(void)
 525:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
 526:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 13


 527:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 newRegValue;
 528:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
 529:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 530:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set all the sensors to inactive state */
 531:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     if(CapSense_dsRam.scanCurrentISC != CapSense_dsRam.scanCsdISC)
 532:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 533:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsSetAllIOsState((uint32)CapSense_dsRam.scanCsdISC);
 534:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_dsRam.scanCurrentISC = CapSense_dsRam.scanCsdISC;
 535:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 536:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 537:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 538:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect shields to AMUX-B bus (config HSIOM regs) */
 539:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (0u != CapSense_CSD_TOTAL_SHIELD_COUNT)
 540:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDEnableShieldElectrodes();
 541:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (0u != CapSense_CSD_TOTAL_SHIELD_COUNT) */
 542:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 543:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)
 544:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Configure Csh */
 545:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDEnableShieldTank();
 546:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN) */
 547:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 548:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 549:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 550:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 551:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_DischargeExtCapacitors(CapSense_EXT_CAP_DISCHARGE_TIME);
 552:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 553:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Initialize the unused CSD registers to defaut state */
 554:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SENSE_DUTY_PTR, CapSense_DEFAULT_SENSE_DUTY_SEL);
 555:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 556:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure VREF */
 557:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 558:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue |= CapSense_DEFAULT_SW_REFGEN_SEL;
 559:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 560:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 561:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_INTR_SET_PTR,         CapSense_DEFAULT_CSD_INTR_SET);
 562:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR,   CapSense_DEFAULT_CSD_SW_FW_TANK_SEL);
 563:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_DSI_SEL_PTR,       CapSense_DEFAULT_CSD_SW_DSI_SEL);
 564:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_ADC_CTL_PTR,          CapSense_DEFAULT_CSD_ADC_CTL);
 565:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_AMBUF_PTR,            CapSense_AMBUF_PWR_MODE_OFF);
 566:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,    CapSense_DEFAULT_SW_SHIELD_SEL);
 567:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR,      CapSense_DEFAULT_SW_HS_P_SEL);
 568:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR,      CapSense_DEFAULT_SW_HS_N_SEL);
 569:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_HSCMP_PTR,            CapSense_DEFAULT_HSCMP_CFG);
 570:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 571:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect CMOD to AMUXBUS-A */
 572:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_CMOD_HSIOM_MASK,
 573:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     (uint32)(CapSense_HSIOM_SEL_AMUXA << CapSense_CMOD_HSIOM_SHIFT));
 574:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 575:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set output port register to 0 to connect to GND */
 576:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_WriteBitsSafe(CapSense_CMOD_DR_PTR, CapSense_Cmod__0__MASK, 0u);
 577:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 578:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect AMUXBUS-A to CSDBUS-A */
 579:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_SW_BYP_SEL_PTR);
 580:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue |= CapSense_SW_BYP_SEL_SW_BYA_MASK;
 581:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_BYP_SEL_PTR, newRegValue);
 582:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 583:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect CMOD to (sense path) to CSDCOMP */
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 14


 584:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD__CMOD_PAD == CapSense_CMOD_CONNECTION)
 585:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_CMP_P_SEL_PTR, CapSense_SW_CMP_P_SEL_SW_SFPM_STATIC_CLOSE);
 586:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #elif (CapSense_CSD__CSHIELD_PAD == CapSense_CMOD_CONNECTION)
 587:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_CMP_P_SEL_PTR, CapSense_SW_CMP_P_SEL_SW_SFPS_STATIC_CLOSE);
 588:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 589:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_CMP_P_SEL_PTR, CapSense_SW_CMP_P_SEL_SW_SFPT_STATIC_CLOSE);
 590:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD__CMOD_PAD == CapSense_CMOD_CONNECTION) */
 591:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 592:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure shield driving path */
 593:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 594:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect AMUXBUS-B to CSDBUS-B (and AMUXBUS-A to CSDBUS-A ) */
 595:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_BYP_SEL_PTR, CapSense_SW_BYP_SEL_SW_BYA_MASK | CapSense_SW_BYP
 596:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 597:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect AMUXBUS-B to HSCMP positive input */
 598:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR, 0x00000000uL);
 599:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 600:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 601:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure VREF */
 602:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 603:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect VREF to REFGEN. Connect IDACB to CSDBUSA */
 604:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 605:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= CapSense_SW_REFGEN_SEL_SW_SGR_MASK | CapSense_SW_REFGEN_SEL_SW_IAIB_MASK
 606:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 607:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 608:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect VREF to REFGEN (IAIB switch is open) */
 609:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 610:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= CapSense_SW_REFGEN_SEL_SW_SGR_MASK;
 611:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 612:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 613:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 614:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect VREFHI (from RefGen) to CSDCOMP when Vdda >= 2 V */
 615:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_CMP_N_SEL_PTR, CapSense_SW_CMP_N_SEL_SW_SCRH_STATIC_CLOSE);
 616:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 617:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_2000_MV > CapSense_CYDEV_VDDA_MV)
 618:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 619:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Configure REFGEN. Set reference voltage when Vdda < 2 V */
 620:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_REFGEN_PTR, CapSense_REFGEN_LV);
 621:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 622:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect Vrefhi to AMUBUF positive input when Vdaa < 2V
 623:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              *  Connect AMUBUF to SCDCMP negative input when Vdaa < 2V
 624:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              */
 625:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 626:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
 627:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR, CapSense_SW_AMUXBUF_SEL_SW_IRH_STATIC
 628:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                           CapSense_SW_AMUXBUF_SEL_S
 629:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #else
 630:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR, CapSense_SW_AMUXBUF_SEL_SW_DEFAULT);
 631:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 632:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_AMBUF_PTR, CapSense_AMBUF_PWR_MODE_NORM);
 633:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #else
 634:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_AMBUF_PTR, CapSense_AMBUF_PWR_MODE_OFF);
 635:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 636:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 637:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect VREFHI to HSCOMP */
 638:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR, CapSense_SW_HS_N_SEL_SW_HCRH_STATIC_CLOSE);
 639:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 640:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 15


 641:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Configure REFGEN. Set reference voltage when Vdda >= 2 V */
 642:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_REFGEN_PTR, CapSense_REFGEN_HV);
 643:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 644:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 645:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Turn on CSD_AMBUF high power level when Vdaa >= 2V */
 646:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_AMBUF_PTR, CapSense_AMBUF_PWR_MODE_HI);
 647:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 648:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_IDAC_SINKING != CapSense_CSD_IDAC_CONFIG)
 649:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR, CapSense_SW_AMUXBUF_SEL_SW_IRH_STATIC
 650:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                           CapSense_SW_AMUXBUF_SEL_S
 651:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #else
 652:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR, CapSense_SW_AMUXBUF_SEL_SW_DEFAULT);
 653:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif /* (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG) */
 654:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #else
 655:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR, CapSense_SW_AMUXBUF_SEL_SW_DEFAULT);
 656:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 657:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 658:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect VREFHI to HSCOMP */
 659:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR, CapSense_SW_HS_N_SEL_SW_HCRH_STATIC_CLOSE);
 660:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_2000_MV > CapSense_CYDEV_VDDA_MV) */
 661:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 662:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure IDACs mode */
 663:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConfigIDACs();
 664:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 665:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure ModClk */
 666:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsSetModClkClockDivider((uint32)CapSense_dsRam.modCsdClk);
 667:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 668:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set other CSD configurations */
 669:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 670:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsSetShieldDelay(CapSense_CSD_SHIELD_DELAY);
 671:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 672:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 673:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure HW block filter delay */
 674:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDSetFilterDelay();
 675:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 676:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_DISABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 677:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Enable power to sub-blocks */
 678:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd |
 679:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_CONFIG_SENSE_EN_MASK |
 680:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_CONFIG_ENABLE_MASK);
 681:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
 682:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 683:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set Csd Auto Zero time (set AZ_TIME bitmask) */
 684:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SEQ_TIME_PTR, CapSense_CSD_AUTO_ZERO_TIME);
 685:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 686:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Select CMOD and Csh_tank/shield initialization switch resistance */
 687:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_RES_PTR, 0x00000000);
 688:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 689:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set the number of dummy fine initialization cycles */
 690:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SEQ_INIT_CNT_PTR, CapSense_CSD_FINE_INIT_TIME);
 691:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 692:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 693:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 694:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure IDACs mode */
 695:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConfigIDACs();
 696:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 697:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect Cmod to AMUXBUS-A using HSIOM registers */
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 16


 698:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_CMOD_HSIOM_MASK,
 699:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     (uint32)(CapSense_HSIOM_SEL_AMUXA << CapSense_CMOD_HSIOM_SHIFT));
 700:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 701:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 702:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsSetShieldDelay(CapSense_CSD_SHIELD_DELAY);
 703:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 704:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 705:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable CSD block. Connect Vref Buffer to AMUX bus to make sure that Cmod is charged befo
 706:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 707:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
 708:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 709:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CONFIG_
 710:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif
 711:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 712:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 713:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if ((CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) &&\
 714:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****          (CapSense_CLK_SOURCE_DIRECT == CapSense_CSD_SNS_CLK_SOURCE))
 715:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****          /* Set clock dividers and clock source mode */
 716:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConfigClock();
 717:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
 718:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 719:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 720:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 721:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 722:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDElectrodeCheck
 723:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 724:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 725:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 726:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   Checks if electrodes were previously connected using
 727:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****  * CapSense_CSDSetupWidgetExt() API and if yes disconnects them.
 728:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 729:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 730:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   This function checks if CapSense_eleCsdDisconnectFlag is set.
 731:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   If it set, the function disconnects the previously connected electrode.
 732:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The previous IO is contained in CapSense_curSnsIOPtr and
 733:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   CapSense_curFlashSnsPtr contains the previous data for Ganged
 734:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   sensors.
 735:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 736:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
 737:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDElectrodeCheck(void)
 738:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
 739:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 740:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 tempVal;
 741:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 742:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 743:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     if (CapSense_ENABLE == CapSense_eleCsdDisconnectFlag)
 744:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 745:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Disconnect if electrodes were previous connected by CSDSetupWidgetExt() API */
 746:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 747:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Check ganged sns flag  */
 748:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (CapSense_GANGED_SNS_MASK == (CapSense_curFlashWdgtPtr->staticConfig & CapSense_GANG
 749:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 750:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Get number of ganged pins */
 751:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tempVal = CapSense_curFlashSnsPtr->numPins;
 752:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 753:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Get IO pointer  */
 754:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_curSnsIOPtr = &CapSense_ioList[CapSense_curFlashSnsPtr->firstPinId];
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 17


 755:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 756:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Disconnect all ganged sensors */
 757:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 do
 758:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 759:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
 760:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CapSense_curSnsIOPtr++;
 761:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     tempVal--;
 762:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 } while (0u != tempVal);
 763:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 764:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             else
 765:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 766:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Disconnect ganged sensor */
 767:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
 768:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 769:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 770:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Disable sensor */
 771:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
 772:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
 773:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 774:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_eleCsdDisconnectFlag = 0u;
 775:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 776:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 777:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 778:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 779:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 780:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDSetUpIdacs
 781:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 782:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 783:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 784:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This internal function changes the IDACs values.
 785:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 786:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 787:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  If Compensation IDAC is enabled, it updates two IDACs.
 788:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The Modulator IDAC is common for all the sensors of the widget.
 789:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The Compensation IDAC is updated for the sensor of the widget which
 790:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  is available in the RAM_SNS_STRUCT structure.
 791:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  If the Compensation IDAC is disabled, the function updates the Modulator IDAC
 792:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  value only in the RAM_WD_BASE_STRUCT structure.
 793:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 794:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param
 795:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  ptrWdgt The pointer to the RAM_WD_BASE_STRUCT structure.
 796:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 797:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
 798:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDSetUpIdacs(CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt)
 799:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
 800:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint8 interruptState;
 801:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 idacGain;
 802:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 803:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Getting IDAC gain */
 804:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     idacGain = CapSense_idacGainTable[ptrWdgt->idacGainIndex].gainReg;
 805:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 806:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 807:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 idacARegValue;
 808:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 809:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 idacBRegValue;
 810:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 811:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 18


 812:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
 813:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 814:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Get IDACA Value */
 815:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         idacARegValue = CY_GET_REG32(CapSense_CSD_IDACA_PTR);
 816:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 817:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Clear IDACA value and gain */
 818:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         idacARegValue &= ~(CapSense_IDAC_MOD_VAL_MASK | CapSense_IDAC_GAIN_MASK);
 819:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 820:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set IDACA value gain */
 821:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
 822:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (CapSense_dsFlash.wdgtArray[(CapSense_widgetIndex)].numCols <= CapSense_sensorIndex)
 823:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 824:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 idacARegValue |= (uint32)ptrWdgt->rowIdacMod[CapSense_scanFreqIndex];
 825:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 826:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             else
 827:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 828:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 idacARegValue |= (uint32)ptrWdgt->idacMod[CapSense_scanFreqIndex];
 829:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 830:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 831:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             idacARegValue |= (uint32)ptrWdgt->idacMod[CapSense_scanFreqIndex];
 832:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN | CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 833:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         idacARegValue |= idacGain;
 834:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 835:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Update IDACA register with new value */
 836:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_CSD_IDACA_PTR, idacARegValue);
 837:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
 838:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 839:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 840:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             interruptState = CyEnterCriticalSection();
 841:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get IDACB Value */
 842:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             idacBRegValue = CY_GET_REG32(CapSense_CSD_IDACB_PTR);
 843:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 844:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Clear IDACB value and gain */
 845:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             idacBRegValue &= ~(CapSense_IDAC_COMP_VAL_MASK | CapSense_IDAC_GAIN_MASK);
 846:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 847:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set IDACB value and gain */
 848:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             idacBRegValue |= (uint32)CapSense_curRamSnsPtr->idacComp[CapSense_scanFreqIndex];
 849:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             idacBRegValue |= idacGain;
 850:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 851:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Update IDACA register with new value */
 852:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CSD_IDACB_PTR, idacBRegValue);
 853:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CyExitCriticalSection(interruptState);
 854:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 855:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 856:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 857:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 858:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 newRegValue;
 859:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint8 const *ptrIdacMod = ptrWdgt->idacMod;
 860:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 861:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN  | CapSense_CSD_TOUCHPAD_WIDGET_EN)
 862:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (CapSense_dsFlash.wdgtArray[(CapSense_widgetIndex)].numCols <= CapSense_sensorIndex)
 863:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 864:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 ptrIdacMod = &ptrWdgt->rowIdacMod[0u];
 865:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 866:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN  | CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 867:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 868:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 19


 869:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 870:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Get Idac Value */
 871:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_IDAC_PTR);
 872:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 873:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Clear Idac value and gain */
 874:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 875:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue &= ~(CapSense_IDAC_MOD_MASK | CapSense_IDAC_COMP_MASK |
 876:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_IDAC_GAIN_MASK | (CapSense_IDAC_GAIN_MASK << CapSense_IDAC_COMP_DATA_OFFSE
 877:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 878:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue &= ~(CapSense_IDAC_MOD_MASK | CapSense_IDAC_GAIN_MASK);
 879:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 880:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 881:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set Idac value and gain */
 882:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 883:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= (ptrIdacMod[CapSense_scanFreqIndex] |
 884:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                            (uint32)((uint32)CapSense_curRamSnsPtr->idacComp[CapSense_scanFreqIndex]
 885:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                            CapSense_IDAC_COMP_DATA_OFFSET));
 886:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= idacGain;
 887:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= (idacGain << CapSense_IDAC_COMP_DATA_OFFSET);
 888:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 889:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= ptrIdacMod[CapSense_scanFreqIndex];
 890:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= idacGain;
 891:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 892:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_IDAC_PTR, newRegValue);
 893:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 894:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
 895:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 896:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 897:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 898:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 899:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 900:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 901:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
 902:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsCSDGetNumberOfConversions
 903:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
 904:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 905:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
 906:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  This function gets Number of conversions.
 907:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 908:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
 909:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  This function gets Number of conversions using foll.owing equation:
 910:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   conversionsNum = (2^resolution - 1) / snsClkDivider.
 911:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 912:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param
 913:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  snsClkDivider The divider value for the sense clock.
 914:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  resolution The widget resolution.
 915:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  snsClkSrc The current Sense Clock Source.
 916:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 917:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \return Returns the Number of conversions.
 918:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 919:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
 920:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 CapSense_SsCSDGetNumberOfConversions(uint32 snsClkDivider, uint32 resolution, uint32 sns
 921:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 922:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 conversionsNum;
 923:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if ((CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) && (CapSense_ENABLE != CapSense_C
 924:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 sampleClkFreqHz;
 925:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* ((CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) && (CapSense_ENABLE != CapS
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 20


 926:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 927:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Calculate scanning resolution value in register */
 928:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         conversionsNum = (uint32)(1uL << resolution);
 929:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 930:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if(CapSense_ENABLE != CapSense_CSDV2_REF9P6UA_EN)
 931:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Apply correction to oveflow for 16 bit resolution */
 932:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (CapSense_RES16BIT == resolution)
 933:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 934:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 conversionsNum -= ((snsClkDivider + 1u) >> 1u);
 935:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 936:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 937:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     sampleClkFreqHz = CYDEV_BCLK__HFCLK__HZ / (uint32)CapSense_dsRam.modCsdClk;
 938:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 939:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if (sampleClkFreqHz <= CapSense_MOD_CSD_CLK_12MHZ)
 940:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 941:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         conversionsNum -= CapSense_CONFIG_FILTER_DELAY_2_CYCLES;
 942:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
 943:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     else if (sampleClkFreqHz <= CapSense_MOD_CSD_CLK_24MHZ)
 944:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 945:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         conversionsNum -= CapSense_CONFIG_FILTER_DELAY_3_CYCLES;
 946:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
 947:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     else
 948:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 949:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         conversionsNum -= CapSense_CONFIG_FILTER_DELAY_4_CYCLES;
 950:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
 951:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #else
 952:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     conversionsNum -= CapSense_CONFIG_FILTER_DELAY_2_CYCLES;
 953:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif /* (INSTANCE_NAME`_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 954:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 955:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 956:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* CY_ID285392: Apply correction to oveflow for 16 bit resolution */
 957:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (CapSense_RES16BIT == resolution)
 958:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 959:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 conversionsNum -= CapSense_EXTRA_COUNTS_MAX;
 960:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 961:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif
 962:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 963:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (0u < snsClkDivider)
 964:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 965:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             conversionsNum /= snsClkDivider;
 966:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 967:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 968:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
 969:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
 970:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
 971:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         switch (snsClkSrc)
 972:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 973:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             case CapSense_CLK_SOURCE_PRS8:
 974:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             case CapSense_CLK_SOURCE_PRS12:
 975:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Divide by 2 for PRS8/PRS12 mode */
 976:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 conversionsNum >>= 1u;
 977:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 break;
 978:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 979:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             default:
 980:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 break;
 981:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 982:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 21


 983:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         (void)snsClkSrc;
 984:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
 985:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 986:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     return((conversionsNum > 0uL) ? (conversionsNum) : 1uL);
 987:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 988:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 989:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 990:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 991:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 992:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDConfigClock
 993:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 994:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 995:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 996:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function configure sense clock for different modes.
 997:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 998:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 999:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Function sets the clock divider and configures the mode based on configuration.
1000:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1001:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1002:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDConfigClock(void)
1003:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1004:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 snsClkDivider;
1005:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 snsClkSrc;
1006:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 newRegValue;
1007:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1008:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1009:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2WdgtRam;
1010:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1011:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Get sense divider based on configuration */
1012:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
1013:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         snsClkDivider = (uint32)CapSense_dsRam.snsCsdClk;
1014:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1015:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1016:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get SnsClck divider for rows or columns */
1017:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_sensorIndex)
1018:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1019:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->rowSnsClk);
1020:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
1021:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             else
1022:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1023:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->snsClk);
1024:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
1025:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
1026:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             snsClkDivider = (uint32)(ptrWdgt->snsClk);
1027:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1028:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
1029:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1030:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Get sense clk source calculated in CapSense_SsCSDInitialize() before */
1031:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1032:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Get SnsClc Source for rows or columns */
1033:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_sensorIndex)
1034:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1035:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
1036:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1037:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         else
1038:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1039:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 22


1040:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1041:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1042:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
1043:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1044:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1045:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
1046:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = (snsClkSrc << CYFLD_CSD_LFSR_SIZE__OFFSET);
1047:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1048:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configuring PRS SEL_BIT */
1049:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if ((CapSense_CLK_SOURCE_PRS8 == snsClkSrc) ||
1050:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             (CapSense_CLK_SOURCE_PRS12 == snsClkSrc))
1051:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1052:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= CapSense_SENSE_PERIOD_SEL_LFSR_MSB_MASK;
1053:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1054:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1055:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = snsClkSrc;
1056:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1057:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1058:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
1059:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
1060:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
1061:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
1062:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             switch (snsClkSrc)
1063:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1064:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             case CapSense_CLK_SOURCE_PRS8:
1065:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             case CapSense_CLK_SOURCE_PRS12:
1066:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Divide by 2 for PRS8/PRS12 mode */
1067:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 snsClkDivider >>= 1;
1068:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (snsClkDivider == 0u)
1069:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1070:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     snsClkDivider = 1u;
1071:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1072:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 break;
1073:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1074:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             default:
1075:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 break;
1076:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
1077:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* ((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
1078:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                    (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
1079:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                    (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)) */
1080:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
1081:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsCSDSetModeSnsClockDivider(newRegValue, snsClkDivider);
1082:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1083:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1084:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1085:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1086:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDCalculateScanDuration
1087:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1088:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1089:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1090:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   Calculates Scan Duration which is defined by scan resolution
1091:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1092:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1093:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   For Fourth-generation HW block: The function calculates the number of conversions and updates
1094:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   SEQ_NORM_CNT register. The number of conversions depends on resolution and
1095:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   snsClk divider.
1096:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   For Third-generation HW block: The function recalculate the resolution using following equation
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 23


1097:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   2^resolution - 1. The calculated value is contained in
1098:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   CapSense_counterResolution global variable and used in
1099:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   CapSense_SsCSDStartSample() function to trigger the scan process.
1100:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1101:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param wdgtIndex
1102:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  ptrWdgt The pointer to the RAM_WD_BASE_STRUCT structure.
1103:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1104:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1105:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDCalculateScanDuration(CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt)
1106:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1107:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
1108:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 conversionsNum;
1109:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 snsClkDivider;
1110:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1111:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Get Number Of Conversions */
1112:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
1113:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             snsClkDivider = CapSense_dsRam.snsCsdClk;
1114:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
1115:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1116:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Get SnsClck divider for rows or columns */
1117:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_sensorInde
1118:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1119:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     snsClkDivider = (uint32)(ptrWdgt->rowSnsClk);
1120:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1121:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 else
1122:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1123:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     snsClkDivider = (uint32)(ptrWdgt->snsClk);
1124:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1125:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #else
1126:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->snsClk);
1127:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1128:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
1129:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1130:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdgt->resol
1131:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1132:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set Number Of Conversions based on scanning resolution */
1133:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_SEQ_NORM_CNT_CONV_CNT_MA
1134:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1135:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set up scanning resolution  */
1136:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_counterResolution = (uint32)((0x00000001Lu << ptrWdgt->resolution) - 1u) << CapSen
1137:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1138:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1139:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1140:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1141:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1142:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDSetupWidget
1143:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1144:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1145:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1146:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Performs hardware and firmware initialization required for scanning sensors
1147:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  in a specific widget using the CSD sensing method. This function requires using
1148:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  the CapSense_CSDScan() function to start scanning.
1149:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1150:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1151:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
1152:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The CapSense_SetupWidget() function should be used instead.
1153:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 24


1154:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function initializes the specific widget common parameters to perform
1155:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  the CSD scanning. The initialization includes setting up a Modulator and
1156:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Sense clock frequency and scanning resolution.
1157:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1158:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function does not connect any specific sensors to the scanning hardware,
1159:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  neither does it start a scanning process. The CapSense_CSDScan()
1160:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  API must be called after initializing the widget to start scanning.
1161:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1162:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1163:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_IsBusy() returns a non-busy status.
1164:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1165:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called by the CapSense_SetupWidget() API if the
1166:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  given widget uses the CSD sensing method.
1167:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1168:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1169:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1170:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1171:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1172:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param  widgetId
1173:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
1174:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  initialization required for scanning sensors in the specific widget.
1175:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  A macro for the widget ID can be found in the CapSense Configuration header
1176:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  file defined as CapSense_<WidgetName>_WDGT_ID.
1177:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1178:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1179:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDSetupWidget(uint32 widgetId)
1180:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1181:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1182:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
1183:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1184:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Save widget Id to have assess to it after scanning  */
1185:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_widgetIndex = (uint8)widgetId;
1186:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1187:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
1188:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1189:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1190:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1191:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
1192:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
1193:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1194:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Disconnect previous electrode if it has been connected */
1195:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsCSDElectrodeCheck();
1196:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1197:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Initialize IO Sns electrode structure pointer to current widget */
1198:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
1199:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2SnsFlash;
1200:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1201:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Update status register in Data structure */
1202:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_dsRam.status &= ~CapSense_STATUS_WDGT0_MASK;
1203:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_dsRam.status |= CapSense_widgetIndex;
1204:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1205:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsCSDCalculateScanDuration(ptrWdgt);
1206:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) || \
1207:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****           (CapSense_CLK_SOURCE_DIRECT != CapSense_CSD_SNS_CLK_SOURCE)) && \
1208:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****          ((!(CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)) || \
1209:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****           (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)))
1210:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConfigClock();
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 25


1211:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
1212:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1213:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1214:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1215:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1216:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDSetupWidgetExt
1217:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1218:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1219:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1220:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Performs extended initialization for the CSD widget and also performs
1221:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  initialization required for a specific sensor in the widget. This function
1222:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  requires using the CapSense_CSDScanExt() function to initiate a scan.
1223:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1224:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1225:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Performs extended initialization for the CSD widget and also performs
1226:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  initialization required for a specific sensor in the widget. This function
1227:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  requires using the CapSense_CSDScanExt() function to initiate a scan.
1228:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1229:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
1230:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The CapSense_SetupWidgetExt() function should be used instead.
1231:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1232:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function does the same as CapSense_CSDSetupWidget() and also
1233:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  does the following tasks:
1234:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    1. Connects the first sensor of the widget.
1235:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    2. Configures the IDAC value.
1236:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    3. Initializes an interrupt callback function to initialize a scan of the
1237:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  next sensors in a widget.
1238:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1239:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Once this function is called to initialize a widget and a sensor, the
1240:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDScanExt() function is called to scan the sensor.
1241:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1242:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1243:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_IsBusy() returns a non-busy status.
1244:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1245:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1246:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1247:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1248:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1249:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param widgetId
1250:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
1251:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  initialization required for scanning the specific sensor in the specific
1252:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  widget.
1253:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  A macro for the widget ID can be found in the CapSense Configuration header
1254:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  file defined as CapSense_<WidgetName>_WDGT_ID.
1255:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1256:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param sensorId
1257:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
1258:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  and firmware initialization required for scanning a specific sensor in a
1259:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  specific widget.
1260:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  A macro for the sensor ID within a specified widget can be found in the
1261:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense Configuration header file defined as
1262:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID
1263:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1264:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDSetupWidgetExt(uint32 widgetId, uint32 sensorId)
1266:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1267:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 26


1268:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                     CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRa
1269:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1270:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Save widget and sensor Ids to have access to it after scanning  */
1271:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_sensorIndex = (uint8)sensorId;
1272:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1273:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Update global pointer to CapSense_RAM_SNS_STRUCT to current sensor  */
1274:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_curRamSnsPtr = (CapSense_RAM_SNS_STRUCT *)
1275:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsRam
1276:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               + CapSense_sensorIndex;
1277:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1278:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_CSDSetupWidget(widgetId);
1279:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1280:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****      /* Setup Idac Value */
1281:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsCSDSetUpIdacs(ptrWdgt);
1282:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1283:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1284:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* initialize access pointers for current pointer to widget configuration in Flash */
1285:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_curFlashWdgtPtr = &CapSense_dsFlash.wdgtArray[widgetId];
1286:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
1287:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1288:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1289:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConnectSensorExt(widgetId, sensorId);
1290:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1291:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable sensor */
1292:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_curSnsIOPtr += CapSense_sensorIndex;
1293:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
1294:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
1295:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1296:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1297:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Save sns pointer */
1298:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_curFlashSnsPtr = (CapSense_FLASH_SNS_STRUCT const *)
1299:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                            CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2Sns
1300:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                            CapSense_sensorIndex;
1301:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
1302:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1303:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_eleCsdDisconnectFlag = CapSense_DISCONNECT_IO_FLAG;
1304:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1305:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Setup ISR handler to single-sensor scan function */
1306:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_ISR_StartEx(&CapSense_CSDPostSingleScan);
1307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1308:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1309:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1310:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDStartSample
1311:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1312:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1313:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1314:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   Starts the CSD conversion.
1315:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1316:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1317:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   This function assumes that the CSD block is already set up using
1318:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   the CapSense_CSDSetupWidget API and the sensor port-pin is connected to the CSD
1319:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   block using CapSense_CSDConnectSns.
1320:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   For Third-generation HW block the function performs the following tasks:
1321:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   1. Disconnects the Vref buffer from AMUX;
1322:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   2. Precharges Cmod;
1323:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   3. Makes the PreSettling delay to have a stable Vref voltage;
1324:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   4. Sets the resolution to the Counter register to start scanning.
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 27


1325:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1326:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1327:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDStartSample(void)
1328:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1329:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE != CapSense_CSDV2)
1330:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint8 interruptState;
1331:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
1332:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1333:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #ifdef CapSense_START_SAMPLE_CALLBACK
1334:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_StartSampleCallback(CapSense_widgetIndex, CapSense_sensorIndex);
1335:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* CapSense_START_SAMPLE_CALLBACK */
1336:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1337:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
1338:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
1339:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1340:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Disable CSD interrupt to prevent it during coarse initialization */
1341:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyIntDisable(CapSense_ISR_NUMBER);
1342:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1343:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable power to sub-blocks */
1344:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_HSCMP_PTR, CapSense_HSCMP_INIT_MASK);
1345:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1346:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
1347:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd |
1348:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_CONFIG_SENSE_EN_MASK |
1349:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_CONFIG_ENABLE_MASK);
1350:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if(CapSense_CSD_ANALOG_STARTUP_DELAY_US > 0uL)
1351:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CyDelayUs(CapSense_CSD_ANALOG_STARTUP_DELAY_US);
1352:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_CSD_ANALOG_STARTUP_DELAY_US > 0uL) */
1353:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
1354:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1355:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Precharging Cmod and Csh */
1356:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDCmodPrecharge();
1357:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1358:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Trigger Scan */
1359:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDTriggerScan();
1360:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1361:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1362:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Third-generation HW block section */
1363:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
1364:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1365:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable CSD block. Disconnect Vref Buffer from AMUX */
1366:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
1367:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
1368:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CMOD_PRECHARGE_CONFIG_C
1369:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
1370:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CONFIG_
1371:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif
1372:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1373:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Restart the clocks. Scan one cycle to reset the flip-flop for Direct clock mode */
1374:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDClockRestart();
1375:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1376:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Precharging Cmod to Vref */
1377:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDCmodPrecharge();
1378:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1379:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CLK_SOURCE_DIRECT != CapSense_CSD_SNS_CLK_SOURCE)
1380:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set PreSettling delay to skip IDAC glitch before scanning */
1381:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CyDelayCycles(CapSense_GLITCH_ELIMINATION_CYCLES);
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 28


1382:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_SNS_CLK_SOURCE != CapSense_CLK_SOURCE_DIRECT) */
1383:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1384:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Trigger Scan */
1385:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDTriggerScan();
1386:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1387:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
1388:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1389:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1390:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1391:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1392:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1393:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDScanExt
1394:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1395:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1396:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1397:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Starts the CSD conversion on the preconfigured sensor. This function requires
1398:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  using the CapSense_CSDSetupWidgetExt() function to set up the a
1399:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  widget.
1400:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1401:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1402:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Starts the CSD conversion on the preconfigured sensor. This function requires
1403:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  using the CapSense_CSDSetupWidgetExt() function to set up the a
1404:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  widget.
1405:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1406:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
1407:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The CapSense_ScanExt() function should be used instead.
1408:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1409:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function performs single scanning of one sensor in the widget configured
1410:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  by the CapSense_CSDSetupWidgetExt() function. It does the following
1411:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  tasks:
1412:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    1. Sets the busy flag in the CapSense_dsRam structure.
1413:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    2. Performs the clock-phase alignment of the sense and modulator clocks.
1414:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    3. Performs the Cmod pre-charging.
1415:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    4. Starts single scanning.
1416:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1417:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1418:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1419:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1420:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1421:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_IsBusy() returns a non-busy status.
1422:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1423:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The sensor must be preconfigured by using the
1424:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDSetupWidgetExt() API prior to calling this function.
1425:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The sensor remains ready for a next scan if a previous scan was triggered
1426:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  by using the CapSense_CSDScanExt() function. In this case, calling
1427:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDSetupWidgetExt() is not required every time before the
1428:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDScanExt() function. If a previous scan was triggered in
1429:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  any other way - CapSense_Scan(), CapSense_ScanAllWidgets() or
1430:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_RunTuner() - (see the CapSense_RunTuner() function
1431:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  description for more details), the sensor must be preconfigured again by
1432:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  using the CapSense_CSDSetupWidgetExt() API prior to calling the
1433:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDScanExt() function.
1434:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1435:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  If disconnection of the sensors is required after calling
1436:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDScanExt(), the CapSense_CSDDisconnectSns()
1437:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  function can be used.
1438:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 29


1439:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1440:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDScanExt(void)
1441:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1442:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if ((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) && \
1443:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****          (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN))
1444:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1445:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                         CapSense_dsFlash.wdgtArray[CapSense_widgetI
1446:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1447:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDCalculateScanDuration(ptrWdgt);
1448:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConfigClock();
1449:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
1450:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1451:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set Start of sensor scan flag */
1452:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_dsRam.status |= (CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
1453:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1454:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1455:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1456:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
1457:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
1458:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1459:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE != CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
1460:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         (CapSense_ENABLE == CapSense_CSDV2)
1461:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if(CapSense_CSD_ANALOG_STARTUP_DELAY_US > 0uL)
1462:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CyDelayUs(CapSense_CSD_ANALOG_STARTUP_DELAY_US);
1463:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_ANALOG_STARTUP_DELAY_US > 0uL) */
1464:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE != CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
1465:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****               (CapSense_ENABLE == CapSense_CSDV2)*/
1466:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1467:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsCSDStartSample();
1468:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1469:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1470:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1471:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1472:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDScan
1473:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1474:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1475:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1476:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function initiates a scan for the sensors of the widget initialized by the
1477:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDSetupWidget() function.
1478:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1479:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1480:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function initiates a scan for the sensors of the widget initialized by the
1481:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDSetupWidget() function.
1482:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1483:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
1484:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The CapSense_Scan() function should be used instead.
1485:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1486:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function performs scanning of all the sensors in the widget configured by
1487:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  the CapSense_CSDSetupWidget() function. It does the following tasks:
1488:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    1. Connects the first sensor of the widget.
1489:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    2. Configures the IDAC value.
1490:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    3. Initializes the interrupt callback function to initialize a scan of
1491:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *       the next sensors in a widget.
1492:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    4. Starts scanning for the first sensor in the widget.
1493:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1494:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called by the CapSense_Scan() API if the given
1495:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  widget uses the CSD sensing method.
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 30


1496:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1497:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1498:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1499:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1500:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1501:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1502:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_IsBusy() returns a non-busy status. The widget must be
1503:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  preconfigured by the CapSense_CSDSetupWidget() function if any other
1504:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  widget was previously scanned or any other type of the scan functions was used.
1505:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1506:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1507:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDScan(void)
1508:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1509:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1510:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                     CapSense_dsFlash.wdgtArray[CapSense_widgetIndex
1511:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1512:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set all the sensors to inactive state */
1513:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     if(CapSense_dsRam.scanCurrentISC != CapSense_dsRam.scanCsdISC)
1514:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
1515:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsSetAllIOsState((uint32)CapSense_dsRam.scanCsdISC);
1516:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_dsRam.scanCurrentISC = CapSense_dsRam.scanCsdISC;
1517:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
1518:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1519:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****      /*
1520:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****       * Update CapSense_sensorIndex with the first sensor in
1521:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****       * widget to use it in ISR handler to configure the next sensor
1522:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****       */
1523:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_sensorIndex = 0u;
1524:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1525:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Update global pointer to CapSense_RAM_SNS_STRUCT to current sensor  */
1526:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_curRamSnsPtr = (CapSense_RAM_SNS_STRUCT *)
1527:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2
1528:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               + CapSense_sensorIndex;
1529:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1530:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1531:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1532:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
1533:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
1534:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1535:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Setup Idac Value */
1536:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****    CapSense_SsCSDSetUpIdacs(ptrWdgt);
1537:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1538:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1539:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1540:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].staticCon
1541:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_GANGED_SNS_MASK))
1542:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1543:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Setup ISR handler to multiple-sensor scan function with ganged sensors */
1544:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_ISR_StartEx(&CapSense_CSDPostMultiScanGanged);
1545:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1546:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         else
1547:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1548:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set up ISR handler to multiple-sensor scan function without ganged sensors */
1549:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_ISR_StartEx(&CapSense_CSDPostMultiScan);
1550:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1551:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1552:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConnectSensorExt((uint32)CapSense_widgetIndex, (uint32)CapSense_sensorIndex);
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 31


1553:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1554:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* initialize ptr to sensor IO structure to appropriate address */
1555:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
1556:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2SnsFla
1557:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         + CapSense_sensorIndex;
1558:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1559:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable sensor */
1560:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
1561:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1562:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set-up ISR handler to multiple-sensor scan function without ganged sensors */
1563:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_ISR_StartEx(&CapSense_CSDPostMultiScan);
1564:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
1565:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1566:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Start scanning */
1567:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_CSDScanExt();
1568:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1569:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1570:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1571:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1572:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDConnectSensorExt
1573:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1574:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1575:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1576:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Connects a ganged sensor port-pin to the sensing HW block via the AMUX bus.
1577:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1578:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1579:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The function gets the IO configuration registers addresses, their shifts and
1580:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   masks from the FLASH_IO_STRUCT object. Basing on this data, it updates the HSIOM and
1581:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   PC registers.
1582:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1583:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param widgetId
1584:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies ID of the widget.
1585:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1586:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param sensorId
1587:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies ID of the sensor in the widget.
1588:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1589:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1590:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDConnectSensorExt(uint32 widgetId, uint32 sensorId)
1591:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1592:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1593:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 tempVal;
1594:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
1595:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1596:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* initialize ptr to sensor IO structure to appropriate address */
1597:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
1598:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
1599:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       + sensorId;
1600:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1601:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1602:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1603:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (CapSense_GANGED_SNS_MASK ==
1604:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****            (CapSense_dsFlash.wdgtArray[widgetId].staticConfig &
1605:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_GANGED_SNS_MASK))
1606:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1607:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get sns pointer */
1608:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_curFlashSnsPtr = (CapSense_FLASH_SNS_STRUCT const *)
1609:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash +
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 32


1610:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                sensorId;
1611:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1612:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get number of ganged pins */
1613:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             tempVal = CapSense_curFlashSnsPtr->numPins;
1614:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1615:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get IO pointer  */
1616:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_curSnsIOPtr = &CapSense_ioList[CapSense_curFlashSnsPtr->firstPinId];
1617:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1618:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect all ganged sensors  */
1619:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             do
1620:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1621:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
1622:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_curSnsIOPtr++;
1623:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tempVal--;
1624:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             } while (0u != tempVal);
1625:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1626:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         else
1627:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1628:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect sensor */
1629:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
1630:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1631:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1632:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect sensor */
1633:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
1634:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
1635:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1636:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1637:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1638:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1639:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDDisconnectSnsExt
1640:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1641:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1642:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1643:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Disconnects a ganged sensor port-pin from the sensing HW block and AMUX bus.
1644:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Sets the default state of the un-scanned sensor.
1645:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1646:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1647:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The function gets the IO configuration registers addresses, their shifts and
1648:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   masks from the FLASH_IO_STRUCT object. Basing on this data and Inactive sensor
1649:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   connection parameter, it updates the HSIOM, PC and DR registers.
1650:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The HSIOM register is updated only when the Inactive sensor connection parameter
1651:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   is set to Shield.
1652:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1653:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param widgetId
1654:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies ID of the widget.
1655:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1656:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param sensorId
1657:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies ID of the sensor in the widget.
1658:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1659:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1660:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDDisconnectSnsExt(uint32 widgetId, uint32 sensorId)
1661:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1662:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1663:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 tempVal;
1664:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
1665:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1666:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* initialize ptr to sensor IO structure to appropriate address        */
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 33


1667:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
1668:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
1669:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       + sensorId;
1670:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1671:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1672:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1673:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if ((CapSense_dsFlash.wdgtArray[widgetId].staticConfig &
1674:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_GANGED_SNS_MASK) == CapSense_GANGED_SNS_MASK)
1675:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1676:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get sns pointer */
1677:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_curFlashSnsPtr = (CapSense_FLASH_SNS_STRUCT const *)
1678:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash +
1679:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                sensorId;
1680:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1681:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get number of ganged pins */
1682:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             tempVal = CapSense_curFlashSnsPtr->numPins;
1683:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1684:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get IO pointer  */
1685:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_curSnsIOPtr = &CapSense_ioList[CapSense_curFlashSnsPtr->firstPinId];
1686:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1687:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Disconnect all ganged sensors */
1688:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             do
1689:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1690:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
1691:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_curSnsIOPtr++;
1692:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tempVal--;
1693:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             } while (0u != tempVal);
1694:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1695:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         else
1696:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1697:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Disconnect ganged sensor */
1698:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
1699:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1700:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1701:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Disconnect ganged sensor */
1702:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
1703:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
1704:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1705:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1706:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1707:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1708:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDConnectSns
1709:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1710:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1711:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1712:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Connects a port pin used by the sensor to the AMUX bus of the sensing HW block.
1713:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1714:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1715:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Connects a port pin used by the sensor to the AMUX bus of the sensing HW block
1716:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  while a sensor is being scanned. The function ignores the fact if
1717:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  the sensor is a ganged sensor and connects only a specified pin.
1718:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1719:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Scanning should be completed before calling this API.
1720:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1721:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1722:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1723:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget,
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 34


1724:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  automatically set the required pin states and perform the sensor connection.
1725:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  They do not take into account changes in the design made by the
1726:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDConnectSns() function.
1727:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1728:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param  snsAddrPtr
1729:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1730:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  which to be connected to the sensing HW block.
1731:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1732:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1733:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDConnectSns(CapSense_FLASH_IO_STRUCT const *snsAddrPtr)
1734:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1735:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 newRegisterValue;
1736:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint8  interruptState;
1737:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 pinModeShift;
1738:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 pinHSIOMShift;
1739:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1740:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Get offsets for sensor */
1741:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
1742:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
1743:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1744:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     interruptState = CyEnterCriticalSection();
1745:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1746:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Use temporary variable to update registers without multiple writings to them */
1747:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newRegisterValue = CY_GET_REG32(snsAddrPtr->hsiomPtr);
1748:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newRegisterValue &= ~(CapSense_HSIOM_SEL_MASK << pinHSIOMShift);
1749:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newRegisterValue |= (uint32)((uint32)CapSense_HSIOM_SEL_CSD_SENSE << pinHSIOMShift);
1750:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1751:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Update port configuration register (drive mode) for sensor */
1752:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->pcPtr, CY_GET_REG32(snsAddrPtr->pcPtr) & (uint32)~((uint32)CapSense_GP
1753:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1754:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Update HSIOM register for sensor */
1755:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->hsiomPtr, newRegisterValue);
1756:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1757:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CyExitCriticalSection(interruptState);
1758:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1759:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1760:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1761:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1762:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDDisconnectSns
1763:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1764:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1765:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1766:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Disconnects a sensor port pin from the sensing HW block and the AMUX bus. Sets
1767:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  the default state of the un-scanned sensor.
1768:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1769:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1770:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function works identically to CapSense_CSDConnectSns() except
1771:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  it disconnects the specified port-pin used by the sensor.
1772:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1773:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1774:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1775:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases. Functions that perform a setup and scan of sensor/widget
1776:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  automatically set the required pin states and perform the sensor connection.
1777:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  They ignore changes in the design made by the
1778:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDDisconnectSns() function.
1779:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1780:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param  snsAddrPtr
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 35


1781:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1782:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  which should be disconnected from the sensing HW block.
1783:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1784:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1785:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDDisconnectSns(CapSense_FLASH_IO_STRUCT const *snsAddrPtr)
1786:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1787:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint8  interruptState;
1788:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 pinHSIOMShift;
1789:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 pinModeShift;
1790:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 newPcRegValue;
1791:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 newHsiomRegValue;
1792:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1793:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
1794:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
1795:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1796:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     interruptState = CyEnterCriticalSection();
1797:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1798:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newPcRegValue  = CY_GET_REG32(snsAddrPtr->pcPtr);
1799:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newPcRegValue &= ~(CapSense_GPIO_PC_MASK << pinModeShift);
1800:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1801:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newHsiomRegValue  = CY_GET_REG32(snsAddrPtr->hsiomPtr);
1802:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newHsiomRegValue &= ~(CapSense_HSIOM_SEL_MASK << pinHSIOMShift);
1803:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->hsiomPtr, newHsiomRegValue);
1804:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1805:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     if(CapSense_SNS_CONNECTION_GROUND == CapSense_dsRam.scanCurrentISC)
1806:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
1807:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newPcRegValue |= (CY_SYS_PINS_DM_STRONG << pinModeShift);
1808:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->pcPtr, newPcRegValue);
1809:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
1810:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     else
1811:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
1812:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newPcRegValue |= (CY_SYS_PINS_DM_ALG_HIZ << pinModeShift);
1813:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if(CapSense_SNS_CONNECTION_SHIELD == CapSense_dsRam.scanCurrentISC)
1814:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1815:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect to Shield */
1816:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newHsiomRegValue |= (CapSense_HSIOM_SEL_CSD_SHIELD << pinHSIOMShift);
1817:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(snsAddrPtr->pcPtr, newPcRegValue);
1818:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(snsAddrPtr->hsiomPtr, newHsiomRegValue);
1819:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1820:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
1821:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set logic 0 to port data register */
1822:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->drPtr, CY_GET_REG32(snsAddrPtr->drPtr) & (uint32)~(uint32)((uint32)1u 
1823:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1824:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CyExitCriticalSection(interruptState);
1825:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1826:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1827:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if ((CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) || \
1828:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****      (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN))
1829:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
1830:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsCSDCalibrateCheck
1831:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
1832:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1833:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
1834:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  This internal function checks if the calibration is performed successfully.
1835:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1836:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
1837:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  The function verifies that raw counts are within acceptable range
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 36


1838:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  defined by target and calibration error parameters.
1839:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1840:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param widgetId
1841:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  The desired widget ID.
1842:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1843:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param target
1844:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Raw count target in percentage.
1845:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1846:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \return Returns the status of the operation:
1847:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   - Zero     - All the sensors in the widget are calibrated successfully.
1848:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   - Non-Zero - Calibration failed for any sensor in the widget.
1849:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1850:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
1851:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static cystatus CapSense_SsCSDCalibrateCheck(uint32 widgetId, uint32 target)
1852:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 159              		.loc 1 1852 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 8
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              	.LVL4:
 164 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 165              		.cfi_def_cfa_offset 20
 166              		.cfi_offset 4, -20
 167              		.cfi_offset 5, -16
 168              		.cfi_offset 6, -12
 169              		.cfi_offset 7, -8
 170              		.cfi_offset 14, -4
 171 0002 4746     		mov	r7, r8
 172 0004 80B4     		push	{r7}
 173              		.cfi_def_cfa_offset 24
 174              		.cfi_offset 8, -24
 175 0006 82B0     		sub	sp, sp, #8
 176              		.cfi_def_cfa_offset 32
 177 0008 0500     		movs	r5, r0
 178              	.LVL5:
1853:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1854:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 rawcount;
1855:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 snsIndex;
1856:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 freqChannel;
1857:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 upperLimit;
1858:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 lowerLimit;
1859:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1860:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_FLASH_WD_STRUCT const *ptrFlashWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1861:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidget->
 179              		.loc 1 1861 0
 180 000a 4301     		lsls	r3, r0, #5
 181 000c 214A     		ldr	r2, .L25
 182 000e D318     		adds	r3, r2, r3
 183              	.LVL6:
 184 0010 5A68     		ldr	r2, [r3, #4]
 185              	.LVL7:
1862:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
 186              		.loc 1 1862 0
 187 0012 9C68     		ldr	r4, [r3, #8]
 188              	.LVL8:
1863:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1864:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Calculate acceptable raw count range based on the resolution, target and error */
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 37


1865:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         rawcount = (0x00000001Lu << ptrRamWidget->resolution) - 1u;
 189              		.loc 1 1865 0
 190 0014 1388     		ldrh	r3, [r2]
 191              	.LVL9:
 192 0016 0127     		movs	r7, #1
 193 0018 9F40     		lsls	r7, r7, r3
 194 001a 013F     		subs	r7, r7, #1
 195              	.LVL10:
1866:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         lowerLimit = 0u;
1867:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (target > CapSense_CSD_CALIBRATION_ERROR)
 196              		.loc 1 1867 0
 197 001c 0A29     		cmp	r1, #10
 198 001e 02D9     		bls	.L20
1868:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1869:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             lowerLimit = target - CapSense_CSD_CALIBRATION_ERROR;
 199              		.loc 1 1869 0
 200 0020 0800     		movs	r0, r1
 201              	.LVL11:
 202 0022 0A38     		subs	r0, r0, #10
 203              	.LVL12:
 204 0024 00E0     		b	.L14
 205              	.LVL13:
 206              	.L20:
1866:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         lowerLimit = 0u;
 207              		.loc 1 1866 0
 208 0026 0020     		movs	r0, #0
 209              	.LVL14:
 210              	.L14:
1870:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1871:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         upperLimit = target + CapSense_CSD_CALIBRATION_ERROR;
 211              		.loc 1 1871 0
 212 0028 0A23     		movs	r3, #10
 213 002a 9846     		mov	r8, r3
 214 002c 8844     		add	r8, r8, r1
 215              	.LVL15:
1872:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (upperLimit > CapSense_PERCENTAGE_100)
 216              		.loc 1 1872 0
 217 002e 4346     		mov	r3, r8
 218 0030 642B     		cmp	r3, #100
 219 0032 01D9     		bls	.L15
1873:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1874:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             upperLimit = CapSense_PERCENTAGE_100;
 220              		.loc 1 1874 0
 221 0034 6423     		movs	r3, #100
 222 0036 9846     		mov	r8, r3
 223              	.LVL16:
 224              	.L15:
1875:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1876:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         lowerLimit = (rawcount * lowerLimit) / CapSense_PERCENTAGE_100;
 225              		.loc 1 1876 0
 226 0038 7843     		muls	r0, r7
 227              	.LVL17:
 228 003a 6421     		movs	r1, #100
 229              	.LVL18:
 230 003c FFF7FEFF 		bl	__aeabi_uidiv
 231              	.LVL19:
 232 0040 0600     		movs	r6, r0
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 38


 233              	.LVL20:
1877:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         upperLimit = (rawcount * upperLimit) / CapSense_PERCENTAGE_100;
 234              		.loc 1 1877 0
 235 0042 4046     		mov	r0, r8
 236              	.LVL21:
 237 0044 7843     		muls	r0, r7
 238 0046 6421     		movs	r1, #100
 239 0048 FFF7FEFF 		bl	__aeabi_uidiv
 240              	.LVL22:
 241 004c 0200     		movs	r2, r0
 242              	.LVL23:
1878:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1879:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Check if raw count is in the defined range */
1880:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         for(snsIndex = 0u; snsIndex < ptrFlashWidget->totalNumSns; snsIndex++)
 243              		.loc 1 1880 0
 244 004e 0027     		movs	r7, #0
 245              	.LVL24:
1853:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 rawcount;
 246              		.loc 1 1853 0
 247 0050 0023     		movs	r3, #0
 248 0052 0193     		str	r3, [sp, #4]
 249              		.loc 1 1880 0
 250 0054 13E0     		b	.L16
 251              	.LVL25:
 252              	.L18:
1881:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1882:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1883:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1884:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 rawcount = ptrRamSensor->raw[freqChannel];
 253              		.loc 1 1884 0
 254 0056 4B00     		lsls	r3, r1, #1
 255 0058 185B     		ldrh	r0, [r3, r4]
 256              	.LVL26:
1885:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if ((rawcount < lowerLimit) || (rawcount > upperLimit))
 257              		.loc 1 1885 0
 258 005a 8642     		cmp	r6, r0
 259 005c 08D8     		bhi	.L22
1882:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 260              		.loc 1 1882 0 discriminator 1
 261 005e 0B00     		movs	r3, r1
 262              		.loc 1 1885 0 discriminator 1
 263 0060 8242     		cmp	r2, r0
 264 0062 01D2     		bcs	.L19
 265 0064 07E0     		b	.L23
 266              	.LVL27:
 267              	.L24:
 268 0066 0123     		movs	r3, #1
 269              	.L19:
 270              	.LVL28:
1882:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 271              		.loc 1 1882 0 discriminator 1
 272 0068 591E     		subs	r1, r3, #1
 273              	.LVL29:
 274 006a 002B     		cmp	r3, #0
 275 006c F3D1     		bne	.L18
 276 006e 04E0     		b	.L17
 277              	.LVL30:
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 39


 278              	.L22:
1886:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1887:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     calibrateStatus = CYRET_BAD_DATA;
 279              		.loc 1 1887 0
 280 0070 0623     		movs	r3, #6
 281 0072 0193     		str	r3, [sp, #4]
 282              	.LVL31:
 283 0074 01E0     		b	.L17
 284              	.LVL32:
 285              	.L23:
 286 0076 0623     		movs	r3, #6
 287 0078 0193     		str	r3, [sp, #4]
 288              	.LVL33:
 289              	.L17:
1888:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     break;
1889:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1890:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
1891:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             ptrRamSensor++;
 290              		.loc 1 1891 0 discriminator 2
 291 007a 0A34     		adds	r4, r4, #10
 292              	.LVL34:
1880:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 293              		.loc 1 1880 0 discriminator 2
 294 007c 0137     		adds	r7, r7, #1
 295              	.LVL35:
 296              	.L16:
1880:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 297              		.loc 1 1880 0 is_stmt 0 discriminator 1
 298 007e 6B01     		lsls	r3, r5, #5
 299 0080 0449     		ldr	r1, .L25
 300 0082 CB18     		adds	r3, r1, r3
 301 0084 1B8B     		ldrh	r3, [r3, #24]
 302 0086 9F42     		cmp	r7, r3
 303 0088 EDD3     		bcc	.L24
1892:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1893:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         return (calibrateStatus);
1894:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 304              		.loc 1 1894 0 is_stmt 1
 305 008a 0198     		ldr	r0, [sp, #4]
 306 008c 02B0     		add	sp, sp, #8
 307              		@ sp needed
 308              	.LVL36:
 309              	.LVL37:
 310              	.LVL38:
 311              	.LVL39:
 312 008e 04BC     		pop	{r2}
 313 0090 9046     		mov	r8, r2
 314 0092 F0BD     		pop	{r4, r5, r6, r7, pc}
 315              	.L26:
 316              		.align	2
 317              	.L25:
 318 0094 00000000 		.word	CapSense_dsFlash
 319              		.cfi_endproc
 320              	.LFE19:
 321              		.size	CapSense_SsCSDCalibrateCheck, .-CapSense_SsCSDCalibrateCheck
 322              		.section	.text.CapSense_SsCSDSwitchIdacGain,"ax",%progbits
 323              		.align	2
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 40


 324              		.code	16
 325              		.thumb_func
 326              		.type	CapSense_SsCSDSwitchIdacGain, %function
 327              	CapSense_SsCSDSwitchIdacGain:
 328              	.LFB20:
1895:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1896:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1897:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTO_GAIN_EN)
1898:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*******************************************************************************
1899:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * Function Name: CapSense_SsCSDSwitchIdacGain
1900:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ****************************************************************************//**
1901:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
1902:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \brief
1903:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  This internal function switches to the lower IDAC gain is possible.
1904:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
1905:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \details
1906:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  This internal function switches to the lower IDAC gain is possible.
1907:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  Conditions of switching to the lower IDAC gains:
1908:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  1. The current IDAC gain is not the lowest one.
1909:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  2. The maximum IDAC at gain switching will not be out of range.
1910:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  3. The minimum IDAC is still below the acceptable range.
1911:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
1912:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \param ptrFlashWidget
1913:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  Specifies the pointer to a widget.
1914:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
1915:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \return Returns the status of the operation:
1916:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - Zero     - Gain switching is not needed.
1917:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - Non-Zero - Gain was switched to the lower one.
1918:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
1919:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *******************************************************************************/
1920:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static uint32 CapSense_SsCSDSwitchIdacGain(CapSense_FLASH_WD_STRUCT const *ptrFlashWidget)
1921:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 329              		.loc 1 1921 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333              	.LVL40:
 334 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 335              		.cfi_def_cfa_offset 24
 336              		.cfi_offset 3, -24
 337              		.cfi_offset 4, -20
 338              		.cfi_offset 5, -16
 339              		.cfi_offset 6, -12
 340              		.cfi_offset 7, -8
 341              		.cfi_offset 14, -4
 342 0002 4F46     		mov	r7, r9
 343 0004 4646     		mov	r6, r8
 344 0006 C0B4     		push	{r6, r7}
 345              		.cfi_def_cfa_offset 32
 346              		.cfi_offset 8, -32
 347              		.cfi_offset 9, -28
 348 0008 0700     		movs	r7, r0
 349              	.LVL41:
1922:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 ratio;
1923:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 maxIdac;
1924:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 minIdac;
1925:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 status = 0u;
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 41


1926:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 freqChannel;
1927:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 gainIndex;
1928:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1929:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidg
 350              		.loc 1 1929 0
 351 000a 4668     		ldr	r6, [r0, #4]
 352              	.LVL42:
1930:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1931:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 uint32 snsIndex;
1932:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
 353              		.loc 1 1932 0
 354 000c 8468     		ldr	r4, [r0, #8]
 355              	.LVL43:
1933:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
1934:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1935:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             gainIndex = ptrRamWidget->idacGainIndex;
 356              		.loc 1 1935 0
 357 000e B57A     		ldrb	r5, [r6, #10]
 358 0010 A846     		mov	r8, r5
 359              	.LVL44:
1936:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1937:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Find maximum and minimum IDACs */
1938:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             maxIdac = 0u;
1939:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             minIdac = CapSense_CSD_CAL_IDAC_MAX_VALUE;
1940:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 360              		.loc 1 1940 0
 361 0012 0123     		movs	r3, #1
1939:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 362              		.loc 1 1939 0
 363 0014 7F20     		movs	r0, #127
 364              	.LVL45:
1938:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             minIdac = CapSense_CSD_CAL_IDAC_MAX_VALUE;
 365              		.loc 1 1938 0
 366 0016 0022     		movs	r2, #0
 367 0018 9146     		mov	r9, r2
 368              		.loc 1 1940 0
 369 001a 08E0     		b	.L28
 370              	.LVL46:
 371              	.L31:
1941:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1942:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (maxIdac < ptrRamWidget->idacMod[freqChannel])
 372              		.loc 1 1942 0
 373 001c B318     		adds	r3, r6, r2
 374 001e 5B7A     		ldrb	r3, [r3, #9]
 375 0020 9945     		cmp	r9, r3
 376 0022 00D2     		bcs	.L29
1943:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1944:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     maxIdac = ptrRamWidget->idacMod[freqChannel];
 377              		.loc 1 1944 0
 378 0024 9946     		mov	r9, r3
 379              	.LVL47:
 380              	.L29:
1945:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1946:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (minIdac > ptrRamWidget->idacMod[freqChannel])
 381              		.loc 1 1946 0
 382 0026 9842     		cmp	r0, r3
 383 0028 00D9     		bls	.L30
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 42


1947:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1948:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     minIdac = ptrRamWidget->idacMod[freqChannel];
 384              		.loc 1 1948 0
 385 002a 1800     		movs	r0, r3
 386              	.LVL48:
 387              	.L30:
 388 002c 1300     		movs	r3, r2
 389              	.LVL49:
 390              	.L28:
1940:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 391              		.loc 1 1940 0 discriminator 1
 392 002e 5A1E     		subs	r2, r3, #1
 393              	.LVL50:
 394 0030 002B     		cmp	r3, #0
 395 0032 F3D1     		bne	.L31
 396 0034 0021     		movs	r1, #0
 397 0036 0CE0     		b	.L32
 398              	.LVL51:
 399              	.L34:
1949:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1950:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1951:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1952:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
1953:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
1954:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         if (maxIdac < ptrRamWidget->rowIdacMod[freqChannel])
1955:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
1956:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             maxIdac = ptrRamWidget->rowIdacMod[freqChannel];
1957:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         }
1958:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         if (minIdac > ptrRamWidget->rowIdacMod[freqChannel])
1959:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
1960:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             minIdac = ptrRamWidget->rowIdacMod[freqChannel];
1961:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         }
1962:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
1963:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif
1964:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
1965:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1966:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 for(snsIndex = 0u; snsIndex < ptrFlashWidget->totalNumSns; snsIndex++)
1967:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1968:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1969:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
1970:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         if (minIdac > ptrRamSensor->idacComp[freqChannel])
 400              		.loc 1 1970 0
 401 0038 A318     		adds	r3, r4, r2
 402 003a 5B7A     		ldrb	r3, [r3, #9]
 403 003c 9842     		cmp	r0, r3
 404 003e 00D9     		bls	.L33
1971:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
1972:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             minIdac = ptrRamSensor->idacComp[freqChannel];
 405              		.loc 1 1972 0
 406 0040 1800     		movs	r0, r3
 407              	.LVL52:
 408              	.L33:
 409 0042 1300     		movs	r3, r2
 410 0044 00E0     		b	.L35
 411              	.LVL53:
 412              	.L40:
 413 0046 0123     		movs	r3, #1
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 43


 414              	.LVL54:
 415              	.L35:
1968:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 416              		.loc 1 1968 0 discriminator 1
 417 0048 5A1E     		subs	r2, r3, #1
 418              	.LVL55:
 419 004a 002B     		cmp	r3, #0
 420 004c F4D1     		bne	.L34
1973:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         }
1974:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
1975:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrRamSensor++;
 421              		.loc 1 1975 0 discriminator 2
 422 004e 0A34     		adds	r4, r4, #10
 423              	.LVL56:
1966:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 424              		.loc 1 1966 0 discriminator 2
 425 0050 0131     		adds	r1, r1, #1
 426              	.LVL57:
 427              	.L32:
1966:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 428              		.loc 1 1966 0 is_stmt 0 discriminator 1
 429 0052 3B8B     		ldrh	r3, [r7, #24]
 430 0054 9942     		cmp	r1, r3
 431 0056 F6D3     		bcc	.L40
1976:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1977:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
1978:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1979:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Check gain switch conditions */
1980:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (gainIndex != 0u)
 432              		.loc 1 1980 0 is_stmt 1
 433 0058 4346     		mov	r3, r8
 434 005a 002B     		cmp	r3, #0
 435 005c 13D0     		beq	.L41
 436              	.LVL58:
1981:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1982:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (minIdac < CapSense_CSD_IDAC_MIN)
 437              		.loc 1 1982 0
 438 005e 1328     		cmp	r0, #19
 439 0060 13D8     		bhi	.L42
1983:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1984:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ratio = CapSense_idacGainTable[gainIndex].gainValue /
 440              		.loc 1 1984 0
 441 0062 0D49     		ldr	r1, .L44
 442              	.LVL59:
 443 0064 EA00     		lsls	r2, r5, #3
 444              	.LVL60:
 445 0066 8A18     		adds	r2, r1, r2
 446 0068 5068     		ldr	r0, [r2, #4]
 447              	.LVL61:
1985:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             CapSense_idacGainTable[gainIndex - 1u].gainValue;
 448              		.loc 1 1985 0
 449 006a 6B1E     		subs	r3, r5, #1
 450              	.LVL62:
 451 006c DB00     		lsls	r3, r3, #3
 452 006e CB18     		adds	r3, r1, r3
 453 0070 5968     		ldr	r1, [r3, #4]
1984:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             CapSense_idacGainTable[gainIndex - 1u].gainValue;
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 44


 454              		.loc 1 1984 0
 455 0072 FFF7FEFF 		bl	__aeabi_uidiv
 456              	.LVL63:
1986:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if ((maxIdac * ratio) < CapSense_CSD_CAL_IDAC_MAX_VALUE)
 457              		.loc 1 1986 0
 458 0076 4F46     		mov	r7, r9
 459              	.LVL64:
 460 0078 4743     		muls	r7, r0
 461 007a 7E2F     		cmp	r7, #126
 462 007c 07D8     		bhi	.L43
1987:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
1988:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         /* Switch to lower idac gain */
1989:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrRamWidget->idacGainIndex--;
 463              		.loc 1 1989 0
 464 007e 013D     		subs	r5, r5, #1
 465              	.LVL65:
 466 0080 B572     		strb	r5, [r6, #10]
 467              	.LVL66:
1990:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         status = 1u;
 468              		.loc 1 1990 0
 469 0082 0120     		movs	r0, #1
 470              	.LVL67:
 471 0084 04E0     		b	.L36
 472              	.LVL68:
 473              	.L41:
1925:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 freqChannel;
 474              		.loc 1 1925 0
 475 0086 0020     		movs	r0, #0
 476              	.LVL69:
 477 0088 02E0     		b	.L36
 478              	.LVL70:
 479              	.L42:
 480 008a 0020     		movs	r0, #0
 481              	.LVL71:
 482 008c 00E0     		b	.L36
 483              	.LVL72:
 484              	.L43:
 485 008e 0020     		movs	r0, #0
 486              	.LVL73:
 487              	.L36:
1991:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
1992:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1993:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
1994:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1995:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             return (status);
1996:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 488              		.loc 1 1996 0
 489              		@ sp needed
 490              	.LVL74:
 491              	.LVL75:
 492              	.LVL76:
 493              	.LVL77:
 494 0090 0CBC     		pop	{r2, r3}
 495 0092 9046     		mov	r8, r2
 496 0094 9946     		mov	r9, r3
 497 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 498              	.L45:
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 45


 499              		.align	2
 500              	.L44:
 501 0098 00000000 		.word	CapSense_idacGainTable
 502              		.cfi_endproc
 503              	.LFE20:
 504              		.size	CapSense_SsCSDSwitchIdacGain, .-CapSense_SsCSDSwitchIdacGain
 505              		.section	.text.CapSense_SsCSDNormalizeIdac,"ax",%progbits
 506              		.align	2
 507              		.code	16
 508              		.thumb_func
 509              		.type	CapSense_SsCSDNormalizeIdac, %function
 510              	CapSense_SsCSDNormalizeIdac:
 511              	.LFB21:
1997:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_AUTO_GAIN_EN) */
1998:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1999:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2000:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2001:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*******************************************************************************
2002:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * Function Name: CapSense_SsCSDNormalizeIdac
2003:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ****************************************************************************//**
2004:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
2005:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \brief
2006:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  This function normalizes compensation IDAC.
2007:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
2008:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \details
2009:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  This function normalizes compensation IDAC.
2010:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
2011:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \param ptrFlashWidget
2012:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  Specifies the pointer to a widget.
2013:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
2014:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \param target
2015:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  Raw count target in percentage.
2016:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
2017:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *******************************************************************************/
2018:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static void CapSense_SsCSDNormalizeIdac(CapSense_FLASH_WD_STRUCT const *ptrFlashWidget, uin
2019:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 512              		.loc 1 2019 0
 513              		.cfi_startproc
 514              		@ args = 0, pretend = 0, frame = 8
 515              		@ frame_needed = 0, uses_anonymous_args = 0
 516              	.LVL78:
 517 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 518              		.cfi_def_cfa_offset 20
 519              		.cfi_offset 4, -20
 520              		.cfi_offset 5, -16
 521              		.cfi_offset 6, -12
 522              		.cfi_offset 7, -8
 523              		.cfi_offset 14, -4
 524 0002 5F46     		mov	r7, fp
 525 0004 5646     		mov	r6, r10
 526 0006 4D46     		mov	r5, r9
 527 0008 E0B4     		push	{r5, r6, r7}
 528              		.cfi_def_cfa_offset 32
 529              		.cfi_offset 9, -32
 530              		.cfi_offset 10, -28
 531              		.cfi_offset 11, -24
 532 000a 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 46


 533              		.cfi_def_cfa_offset 40
 534 000c 0700     		movs	r7, r0
 535 000e 8A46     		mov	r10, r1
2020:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 snsIndex;
2021:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 freqChannel;
2022:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 maxIdac;
2023:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 minIdac;
2024:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 minRaw;
2025:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 maxRawLevel;
2026:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 rawLevel;
2027:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 iMod;
2028:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2029:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidg
 536              		.loc 1 2029 0
 537 0010 4368     		ldr	r3, [r0, #4]
 538 0012 9B46     		mov	fp, r3
 539              	.LVL79:
2030:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_RAM_SNS_STRUCT *ptrRamSensor;
2031:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2032:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Calculate raw count level based on resolution and target */
2033:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             maxRawLevel = (0x00000001Lu << ptrRamWidget->resolution) - 1u;
 540              		.loc 1 2033 0
 541 0014 1B88     		ldrh	r3, [r3]
 542              	.LVL80:
 543 0016 0122     		movs	r2, #1
 544 0018 9A40     		lsls	r2, r2, r3
 545 001a 1300     		movs	r3, r2
 546 001c 013B     		subs	r3, r3, #1
 547 001e 0193     		str	r3, [sp, #4]
 548              	.LVL81:
2034:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2035:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /*
2036:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             * IDAC Normalization is performed separately for each multi-frequency channel
2037:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             * and separately for row and column
2038:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             */
2039:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 549              		.loc 1 2039 0
 550 0020 0123     		movs	r3, #1
 551              	.LVL82:
 552 0022 4AE0     		b	.L47
 553              	.LVL83:
 554              	.L56:
2040:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2041:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Find maximum and minimum IDACs */
2042:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 maxIdac = ptrRamWidget->idacMod[freqChannel];
 555              		.loc 1 2042 0
 556 0024 5B46     		mov	r3, fp
 557 0026 5B19     		adds	r3, r3, r5
 558 0028 5B7A     		ldrb	r3, [r3, #9]
 559 002a 9946     		mov	r9, r3
 560              	.LVL84:
2043:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 minIdac = ptrRamWidget->idacMod[freqChannel];
2044:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
 561              		.loc 1 2044 0
 562 002c BB68     		ldr	r3, [r7, #8]
 563              	.LVL85:
2045:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 minRaw = ptrRamSensor->raw[freqChannel];
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 47


 564              		.loc 1 2045 0
 565 002e 6A00     		lsls	r2, r5, #1
 566 0030 D05A     		ldrh	r0, [r2, r3]
 567              	.LVL86:
2043:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 minIdac = ptrRamWidget->idacMod[freqChannel];
 568              		.loc 1 2043 0
 569 0032 4C46     		mov	r4, r9
2046:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 for(snsIndex = 0u; snsIndex < ptrFlashWidget->numCols; snsIndex++)
 570              		.loc 1 2046 0
 571 0034 0022     		movs	r2, #0
 572 0036 08E0     		b	.L48
 573              	.LVL87:
 574              	.L50:
2047:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2048:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if (minIdac > ptrRamSensor->idacComp[freqChannel])
 575              		.loc 1 2048 0
 576 0038 5919     		adds	r1, r3, r5
 577 003a 497A     		ldrb	r1, [r1, #9]
 578 003c 8C42     		cmp	r4, r1
 579 003e 02D9     		bls	.L49
 580              	.LVL88:
2049:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2050:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         minIdac = ptrRamSensor->idacComp[freqChannel];
2051:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         minRaw = ptrRamSensor->raw[freqChannel];
 581              		.loc 1 2051 0
 582 0040 6800     		lsls	r0, r5, #1
 583              	.LVL89:
 584 0042 C05A     		ldrh	r0, [r0, r3]
 585              	.LVL90:
2050:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         minRaw = ptrRamSensor->raw[freqChannel];
 586              		.loc 1 2050 0
 587 0044 0C00     		movs	r4, r1
 588              	.LVL91:
 589              	.L49:
2052:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2053:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrRamSensor++;
 590              		.loc 1 2053 0 discriminator 2
 591 0046 0A33     		adds	r3, r3, #10
 592              	.LVL92:
2046:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 593              		.loc 1 2046 0 discriminator 2
 594 0048 0132     		adds	r2, r2, #1
 595              	.LVL93:
 596              	.L48:
2046:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 597              		.loc 1 2046 0 is_stmt 0 discriminator 1
 598 004a F97E     		ldrb	r1, [r7, #27]
 599 004c 8A42     		cmp	r2, r1
 600 004e F3D3     		bcc	.L50
2054:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2055:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2056:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Define new modulator IDAC */
2057:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 rawLevel = ((minRaw * CapSense_PERCENTAGE_100) / maxRawLevel) + CapSense_PERCENTAGE
 601              		.loc 1 2057 0 is_stmt 1
 602 0050 6423     		movs	r3, #100
 603              	.LVL94:
 604 0052 5843     		muls	r0, r3
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 48


 605              	.LVL95:
 606 0054 0199     		ldr	r1, [sp, #4]
 607 0056 FFF7FEFF 		bl	__aeabi_uidiv
 608              	.LVL96:
 609 005a 6430     		adds	r0, r0, #100
 610              	.LVL97:
2058:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 iMod = (rawLevel * minIdac) / target;
 611              		.loc 1 2058 0
 612 005c 6043     		muls	r0, r4
 613              	.LVL98:
 614 005e 5146     		mov	r1, r10
 615 0060 FFF7FEFF 		bl	__aeabi_uidiv
 616              	.LVL99:
2059:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2060:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (iMod > maxIdac)
 617              		.loc 1 2060 0
 618 0064 8145     		cmp	r9, r0
 619 0066 00D3     		bcc	.L51
2058:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 iMod = (rawLevel * minIdac) / target;
 620              		.loc 1 2058 0
 621 0068 8146     		mov	r9, r0
 622              	.LVL100:
 623              	.L51:
2061:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2062:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     iMod = maxIdac;
2063:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2064:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 ptrRamWidget->idacMod[freqChannel] = (uint8)iMod;
 624              		.loc 1 2064 0
 625 006a 5B46     		mov	r3, fp
 626 006c 5B19     		adds	r3, r3, r5
 627 006e 4A46     		mov	r2, r9
 628 0070 5A72     		strb	r2, [r3, #9]
2065:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2066:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Re-calculate compensation IDAC */
2067:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
 629              		.loc 1 2067 0
 630 0072 BC68     		ldr	r4, [r7, #8]
 631              	.LVL101:
2068:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 for(snsIndex = 0u; snsIndex < ptrFlashWidget->numCols; snsIndex++)
 632              		.loc 1 2068 0
 633 0074 0026     		movs	r6, #0
 634 0076 1CE0     		b	.L52
 635              	.LVL102:
 636              	.L55:
2069:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2070:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     rawLevel = (((ptrRamSensor->raw[freqChannel] * CapSense_PERCENTAGE_100) / maxRa
 637              		.loc 1 2070 0
 638 0078 6B00     		lsls	r3, r5, #1
 639 007a 185B     		ldrh	r0, [r3, r4]
 640 007c 6423     		movs	r3, #100
 641 007e 5843     		muls	r0, r3
 642 0080 0199     		ldr	r1, [sp, #4]
 643 0082 FFF7FEFF 		bl	__aeabi_uidiv
 644              	.LVL103:
 645 0086 6430     		adds	r0, r0, #100
2071:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         CapSense_PERCENTAGE_100) * ptrRamSensor->idacComp[freqChannel];
 646              		.loc 1 2071 0
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 49


 647 0088 6319     		adds	r3, r4, r5
 648 008a 5B7A     		ldrb	r3, [r3, #9]
2070:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         CapSense_PERCENTAGE_100) * ptrRamSensor->idacComp[freqChannel];
 649              		.loc 1 2070 0
 650 008c 5843     		muls	r0, r3
 651              	.LVL104:
2072:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if (rawLevel < (iMod * target))
 652              		.loc 1 2072 0
 653 008e 5346     		mov	r3, r10
 654 0090 4A46     		mov	r2, r9
 655 0092 5343     		muls	r3, r2
 656 0094 9842     		cmp	r0, r3
 657 0096 03D2     		bcs	.L53
 658              	.LVL105:
2073:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2074:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrRamSensor->idacComp[freqChannel] = 0u;
 659              		.loc 1 2074 0
 660 0098 6319     		adds	r3, r4, r5
 661 009a 0022     		movs	r2, #0
 662              	.LVL106:
 663 009c 5A72     		strb	r2, [r3, #9]
 664 009e 06E0     		b	.L54
 665              	.LVL107:
 666              	.L53:
2075:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2076:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     else
2077:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2078:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrRamSensor->idacComp[freqChannel] = (uint8)(((rawLevel - (iMod * target))
 667              		.loc 1 2078 0
 668 00a0 C01A     		subs	r0, r0, r3
 669              	.LVL108:
 670 00a2 3230     		adds	r0, r0, #50
2079:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             (CapSense_PERCENTAGE_100 >> 1u)) / CapSense_PERCENTAGE_100);
 671              		.loc 1 2079 0
 672 00a4 6421     		movs	r1, #100
 673 00a6 FFF7FEFF 		bl	__aeabi_uidiv
 674              	.LVL109:
2078:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             (CapSense_PERCENTAGE_100 >> 1u)) / CapSense_PERCENTAGE_100);
 675              		.loc 1 2078 0
 676 00aa 6319     		adds	r3, r4, r5
 677 00ac 5872     		strb	r0, [r3, #9]
 678              	.L54:
2080:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2081:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrRamSensor++;
 679              		.loc 1 2081 0 discriminator 2
 680 00ae 0A34     		adds	r4, r4, #10
 681              	.LVL110:
2068:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 682              		.loc 1 2068 0 discriminator 2
 683 00b0 0136     		adds	r6, r6, #1
 684              	.LVL111:
 685              	.L52:
2068:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 686              		.loc 1 2068 0 is_stmt 0 discriminator 1
 687 00b2 FB7E     		ldrb	r3, [r7, #27]
 688 00b4 9E42     		cmp	r6, r3
 689 00b6 DFD3     		bcc	.L55
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 50


2039:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 690              		.loc 1 2039 0 is_stmt 1
 691 00b8 2B00     		movs	r3, r5
 692              	.LVL112:
 693              	.L47:
2039:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 694              		.loc 1 2039 0 is_stmt 0 discriminator 1
 695 00ba 5D1E     		subs	r5, r3, #1
 696              	.LVL113:
 697 00bc 002B     		cmp	r3, #0
 698 00be B1D1     		bne	.L56
2082:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2083:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2084:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2085:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
2086:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
2087:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2088:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         /* Find maximum and minimum IDACs */
2089:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         maxIdac = ptrRamWidget->rowIdacMod[freqChannel];
2090:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         minIdac = ptrRamWidget->rowIdacMod[freqChannel];
2091:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrRamSensor = &(ptrFlashWidget->ptr2SnsRam[ptrFlashWidget->numCols]);
2092:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         minRaw = ptrRamSensor->raw[freqChannel];
2093:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         for(snsIndex = ptrFlashWidget->numCols; snsIndex < ptrFlashWidget->totalNum
2094:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
2095:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             if (minIdac > ptrRamSensor->idacComp[freqChannel])
2096:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2097:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 minIdac = ptrRamSensor->idacComp[freqChannel];
2098:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 minRaw = ptrRamSensor->raw[freqChannel];
2099:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
2100:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             ptrRamSensor++;
2101:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         }
2102:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2103:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         /* Define new modulator IDAC */
2104:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         rawLevel = ((minRaw * CapSense_PERCENTAGE_100) / maxRawLevel) + CapSense_PE
2105:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         iMod = (rawLevel * minIdac) / target;
2106:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2107:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         if (iMod > maxIdac)
2108:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
2109:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             iMod = maxIdac;
2110:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         }
2111:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrRamWidget->rowIdacMod[freqChannel] = (uint8)iMod;
2112:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2113:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         /* Re-calculate compensation IDAC */
2114:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrRamSensor = &(ptrFlashWidget->ptr2SnsRam[ptrFlashWidget->numCols]);
2115:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         for(snsIndex = 0u; snsIndex < ptrFlashWidget->numRows; snsIndex++)
2116:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
2117:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             rawLevel = (((ptrRamSensor->raw[freqChannel] * CapSense_PERCENTAGE_100)
2118:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 CapSense_PERCENTAGE_100) * ptrRamSensor->idacComp[freqChannel];
2119:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             if (rawLevel < (iMod * target))
2120:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2121:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ptrRamSensor->idacComp[freqChannel] = 0u;
2122:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
2123:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             else
2124:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2125:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ptrRamSensor->idacComp[freqChannel] = (uint8)(((rawLevel - (iMod * 
2126:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     (CapSense_PERCENTAGE_100 >> 1u)) / CapSense_PERCENTAGE_100);
2127:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 51


2128:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             ptrRamSensor++;
2129:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         }
2130:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2131:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif
2132:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2133:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 699              		.loc 1 2133 0 is_stmt 1
 700 00c0 02B0     		add	sp, sp, #8
 701              		@ sp needed
 702              	.LVL114:
 703              	.LVL115:
 704              	.LVL116:
 705              	.LVL117:
 706 00c2 1CBC     		pop	{r2, r3, r4}
 707 00c4 9146     		mov	r9, r2
 708 00c6 9A46     		mov	r10, r3
 709 00c8 A346     		mov	fp, r4
 710 00ca F0BD     		pop	{r4, r5, r6, r7, pc}
 711              		.cfi_endproc
 712              	.LFE21:
 713              		.size	CapSense_SsCSDNormalizeIdac, .-CapSense_SsCSDNormalizeIdac
 714              		.section	.text.CapSense_SsCSDInitialize,"ax",%progbits
 715              		.align	2
 716              		.global	CapSense_SsCSDInitialize
 717              		.code	16
 718              		.thumb_func
 719              		.type	CapSense_SsCSDInitialize, %function
 720              	CapSense_SsCSDInitialize:
 721              	.LFB4:
 525:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 722              		.loc 1 525 0
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 0
 725              		@ frame_needed = 0, uses_anonymous_args = 0
 726 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 727              		.cfi_def_cfa_offset 24
 728              		.cfi_offset 3, -24
 729              		.cfi_offset 4, -20
 730              		.cfi_offset 5, -16
 731              		.cfi_offset 6, -12
 732              		.cfi_offset 7, -8
 733              		.cfi_offset 14, -4
 531:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 734              		.loc 1 531 0
 735 0002 334B     		ldr	r3, .L59
 736 0004 8122     		movs	r2, #129
 737 0006 9A5C     		ldrb	r2, [r3, r2]
 738 0008 8021     		movs	r1, #128
 739 000a 585C     		ldrb	r0, [r3, r1]
 740 000c 8242     		cmp	r2, r0
 741 000e 06D0     		beq	.L58
 533:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_dsRam.scanCurrentISC = CapSense_dsRam.scanCsdISC;
 742              		.loc 1 533 0
 743 0010 FFF7FEFF 		bl	CapSense_SsSetAllIOsState
 744              	.LVL118:
 534:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 745              		.loc 1 534 0
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 52


 746 0014 2E4B     		ldr	r3, .L59
 747 0016 8022     		movs	r2, #128
 748 0018 995C     		ldrb	r1, [r3, r2]
 749 001a 0132     		adds	r2, r2, #1
 750 001c 9954     		strb	r1, [r3, r2]
 751              	.L58:
 551:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 752              		.loc 1 551 0
 753 001e 0120     		movs	r0, #1
 754 0020 FFF7FEFF 		bl	CapSense_DischargeExtCapacitors
 755              	.LVL119:
 554:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 756              		.loc 1 554 0
 757 0024 C022     		movs	r2, #192
 758 0026 1203     		lsls	r2, r2, #12
 759 0028 2A4B     		ldr	r3, .L59+4
 760 002a 1A60     		str	r2, [r3]
 557:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue |= CapSense_DEFAULT_SW_REFGEN_SEL;
 761              		.loc 1 557 0
 762 002c 2A4D     		ldr	r5, .L59+8
 763 002e 2B68     		ldr	r3, [r5]
 764              	.LVL120:
 558:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 765              		.loc 1 558 0
 766 0030 2A4E     		ldr	r6, .L59+12
 767 0032 3343     		orrs	r3, r6
 768              	.LVL121:
 560:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_INTR_SET_PTR,         CapSense_DEFAULT_CSD_INTR_SET);
 769              		.loc 1 560 0
 770 0034 2B60     		str	r3, [r5]
 561:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR,   CapSense_DEFAULT_CSD_SW_FW_TANK_SEL);
 771              		.loc 1 561 0
 772 0036 0024     		movs	r4, #0
 773 0038 294B     		ldr	r3, .L59+16
 774              	.LVL122:
 775 003a 1C60     		str	r4, [r3]
 776              	.LVL123:
 562:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_DSI_SEL_PTR,       CapSense_DEFAULT_CSD_SW_DSI_SEL);
 777              		.loc 1 562 0
 778 003c 294B     		ldr	r3, .L59+20
 779 003e 1C60     		str	r4, [r3]
 563:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_ADC_CTL_PTR,          CapSense_DEFAULT_CSD_ADC_CTL);
 780              		.loc 1 563 0
 781 0040 0122     		movs	r2, #1
 782 0042 294B     		ldr	r3, .L59+24
 783 0044 1A60     		str	r2, [r3]
 564:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_AMBUF_PTR,            CapSense_AMBUF_PWR_MODE_OFF);
 784              		.loc 1 564 0
 785 0046 294B     		ldr	r3, .L59+28
 786 0048 1C60     		str	r4, [r3]
 565:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,    CapSense_DEFAULT_SW_SHIELD_SEL);
 787              		.loc 1 565 0
 788 004a 294B     		ldr	r3, .L59+32
 789 004c 1C60     		str	r4, [r3]
 566:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR,      CapSense_DEFAULT_SW_HS_P_SEL);
 790              		.loc 1 566 0
 791 004e 294B     		ldr	r3, .L59+36
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 53


 792 0050 1C60     		str	r4, [r3]
 567:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR,      CapSense_DEFAULT_SW_HS_N_SEL);
 793              		.loc 1 567 0
 794 0052 294B     		ldr	r3, .L59+40
 795 0054 1C60     		str	r4, [r3]
 568:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_HSCMP_PTR,            CapSense_DEFAULT_HSCMP_CFG);
 796              		.loc 1 568 0
 797 0056 294F     		ldr	r7, .L59+44
 798 0058 3C60     		str	r4, [r7]
 569:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 799              		.loc 1 569 0
 800 005a 294B     		ldr	r3, .L59+48
 801 005c 1C60     		str	r4, [r3]
 572:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     (uint32)(CapSense_HSIOM_SEL_AMUXA << CapSense_CMOD_HSIOM_SHIFT));
 802              		.loc 1 572 0
 803 005e C022     		movs	r2, #192
 804 0060 D201     		lsls	r2, r2, #7
 805 0062 F021     		movs	r1, #240
 806 0064 0902     		lsls	r1, r1, #8
 807 0066 2748     		ldr	r0, .L59+52
 808 0068 FFF7FEFF 		bl	CapSense_WriteBitsSafe
 809              	.LVL124:
 576:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 810              		.loc 1 576 0
 811 006c 0022     		movs	r2, #0
 812 006e 0821     		movs	r1, #8
 813 0070 2548     		ldr	r0, .L59+56
 814 0072 FFF7FEFF 		bl	CapSense_WriteBitsSafe
 815              	.LVL125:
 579:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue |= CapSense_SW_BYP_SEL_SW_BYA_MASK;
 816              		.loc 1 579 0
 817 0076 254A     		ldr	r2, .L59+60
 818 0078 1368     		ldr	r3, [r2]
 819              	.LVL126:
 580:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_BYP_SEL_PTR, newRegValue);
 820              		.loc 1 580 0
 821 007a 8021     		movs	r1, #128
 822 007c 4901     		lsls	r1, r1, #5
 823 007e 0B43     		orrs	r3, r1
 824              	.LVL127:
 581:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 825              		.loc 1 581 0
 826 0080 1360     		str	r3, [r2]
 589:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD__CMOD_PAD == CapSense_CMOD_CONNECTION) */
 827              		.loc 1 589 0
 828 0082 1022     		movs	r2, #16
 829 0084 224B     		ldr	r3, .L59+64
 830              	.LVL128:
 831 0086 1A60     		str	r2, [r3]
 832              	.LVL129:
 604:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= CapSense_SW_REFGEN_SEL_SW_SGR_MASK | CapSense_SW_REFGEN_SEL_SW_IAIB_MASK
 833              		.loc 1 604 0
 834 0088 2B68     		ldr	r3, [r5]
 835              	.LVL130:
 605:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 836              		.loc 1 605 0
 837 008a 3343     		orrs	r3, r6
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 54


 838              	.LVL131:
 606:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 839              		.loc 1 606 0
 840 008c 2B60     		str	r3, [r5]
 615:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 841              		.loc 1 615 0
 842 008e 8023     		movs	r3, #128
 843              	.LVL132:
 844 0090 5B04     		lsls	r3, r3, #17
 845 0092 204A     		ldr	r2, .L59+68
 846 0094 1360     		str	r3, [r2]
 847              	.LVL133:
 642:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 848              		.loc 1 642 0
 849 0096 2049     		ldr	r1, .L59+72
 850 0098 204A     		ldr	r2, .L59+76
 851 009a 1160     		str	r1, [r2]
 655:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 852              		.loc 1 655 0
 853 009c 204A     		ldr	r2, .L59+80
 854 009e 1460     		str	r4, [r2]
 659:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_2000_MV > CapSense_CYDEV_VDDA_MV) */
 855              		.loc 1 659 0
 856 00a0 3B60     		str	r3, [r7]
 663:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 857              		.loc 1 663 0
 858 00a2 FFF7FEFF 		bl	CapSense_SsCSDConfigIDACs
 859              	.LVL134:
 666:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 860              		.loc 1 666 0
 861 00a6 0A4B     		ldr	r3, .L59
 862 00a8 987F     		ldrb	r0, [r3, #30]
 863 00aa FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 864              	.LVL135:
 674:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 865              		.loc 1 674 0
 866 00ae FFF7FEFF 		bl	CapSense_SsCSDSetFilterDelay
 867              	.LVL136:
 678:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_CONFIG_SENSE_EN_MASK |
 868              		.loc 1 678 0
 869 00b2 1C4B     		ldr	r3, .L59+84
 870 00b4 1B68     		ldr	r3, [r3]
 871 00b6 1C4A     		ldr	r2, .L59+88
 872 00b8 1343     		orrs	r3, r2
 873 00ba 1C4A     		ldr	r2, .L59+92
 874 00bc 1360     		str	r3, [r2]
 684:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 875              		.loc 1 684 0
 876 00be 0F22     		movs	r2, #15
 877 00c0 1B4B     		ldr	r3, .L59+96
 878 00c2 1A60     		str	r2, [r3]
 687:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 879              		.loc 1 687 0
 880 00c4 1B4B     		ldr	r3, .L59+100
 881 00c6 1C60     		str	r4, [r3]
 690:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 882              		.loc 1 690 0
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 55


 883 00c8 053A     		subs	r2, r2, #5
 884 00ca 1B4B     		ldr	r3, .L59+104
 885 00cc 1A60     		str	r2, [r3]
 718:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 886              		.loc 1 718 0
 887              		@ sp needed
 888 00ce F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 889              	.L60:
 890              		.align	2
 891              	.L59:
 892 00d0 00000000 		.word	CapSense_dsRam
 893 00d4 04020B40 		.word	1074463236
 894 00d8 A8020B40 		.word	1074463400
 895 00dc 01000010 		.word	268435457
 896 00e0 F4000B40 		.word	1074462964
 897 00e4 B4020B40 		.word	1074463412
 898 00e8 C0020B40 		.word	1074463424
 899 00ec 20030B40 		.word	1074463520
 900 00f0 84010B40 		.word	1074463108
 901 00f4 88020B40 		.word	1074463368
 902 00f8 80020B40 		.word	1074463360
 903 00fc 84020B40 		.word	1074463364
 904 0100 80010B40 		.word	1074463104
 905 0104 00040240 		.word	1073873920
 906 0108 00040440 		.word	1074004992
 907 010c 94020B40 		.word	1074463380
 908 0110 A0020B40 		.word	1074463392
 909 0114 A4020B40 		.word	1074463396
 910 0118 41120000 		.word	4673
 911 011c 88010B40 		.word	1074463112
 912 0120 90020B40 		.word	1074463376
 913 0124 00000000 		.word	.LANCHOR0
 914 0128 00100080 		.word	-2147479552
 915 012c 00000B40 		.word	1074462720
 916 0130 00030B40 		.word	1074463488
 917 0134 F0010B40 		.word	1074463216
 918 0138 10030B40 		.word	1074463504
 919              		.cfi_endproc
 920              	.LFE4:
 921              		.size	CapSense_SsCSDInitialize, .-CapSense_SsCSDInitialize
 922              		.section	.text.CapSense_SsCSDSetUpIdacs,"ax",%progbits
 923              		.align	2
 924              		.global	CapSense_SsCSDSetUpIdacs
 925              		.code	16
 926              		.thumb_func
 927              		.type	CapSense_SsCSDSetUpIdacs, %function
 928              	CapSense_SsCSDSetUpIdacs:
 929              	.LFB6:
 799:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint8 interruptState;
 930              		.loc 1 799 0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 0
 933              		@ frame_needed = 0, uses_anonymous_args = 0
 934              	.LVL137:
 935 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 936              		.cfi_def_cfa_offset 24
 937              		.cfi_offset 3, -24
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 56


 938              		.cfi_offset 4, -20
 939              		.cfi_offset 5, -16
 940              		.cfi_offset 6, -12
 941              		.cfi_offset 7, -8
 942              		.cfi_offset 14, -4
 943 0002 0700     		movs	r7, r0
 804:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 944              		.loc 1 804 0
 945 0004 837A     		ldrb	r3, [r0, #10]
 946 0006 DB00     		lsls	r3, r3, #3
 947 0008 0F4A     		ldr	r2, .L62
 948 000a 9D58     		ldr	r5, [r3, r2]
 949              	.LVL138:
 812:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 950              		.loc 1 812 0
 951 000c FFF7FEFF 		bl	CyEnterCriticalSection
 952              	.LVL139:
 815:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 953              		.loc 1 815 0
 954 0010 0E4B     		ldr	r3, .L62+4
 955 0012 1A68     		ldr	r2, [r3]
 956              	.LVL140:
 818:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 957              		.loc 1 818 0
 958 0014 0E4C     		ldr	r4, .L62+8
 959 0016 2240     		ands	r2, r4
 960              	.LVL141:
 831:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN | CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 961              		.loc 1 831 0
 962 0018 0E49     		ldr	r1, .L62+12
 963 001a 0E78     		ldrb	r6, [r1]
 964 001c BF19     		adds	r7, r7, r6
 965              	.LVL142:
 966 001e 797A     		ldrb	r1, [r7, #9]
 967 0020 0A43     		orrs	r2, r1
 968              	.LVL143:
 833:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 969              		.loc 1 833 0
 970 0022 2A43     		orrs	r2, r5
 971              	.LVL144:
 836:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
 972              		.loc 1 836 0
 973 0024 1A60     		str	r2, [r3]
 837:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 974              		.loc 1 837 0
 975 0026 FFF7FEFF 		bl	CyExitCriticalSection
 976              	.LVL145:
 840:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get IDACB Value */
 977              		.loc 1 840 0
 978 002a FFF7FEFF 		bl	CyEnterCriticalSection
 979              	.LVL146:
 842:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 980              		.loc 1 842 0
 981 002e 0A49     		ldr	r1, .L62+16
 982 0030 0B68     		ldr	r3, [r1]
 983              	.LVL147:
 845:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 57


 984              		.loc 1 845 0
 985 0032 2340     		ands	r3, r4
 986              	.LVL148:
 848:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             idacBRegValue |= idacGain;
 987              		.loc 1 848 0
 988 0034 094A     		ldr	r2, .L62+20
 989 0036 1268     		ldr	r2, [r2]
 990 0038 9619     		adds	r6, r2, r6
 991 003a 727A     		ldrb	r2, [r6, #9]
 992 003c 1343     		orrs	r3, r2
 993              	.LVL149:
 849:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 994              		.loc 1 849 0
 995 003e 2B43     		orrs	r3, r5
 996              	.LVL150:
 852:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CyExitCriticalSection(interruptState);
 997              		.loc 1 852 0
 998 0040 0B60     		str	r3, [r1]
 853:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 999              		.loc 1 853 0
 1000 0042 FFF7FEFF 		bl	CyExitCriticalSection
 1001              	.LVL151:
 897:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1002              		.loc 1 897 0
 1003              		@ sp needed
 1004              	.LVL152:
 1005 0046 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1006              	.L63:
 1007              		.align	2
 1008              	.L62:
 1009 0048 00000000 		.word	CapSense_idacGainTable
 1010 004c C0010B40 		.word	1074463168
 1011 0050 80FF3FFC 		.word	-62914688
 1012 0054 00000000 		.word	CapSense_scanFreqIndex
 1013 0058 C4010B40 		.word	1074463172
 1014 005c 00000000 		.word	CapSense_curRamSnsPtr
 1015              		.cfi_endproc
 1016              	.LFE6:
 1017              		.size	CapSense_SsCSDSetUpIdacs, .-CapSense_SsCSDSetUpIdacs
 1018              		.section	.text.CapSense_SsCSDGetNumberOfConversions,"ax",%progbits
 1019              		.align	2
 1020              		.global	CapSense_SsCSDGetNumberOfConversions
 1021              		.code	16
 1022              		.thumb_func
 1023              		.type	CapSense_SsCSDGetNumberOfConversions, %function
 1024              	CapSense_SsCSDGetNumberOfConversions:
 1025              	.LFB7:
 921:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 conversionsNum;
 1026              		.loc 1 921 0
 1027              		.cfi_startproc
 1028              		@ args = 0, pretend = 0, frame = 0
 1029              		@ frame_needed = 0, uses_anonymous_args = 0
 1030              	.LVL153:
 1031 0000 10B5     		push	{r4, lr}
 1032              		.cfi_def_cfa_offset 8
 1033              		.cfi_offset 4, -8
 1034              		.cfi_offset 14, -4
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 58


 1035 0002 0300     		movs	r3, r0
 1036 0004 1400     		movs	r4, r2
 928:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1037              		.loc 1 928 0
 1038 0006 0120     		movs	r0, #1
 1039              	.LVL154:
 1040 0008 8840     		lsls	r0, r0, r1
 1041              	.LVL155:
 957:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 1042              		.loc 1 957 0
 1043 000a 1029     		cmp	r1, #16
 1044 000c 00D1     		bne	.L65
 959:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 1045              		.loc 1 959 0
 1046 000e 1D38     		subs	r0, r0, #29
 1047              	.LVL156:
 1048              	.L65:
 963:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1049              		.loc 1 963 0
 1050 0010 002B     		cmp	r3, #0
 1051 0012 02D0     		beq	.L66
 965:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 1052              		.loc 1 965 0
 1053 0014 1900     		movs	r1, r3
 1054              	.LVL157:
 1055 0016 FFF7FEFF 		bl	__aeabi_uidiv
 1056              	.LVL158:
 1057              	.L66:
 971:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1058              		.loc 1 971 0
 1059 001a 053C     		subs	r4, r4, #5
 1060              	.LVL159:
 1061 001c 012C     		cmp	r4, #1
 1062 001e 00D8     		bhi	.L67
 976:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 break;
 1063              		.loc 1 976 0
 1064 0020 4008     		lsrs	r0, r0, #1
 1065              	.LVL160:
 1066              	.L67:
 986:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 1067              		.loc 1 986 0
 1068 0022 0028     		cmp	r0, #0
 1069 0024 00D1     		bne	.L69
 1070 0026 0130     		adds	r0, r0, #1
 1071              	.LVL161:
 1072              	.L69:
 987:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 1073              		.loc 1 987 0 discriminator 4
 1074              		@ sp needed
 1075              	.LVL162:
 1076 0028 10BD     		pop	{r4, pc}
 1077              		.cfi_endproc
 1078              	.LFE7:
 1079              		.size	CapSense_SsCSDGetNumberOfConversions, .-CapSense_SsCSDGetNumberOfConversions
 1080 002a C046     		.section	.text.CapSense_SsCSDConfigClock,"ax",%progbits
 1081              		.align	2
 1082              		.global	CapSense_SsCSDConfigClock
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 59


 1083              		.code	16
 1084              		.thumb_func
 1085              		.type	CapSense_SsCSDConfigClock, %function
 1086              	CapSense_SsCSDConfigClock:
 1087              	.LFB8:
1003:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 snsClkDivider;
 1088              		.loc 1 1003 0
 1089              		.cfi_startproc
 1090              		@ args = 0, pretend = 0, frame = 0
 1091              		@ frame_needed = 0, uses_anonymous_args = 0
 1092 0000 10B5     		push	{r4, lr}
 1093              		.cfi_def_cfa_offset 8
 1094              		.cfi_offset 4, -8
 1095              		.cfi_offset 14, -4
1009:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1096              		.loc 1 1009 0
 1097 0002 0C4B     		ldr	r3, .L76
 1098 0004 1B78     		ldrb	r3, [r3]
1008:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2WdgtRam;
 1099              		.loc 1 1008 0
 1100 0006 5B01     		lsls	r3, r3, #5
 1101 0008 0B4A     		ldr	r2, .L76+4
 1102 000a D318     		adds	r3, r2, r3
 1103 000c 5B68     		ldr	r3, [r3, #4]
 1104              	.LVL163:
1026:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 1105              		.loc 1 1026 0
 1106 000e 9989     		ldrh	r1, [r3, #12]
 1107              	.LVL164:
1042:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 1108              		.loc 1 1042 0
 1109 0010 9B7B     		ldrb	r3, [r3, #14]
 1110              	.LVL165:
1046:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1111              		.loc 1 1046 0
 1112 0012 1804     		lsls	r0, r3, #16
 1113              	.LVL166:
1049:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             (CapSense_CLK_SOURCE_PRS12 == snsClkSrc))
 1114              		.loc 1 1049 0
 1115 0014 5A1F     		subs	r2, r3, #5
 1116 0016 012A     		cmp	r2, #1
 1117 0018 02D8     		bhi	.L72
1052:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 1118              		.loc 1 1052 0
 1119 001a 8022     		movs	r2, #128
 1120 001c 9204     		lsls	r2, r2, #18
 1121 001e 1043     		orrs	r0, r2
 1122              	.LVL167:
 1123              	.L72:
1062:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 1124              		.loc 1 1062 0
 1125 0020 053B     		subs	r3, r3, #5
 1126              	.LVL168:
 1127 0022 DBB2     		uxtb	r3, r3
 1128              	.LVL169:
 1129 0024 012B     		cmp	r3, #1
 1130 0026 02D8     		bhi	.L73
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 60


1067:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (snsClkDivider == 0u)
 1131              		.loc 1 1067 0
 1132 0028 4908     		lsrs	r1, r1, #1
 1133              	.LVL170:
1068:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 1134              		.loc 1 1068 0
 1135 002a 00D1     		bne	.L73
1070:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
 1136              		.loc 1 1070 0
 1137 002c 0131     		adds	r1, r1, #1
 1138              	.LVL171:
 1139              	.L73:
1081:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 1140              		.loc 1 1081 0
 1141 002e FFF7FEFF 		bl	CapSense_SsCSDSetModeSnsClockDivider
 1142              	.LVL172:
1082:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1143              		.loc 1 1082 0
 1144              		@ sp needed
 1145 0032 10BD     		pop	{r4, pc}
 1146              	.L77:
 1147              		.align	2
 1148              	.L76:
 1149 0034 00000000 		.word	CapSense_widgetIndex
 1150 0038 00000000 		.word	CapSense_dsFlash
 1151              		.cfi_endproc
 1152              	.LFE8:
 1153              		.size	CapSense_SsCSDConfigClock, .-CapSense_SsCSDConfigClock
 1154              		.section	.text.CapSense_SsCSDCalculateScanDuration,"ax",%progbits
 1155              		.align	2
 1156              		.global	CapSense_SsCSDCalculateScanDuration
 1157              		.code	16
 1158              		.thumb_func
 1159              		.type	CapSense_SsCSDCalculateScanDuration, %function
 1160              	CapSense_SsCSDCalculateScanDuration:
 1161              	.LFB9:
1106:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 1162              		.loc 1 1106 0
 1163              		.cfi_startproc
 1164              		@ args = 0, pretend = 0, frame = 0
 1165              		@ frame_needed = 0, uses_anonymous_args = 0
 1166              	.LVL173:
 1167 0000 10B5     		push	{r4, lr}
 1168              		.cfi_def_cfa_offset 8
 1169              		.cfi_offset 4, -8
 1170              		.cfi_offset 14, -4
 1171 0002 0300     		movs	r3, r0
1126:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 1172              		.loc 1 1126 0
 1173 0004 8089     		ldrh	r0, [r0, #12]
 1174              	.LVL174:
1130:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1175              		.loc 1 1130 0
 1176 0006 1988     		ldrh	r1, [r3]
 1177 0008 9A7B     		ldrb	r2, [r3, #14]
 1178 000a FFF7FEFF 		bl	CapSense_SsCSDGetNumberOfConversions
 1179              	.LVL175:
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 61


1133:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 1180              		.loc 1 1133 0
 1181 000e 0004     		lsls	r0, r0, #16
 1182              	.LVL176:
 1183 0010 000C     		lsrs	r0, r0, #16
 1184 0012 014B     		ldr	r3, .L79
 1185 0014 1860     		str	r0, [r3]
1138:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1186              		.loc 1 1138 0
 1187              		@ sp needed
 1188 0016 10BD     		pop	{r4, pc}
 1189              	.L80:
 1190              		.align	2
 1191              	.L79:
 1192 0018 14030B40 		.word	1074463508
 1193              		.cfi_endproc
 1194              	.LFE9:
 1195              		.size	CapSense_SsCSDCalculateScanDuration, .-CapSense_SsCSDCalculateScanDuration
 1196              		.section	.text.CapSense_SsCSDStartSample,"ax",%progbits
 1197              		.align	2
 1198              		.global	CapSense_SsCSDStartSample
 1199              		.code	16
 1200              		.thumb_func
 1201              		.type	CapSense_SsCSDStartSample, %function
 1202              	CapSense_SsCSDStartSample:
 1203              	.LFB12:
1328:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE != CapSense_CSDV2)
 1204              		.loc 1 1328 0
 1205              		.cfi_startproc
 1206              		@ args = 0, pretend = 0, frame = 0
 1207              		@ frame_needed = 0, uses_anonymous_args = 0
 1208 0000 10B5     		push	{r4, lr}
 1209              		.cfi_def_cfa_offset 8
 1210              		.cfi_offset 4, -8
 1211              		.cfi_offset 14, -4
1341:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1212              		.loc 1 1341 0
 1213 0002 0A20     		movs	r0, #10
 1214 0004 FFF7FEFF 		bl	CyIntDisable
 1215              	.LVL177:
1344:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1216              		.loc 1 1344 0
 1217 0008 0122     		movs	r2, #1
 1218 000a 2D4B     		ldr	r3, .L89
 1219 000c 1A60     		str	r2, [r3]
 1220              	.LBB6:
 1221              	.LBB7:
2134:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
2135:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2136:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2137:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
2138:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsCSDCalibrate
2139:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
2140:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2141:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
2142:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Implements IDAC calibration for a desired widget using successive
2143:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  approximation algorithm.
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 62


2144:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2145:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
2146:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Implements IDAC calibration for a desired widget using successive
2147:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  approximation algorithm. It supports any type of CSD widgets, and works
2148:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  with multi-frequency scan and compensation IDAC features enabled.
2149:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2150:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  As result of function operation, the modulator IDAC that corresponds to the
2151:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  sensor with the highest capacitance (the biggest modulator IDAC) is stored
2152:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  into widget data structure. If it is dual-axis widget type (touchpad or matrix
2153:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  buttons) or if multi-frequency scan feature is enabled then the maximum
2154:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  modulator IDAC found separately for each multi-frequency channel and for
2155:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  rows/columns.
2156:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2157:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  If compensation IDAC is enabled, then it preserves IDAC value of
2158:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  single-sensor calibration. In dual IDAC mode each sensor was calibrated with
2159:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  equal values of modulator and compensation IDAC.
2160:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2161:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  After IDACs were found each sensor scanned again to get real raw count stored
2162:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  in sensor structure.
2163:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2164:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param widgetId
2165:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Specifies the ID number of the CSD widget to calibrate its raw count.
2166:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  A macro for the widget ID can be found in the
2167:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  CapSense Configuration header file defined as
2168:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  CapSense_<WidgetName>_WDGT_ID.
2169:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2170:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param target
2171:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Specifies the calibration target in percentages of the maximum raw count.
2172:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2173:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
2174:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static void CapSense_SsCSDCalibrate(uint32 widgetId, uint32 target)
2175:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
2176:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 snsIndex;
2177:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 freqChannel;
2178:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 calMask;
2179:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 temp;
2180:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 watchdogCounter;
2181:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2182:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint8 *ptrIdacMod;
2183:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint8 *ptrMaxIdac;
2184:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2185:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint8 maxIdac[CapSense_NUM_SCAN_FREQS];
2186:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2187:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2188:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint8 maxRowIdac[CapSense_NUM_SCAN_FREQS];
2189:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 dualWidgetType = 0u;
2190:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif
2191:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2192:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_RAM_SNS_STRUCT *ptrRamSensor;
2193:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_FLASH_WD_STRUCT const *ptrFlashWidget = &CapSense_dsFlash.wdgtArray[widgetId];
2194:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidget->
2195:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2196:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ptrIdacMod = &ptrRamWidget->idacMod[0u];
2197:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ptrMaxIdac = &maxIdac[0u];
2198:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2199:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2200:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 63


2201:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             maxIdac[freqChannel] = 0u;
2202:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2203:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 maxRowIdac[freqChannel] = 0u;
2204:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
2205:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2206:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2207:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Calculate raw count level based on resolution and target */
2208:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         temp = (((0x00000001Lu << ptrRamWidget->resolution) - 1u) * target) / CapSense_PERCENTAGE_1
2209:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2210:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2211:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
2212:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
2213:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2214:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 dualWidgetType = 1u;
2215:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2216:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif
2217:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2218:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Loop through the widget sensors */
2219:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         for(snsIndex = 0u; snsIndex < ptrFlashWidget->totalNumSns; snsIndex++)
2220:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2221:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2222:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (snsIndex == ptrFlashWidget->numCols)
2223:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2224:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if (0u != dualWidgetType)
2225:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2226:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrIdacMod = &ptrRamWidget->rowIdacMod[0u];
2227:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrMaxIdac = &maxRowIdac[0u];
2228:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2229:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2230:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
2231:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2232:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             ptrRamSensor = &((ptrFlashWidget->ptr2SnsRam)[snsIndex]);
2233:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2234:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set default IDAC code */
2235:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             calMask = CapSense_CSD_CAL_MIDDLE_VALUE;
2236:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2237:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2238:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 ptrIdacMod[freqChannel] = CapSense_CSD_CAL_MIDDLE_VALUE;
2239:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2240:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrRamSensor->idacComp[freqChannel] = ptrIdacMod[freqChannel];
2241:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif
2242:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2243:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2244:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Loop through IDAC code */
2245:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             do
2246:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2247:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Need to configure HW block with each IDAC change */
2248:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSDSetupWidgetExt(widgetId, snsIndex);
2249:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2250:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
2251:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CapSense_DischargeExtCapacitors(CapSense_EXT_CAP_DISCHARGE_TIME);
2252:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif
2253:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2254:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Scan sensor */
2255:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSDScanExt();
2256:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2257:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 watchdogCounter = CapSense_CSD_CALIBR_WATCHDOG_CYCLES_NUM;
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 64


2258:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 while (((CapSense_dsRam.status & CapSense_SW_STS_BUSY) != 0u) && (0uL != watchdogCo
2259:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2260:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     watchdogCounter--;
2261:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2262:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2263:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Update IDAC based on scan result */
2264:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2265:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2266:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if (ptrRamSensor->raw[freqChannel] < temp)
2267:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2268:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrIdacMod[freqChannel] &= (uint8)(~calMask);
2269:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2270:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2271:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2272:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Switch to the lower IDAC mask */
2273:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 calMask >>= 1u;
2274:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2275:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2276:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrIdacMod[freqChannel] |= (uint8)calMask;
2277:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2278:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrRamSensor->idacComp[freqChannel] = ptrIdacMod[freqChannel];
2279:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #endif
2280:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if (0u == calMask)
2281:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2282:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         if (0u == ptrIdacMod[freqChannel])
2283:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
2284:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             ptrIdacMod[freqChannel] = 1u;
2285:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2286:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ptrRamSensor->idacComp[freqChannel] = ptrIdacMod[freqChannel];
2287:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             #endif
2288:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         }
2289:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2290:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2291:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2292:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while (calMask != 0u);
2293:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2294:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2295:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2296:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (ptrMaxIdac[freqChannel] < ptrIdacMod[freqChannel])
2297:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2298:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrMaxIdac[freqChannel] = ptrIdacMod[freqChannel];
2299:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2300:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2301:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2302:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Perform scan again to get real raw count if IDAC was changed at the last iteration *
2303:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDSetupWidgetExt(widgetId, snsIndex);
2304:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDScanExt();
2305:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2306:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             watchdogCounter = CapSense_CSD_CALIBR_WATCHDOG_CYCLES_NUM;
2307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while (((CapSense_dsRam.status & CapSense_SW_STS_BUSY) != 0u) && (0uL != watchdogCounte
2308:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2309:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 watchdogCounter--;
2310:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2311:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2312:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2313:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2314:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 65


2315:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             ptrRamWidget->idacMod[freqChannel] = maxIdac[freqChannel];
2316:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2317:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (0u != dualWidgetType)
2318:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2319:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrRamWidget->rowIdacMod[freqChannel] = maxRowIdac[freqChannel];
2320:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2321:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #if (CapSense_ENABLE == CapSense_CSD_COL_ROW_IDAC_ALIGNMENT_EN)
2322:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
2323:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             if (ptrRamWidget->idacMod[freqChannel] < ptrRamWidget->rowIdacMod[freqC
2324:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2325:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 temp = ptrRamWidget->rowIdacMod[freqChannel];
2326:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 if (temp > CapSense_CSD_CAL_IDAC_MAX_VALUE)
2327:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 {
2328:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     temp = CapSense_CSD_CAL_IDAC_MAX_VALUE;
2329:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 }
2330:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ptrRamWidget->idacMod[freqChannel] = (uint8)temp;
2331:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
2332:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             else
2333:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2334:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 temp = ptrRamWidget->idacMod[freqChannel];
2335:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 if (temp > CapSense_CSD_CAL_IDAC_MAX_VALUE)
2336:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 {
2337:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     temp = CapSense_CSD_CAL_IDAC_MAX_VALUE;
2338:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 }
2339:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ptrRamWidget->rowIdacMod[freqChannel] = (uint8)temp;
2340:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
2341:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         #else
2342:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             if (((uint32)ptrRamWidget->idacMod[freqChannel] * ptrRamWidget->snsClk)
2343:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ((uint32)ptrRamWidget->rowIdacMod[freqChannel] * ptrRamWidget->rowS
2344:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2345:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 temp = ((uint32)ptrRamWidget->rowIdacMod[freqChannel] *
2346:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                 ptrRamWidget->rowSnsClk) / ptrRamWidget->snsClk;
2347:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 if (temp > CapSense_CSD_CAL_IDAC_MAX_VALUE)
2348:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 {
2349:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     temp = CapSense_CSD_CAL_IDAC_MAX_VALUE;
2350:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 }
2351:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ptrRamWidget->idacMod[freqChannel] = (uint8)temp;
2352:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
2353:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             else
2354:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2355:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 temp = ((uint32)ptrRamWidget->idacMod[freqChannel] *
2356:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                 ptrRamWidget->snsClk) / ptrRamWidget->rowSnsClk;
2357:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 if (temp > CapSense_CSD_CAL_IDAC_MAX_VALUE)
2358:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 {
2359:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     temp = CapSense_CSD_CAL_IDAC_MAX_VALUE;
2360:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 }
2361:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ptrRamWidget->rowIdacMod[freqChannel] = (uint8)temp;
2362:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
2363:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         #endif
2364:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #endif
2365:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2366:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
2367:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2368:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
2369:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2370:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2371:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 66


2372:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_CSDCalibrateWidget
2373:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
2374:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2375:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
2376:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Executes the IDAC calibration for all the sensors in the widget specified in
2377:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  the input.
2378:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2379:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
2380:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Executes the IDAC calibration for all the sensors in the widget specified in
2381:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  the input.
2382:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2383:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  \note This function is obsolete and kept for backward compatibility only.
2384:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  The CapSense_CalibrateWidget() function should be used instead.
2385:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2386:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Performs a successive approximation search algorithm to find appropriate
2387:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  IDAC values for sensors in the specified widget that provides the raw
2388:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  count to the level specified by the target parameter.
2389:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2390:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Calibration fails if the achieved raw count is outside of the range specified
2391:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  by the target and acceptable calibration deviation.
2392:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2393:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  This function is available when the CSD Enable IDAC auto-calibration
2394:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  parameter is enabled or the  SmartSense auto-tuning mode is configured.
2395:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2396:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param widgetId
2397:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Specifies the ID number of the CSD widget to calibrate its raw count.
2398:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  A macro for the widget ID can be found in the
2399:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  CapSense Configuration header file defined as
2400:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  CapSense_<WidgetName>_WDGT_ID.
2401:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2402:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param target
2403:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Specifies the calibration target in percentages of the maximum raw count.
2404:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2405:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \return
2406:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Returns the status of the specified widget calibration:
2407:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    - CYRET_SUCCESS - The operation is successfully completed.
2408:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    - CYRET_BAD_PARAM - The input parameter is invalid.
2409:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    - CYRET_BAD_DATA - The calibration failed and the Component may not operate
2410:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *      as expected.
2411:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    - CYRET_TIMEOUT - The calibration failed due to timeout.
2412:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
2413:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *      hardware block is busy.
2414:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2415:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
2416:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     cystatus CapSense_CSDCalibrateWidget(uint32 widgetId, uint32 target)
2417:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
2418:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
2419:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 watchdogCounter;
2420:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2421:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTO_GAIN_EN)
2422:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 gainSwitch;
2423:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif
2424:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2425:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_FLASH_WD_STRUCT const *ptrFlashWidget = &CapSense_dsFlash.wdgtArray[widgetId];
2426:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2427:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
2428:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 67


2429:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Previous widget is being scanned, return error */
2430:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             calibrateStatus = CYRET_INVALID_STATE;
2431:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2432:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         else
2433:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2434:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set default IDAC gain */
2435:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             ((CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidget->ptr2WdgtRam)->idacGainIndex =
2436:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSD_IDAC_GAIN_INDEX_DEFAULT;
2437:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2438:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Perform calibration */
2439:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE != CapSense_CSD_IDAC_AUTO_GAIN_EN)
2440:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_SsCSDCalibrate(widgetId, target);
2441:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #else
2442:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 do
2443:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2444:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CapSense_SsCSDCalibrate(widgetId, target);
2445:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     gainSwitch = CapSense_SsCSDSwitchIdacGain(ptrFlashWidget);
2446:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 } while(0u != gainSwitch);
2447:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
2448:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2449:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2450:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* IDAC Normalization in Dual IDAC mode */
2451:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_SsCSDNormalizeIdac(ptrFlashWidget, target);
2452:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
2453:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2454:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Perform specified widget scan to check calibration result */
2455:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDSetupWidget(widgetId);
2456:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDScan();
2457:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2458:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             watchdogCounter = CapSense_WIDGET_MAX_SCAN_TIME;
2459:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while (((CapSense_dsRam.status & CapSense_SW_STS_BUSY) != 0u) && (0uL != watchdogCounte
2460:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2461:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 watchdogCounter--;
2462:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2463:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2464:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Verification of calibration result */
2465:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (0u == watchdogCounter)
2466:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2467:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 calibrateStatus = CYRET_TIMEOUT;
2468:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2469:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             else
2470:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2471:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 calibrateStatus = CapSense_SsCSDCalibrateCheck(widgetId, target);
2472:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2473:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2474:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              /* Update CRC */
2475:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE ==CapSense_TST_WDGT_CRC_EN)
2476:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_DsUpdateWidgetCrc(widgetId);
2477:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
2478:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2479:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2480:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         return calibrateStatus;
2481:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
2482:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* ((CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) || \
2483:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN)) */
2484:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2485:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 68


2486:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
2487:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
2488:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsCSDClockRestart
2489:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
2490:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2491:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
2492:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  This function restarts the clocks.
2493:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2494:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
2495:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  The function performs following:
2496:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  1) Stops, sets dividers and starts ModClk clock;
2497:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  2) Stops and starts SnsClk clock;
2498:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  3) Scan one cycle to reset the flip-flop for Direct clock mode.
2499:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2500:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
2501:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_INLINE static void CapSense_SsCSDClockRestart(void)
2502:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
2503:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CLK_SOURCE_DIRECT == CapSense_CSD_SNS_CLK_SOURCE)
2504:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 watchdogCounter;
2505:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CLK_SOURCE_DIRECT == CapSense_CSD_SNS_CLK_SOURCE) */
2506:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2507:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Stop clocks, set dividers, and start clock to align clock phase */
2508:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsSetModClkClockDivider((uint32)CapSense_dsRam.modCsdClk);
2509:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2510:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
2511:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Stop sense clock clock   */
2512:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
2513:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          ((uint32)CapSense_SnsClk__DIV_ID <<
2514:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          CapSense_SNSCLK_CMD_DIV_SHIFT)|
2515:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          ((uint32)CapSense_SNSCLK_CMD_DISABLE_MASK));
2516:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2517:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Check whether previous sense clock start command has finished. */
2518:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while(0u != (CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) & CapSense_SNSCLK_CMD_ENABLE_MASK))
2519:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2520:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Wait until previous sense clock start command has finished. */
2521:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2522:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2523:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Start sense clock aligned to previously started modulator clock. */
2524:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
2525:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT
2526:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                           ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_SNSCLK_CMD_PA_DIV_SHIFT) 
2527:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                           CapSense_SNSCLK_CMD_ENABLE_MASK));
2528:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
2529:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Clear bit to disable SnsClk clock. */
2530:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
2531:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) &
2532:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          (uint32)(~(uint32)CapSense_SnsClk__ENABLE_MASK));
2533:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2534:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set bit to enable SnsClk clock. */
2535:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
2536:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) |
2537:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         CapSense_SnsClk__ENABLE_MASK);
2538:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
2539:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2540:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CLK_SOURCE_DIRECT == CapSense_CSD_SNS_CLK_SOURCE)
2541:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Scan one cycle to reset the flip-flop for Direct clock mode */
2542:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CyIntDisable(CapSense_ISR_NUMBER);
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 69


2543:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_COUNTER_PTR, CapSense_ONE_CYCLE);
2544:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2545:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             watchdogCounter = CapSense_ONE_CLOCK_WATCHDOG_CYCLES_NUM;
2546:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while((0u != (CY_GET_REG32(CapSense_COUNTER_PTR) & CapSense_RESOLUTION_16_BITS)) && (0u
2547:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2548:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 watchdogCounter--;
2549:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2550:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
2551:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CyIntClearPending(CapSense_ISR_NUMBER);
2552:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CLK_SOURCE_DIRECT == CapSense_CSD_SNS_CLK_SOURCE) */
2553:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
2554:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_DISABLE == CapSense_CSDV2) */
2555:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2556:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2557:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
2558:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDCmodPrecharge
2559:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
2560:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2561:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
2562:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function initializes the Cmod charging to Vref.
2563:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2564:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
2565:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  For Third-generation HW block:
2566:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The function initializes the Cmod charging to Vref.
2567:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Then it waits the even when Cmod is completely charged
2568:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  to Vref to have stable raw counts. Software Watchdog Counter is implemented to
2569:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  prevent the project hanging.
2570:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2571:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  For Fourth-generation HW block:
2572:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Coarse initialization for CMOD and Cch.
2573:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The coarse initialization is performed by HSCOMP.
2574:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The HSCOMP monitors the Cmod voltage via Cmod sense path
2575:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  and charges the Cmod using HCAV switch via CSDBUS-A, AMUXBUS-A
2576:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  and static connection of Cmod to AMUXBUS-A.
2577:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2578:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
2579:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** CY_INLINE static void CapSense_SsCSDCmodPrecharge(void)
2580:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
2581:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
2582:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 watchdogCounter;
2583:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
2584:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2585:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_CSDCMP_PTR, CapSense_CSD_CSDCMP_INIT);
 1222              		.loc 1 2585 0
 1223 000e 0023     		movs	r3, #0
 1224 0010 2C49     		ldr	r1, .L89+4
 1225 0012 0B60     		str	r3, [r1]
2586:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_FW_MOD_SEL_PTR,  CapSense_CSD_SW_FW_MOD_SEL_INIT);
 1226              		.loc 1 2586 0
 1227 0014 2C49     		ldr	r1, .L89+8
 1228 0016 0B60     		str	r3, [r1]
2587:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR, CapSense_CSD_SW_FW_TANK_SEL_INIT);
 1229              		.loc 1 2587 0
 1230 0018 2C48     		ldr	r0, .L89+12
 1231 001a 2D49     		ldr	r1, .L89+16
 1232 001c 0860     		str	r0, [r1]
2588:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,  CapSense_CSD_SW_SHIELD_SEL_INIT);
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 70


 1233              		.loc 1 2588 0
 1234 001e 0620     		movs	r0, #6
 1235 0020 2C49     		ldr	r1, .L89+20
 1236 0022 0860     		str	r0, [r1]
2589:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
2590:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /*
2591:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              * Connect CMOD to (sense path) to HSCOMP: HMPM or HMPS or HMPT switches depend on Cmod
2592:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              * Connect AMUXBUS-B to HSCMP positive input
2593:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              */
2594:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR, CapSense_SW_HS_P_SEL_COARSE);
2595:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2596:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if(0u != CapSense_CSD_SHIELD_TANK_EN)
2597:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Connect CTANK to AMUXBUS-A */
2598:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_CSH_HSIOM_MASK,
2599:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     (uint32)(CapSense_HSIOM_SEL_AMUXA << CapSense_CSH_HSIOM_SHIFT));
2600:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (0u != CapSense_CSD_SHIELD_TANK_EN) */
2601:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
2602:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect CMOD to (sense path) to HSCOMP: HMPM or HMPS or HMPT switches depend on Cmod
2603:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR, CapSense_SW_HS_P_SEL_COARSE);
 1237              		.loc 1 2603 0
 1238 0024 0A30     		adds	r0, r0, #10
 1239 0026 2C49     		ldr	r1, .L89+24
 1240 0028 0860     		str	r0, [r1]
2604:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
2605:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2606:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_RES_PTR, CapSense_CSD_SW_RES_INIT);
 1241              		.loc 1 2606 0
 1242 002a 2C49     		ldr	r1, .L89+28
 1243 002c 0A60     		str	r2, [r1]
2607:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2608:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Clear all interrupt pending requests */
2609:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_ALL_MASK);
 1244              		.loc 1 2609 0
 1245 002e 8321     		movs	r1, #131
 1246 0030 4900     		lsls	r1, r1, #1
 1247 0032 2B4A     		ldr	r2, .L89+32
 1248 0034 1160     		str	r1, [r2]
2610:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2611:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_INTR_MASK_PTR, CapSense_CLEAR_MASK);
 1249              		.loc 1 2611 0
 1250 0036 2B4A     		ldr	r2, .L89+36
 1251 0038 1360     		str	r3, [r2]
2612:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2613:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Start SEQUENCER for coarse initialization for Cmod */
2614:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_SEQ_MODE_MASK |
 1252              		.loc 1 2614 0
 1253 003a 0322     		movs	r2, #3
 1254 003c 2A4B     		ldr	r3, .L89+40
 1255 003e 1A60     		str	r2, [r3]
 1256              	.LVL178:
2615:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                          CapSense_SEQ_START_START_MASK);
2616:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2617:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
2618:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         watchdogCounter = CapSense_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
 1257              		.loc 1 2618 0
 1258 0040 F023     		movs	r3, #240
 1259 0042 00E0     		b	.L82
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 71


 1260              	.LVL179:
 1261              	.L84:
2619:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2620:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Wait for INTR.INIT goes high */
2621:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         while((0u == (CY_GET_REG32(CapSense_INTR_PTR) & CapSense_INTR_INIT_MASK)) && (0u != watchdo
2622:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2623:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             watchdogCounter--;
 1262              		.loc 1 2623 0
 1263 0044 013B     		subs	r3, r3, #1
 1264              	.LVL180:
 1265              	.L82:
2621:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1266              		.loc 1 2621 0
 1267 0046 264A     		ldr	r2, .L89+32
 1268 0048 1268     		ldr	r2, [r2]
 1269 004a 5207     		lsls	r2, r2, #29
 1270 004c 01D4     		bmi	.L83
 1271 004e 002B     		cmp	r3, #0
 1272 0050 F8D1     		bne	.L84
 1273              	.L83:
2624:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2625:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2626:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (0u == watchdogCounter)
 1274              		.loc 1 2626 0
 1275 0052 002B     		cmp	r3, #0
 1276 0054 02D1     		bne	.L85
2627:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2628:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set sequencer to idle state if coarse initialization fails */
2629:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_ABORT_MASK);
 1277              		.loc 1 2629 0
 1278 0056 0822     		movs	r2, #8
 1279 0058 234B     		ldr	r3, .L89+40
 1280              	.LVL181:
 1281 005a 1A60     		str	r2, [r3]
 1282              	.L85:
 1283              	.LBE7:
 1284              	.LBE6:
 1285              	.LBB8:
 1286              	.LBB9:
2630:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2631:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2632:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
2633:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2634:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 tmpRegValue;
2635:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 newRegValue;
2636:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 watchdogCounter;
2637:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2638:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Save the current IDAC configuration */
2639:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         tmpRegValue = CY_GET_REG32(CapSense_IDAC_PTR);
2640:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2641:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Wait until Cmod discharges below Vref */
2642:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyDelayCycles(CapSense_CMOD_DISCHARGE_CYCLES);
2643:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2644:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = CapSense_CSD_IDAC_PRECHARGE_CONFIG | (tmpRegValue & ~CapSense_IDAC_MOD_CFG_MA
2645:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2646:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set the IDAC configuration for fast Cmod precharge to Vref */
2647:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_IDAC_PTR, newRegValue);
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 72


2648:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2649:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
2650:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CY_GET_REG32(CapSense_CONFIG_PTR) & ~CapSense_CONFIG_
2651:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG) */
2652:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2653:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
2654:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         watchdogCounter = CapSense_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
2655:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2656:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Wait until Cmod reaches to Vref */
2657:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         while((0u == (CY_GET_REG32(CapSense_STATUS_PTR) & CapSense_STATUS_SAMPLE)) && (0u != watchd
2658:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2659:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             watchdogCounter--;
2660:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2661:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2662:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
2663:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CY_GET_REG32(CapSense_CONFIG_PTR) | CapSense_CONFIG_P
2664:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG) */
2665:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2666:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Restore the current IDAC configuration */
2667:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_IDAC_PTR, tmpRegValue);
2668:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2669:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable the sense modulator output */
2670:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CONFIG_CSD_
2671:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2672:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyIntEnable(CapSense_ISR_NUMBER);
2673:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2674:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2675:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
2676:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2677:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2678:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
2679:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDTriggerScan
2680:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
2681:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2682:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
2683:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function triggers the scanning.
2684:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2685:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
2686:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  For Third-generation HW block:
2687:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Writes resolution to start the scanning.
2688:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2689:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  For Fourth-generation HW block:
2690:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Trigger the fine initialization (scan some dummy cycles) and start sampling.
2691:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Fine initialization for CMOD and Start scan.
2692:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  For the fine initialization and sampling, Cmod is static connected to AMUXBUS-A
2693:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  and in every conversion (one cycle of SnsClk), the sensor capacitance is charged
2694:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  from Cmod and discharged to ground using the switches in GPIO cell.
2695:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The CSDCOMP monitors voltage on Cmod using the sense path and charges Cmod back
2696:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  to Vref using IDACs by connecting IDAC to CSDBUS-A and then the AMUXBUS-A.
2697:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2698:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
2699:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** CY_INLINE static void CapSense_SsCSDTriggerScan(void)
2700:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
2701:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
2702:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2703:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
2704:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 73


2705:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 watchdogCounter;
2706:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2707:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Clear previous interrupts */
2708:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_ALL_MASK);
 1287              		.loc 1 2708 0
 1288 005c 8322     		movs	r2, #131
 1289 005e 5200     		lsls	r2, r2, #1
 1290 0060 1F4B     		ldr	r3, .L89+32
 1291 0062 1A60     		str	r2, [r3]
2709:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2710:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Clear pending interrupts  */
2711:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyIntClearPending(CapSense_ISR_NUMBER);
 1292              		.loc 1 2711 0
 1293 0064 0A20     		movs	r0, #10
 1294 0066 FFF7FEFF 		bl	CyIntClearPending
 1295              	.LVL182:
2712:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2713:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable CSD interrupt */
2714:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyIntEnable(CapSense_ISR_NUMBER);
 1296              		.loc 1 2714 0
 1297 006a 0A20     		movs	r0, #10
 1298 006c FFF7FEFF 		bl	CyIntEnable
 1299              	.LVL183:
2715:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2716:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2717:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR, CapSense_CSD_SW_HS_P_SEL_SCAN);
 1300              		.loc 1 2717 0
 1301 0070 0023     		movs	r3, #0
 1302 0072 194A     		ldr	r2, .L89+24
 1303 0074 1360     		str	r3, [r2]
2718:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2719:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set scanning configuration for switches */
2720:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_FW_MOD_SEL_PTR, CapSense_CSD_SW_FW_MOD_SEL_SCAN);
 1304              		.loc 1 2720 0
 1305 0076 144A     		ldr	r2, .L89+8
 1306 0078 1360     		str	r3, [r2]
2721:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR,CapSense_CSD_SW_FW_TANK_SEL_SCAN);
 1307              		.loc 1 2721 0
 1308 007a 154A     		ldr	r2, .L89+16
 1309 007c 1360     		str	r3, [r2]
2722:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2723:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,  CapSense_CSD_SW_SHIELD_SEL_SCAN);
 1310              		.loc 1 2723 0
 1311 007e 154A     		ldr	r2, .L89+20
 1312 0080 1360     		str	r3, [r2]
2724:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2725:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && (CapSense_ENABLE == CapSense_CSD_SHIELD_
2726:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect CTANK to AMUXBUS-B */
2727:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDEnableShieldTank();
2728:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && (CapSense_ENABLE == CapSense_CSD_
2729:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2730:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_RES_PTR, CapSense_CSD_SW_RES_SCAN);
 1313              		.loc 1 2730 0
 1314 0082 5021     		movs	r1, #80
 1315 0084 154A     		ldr	r2, .L89+28
 1316 0086 1160     		str	r1, [r2]
2731:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_CSDCMP_PTR, CapSense_CSD_CSDCMP_SCAN);
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 74


 1317              		.loc 1 2731 0
 1318 0088 4F39     		subs	r1, r1, #79
 1319 008a 0E4A     		ldr	r2, .L89+4
 1320 008c 1160     		str	r1, [r2]
2732:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2733:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_DISABLE == CapSense_CSD_SHIELD_EN)
2734:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Disable HSCOMP during the sampling phase when shield is disabled */
2735:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_HSCMP_PTR, 0u);
 1321              		.loc 1 2735 0
 1322 008e 0C4A     		ldr	r2, .L89
 1323 0090 1360     		str	r3, [r2]
2736:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
2737:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_HSCMP_PTR, CapSense_HSCMP_SCAN_MASK);
2738:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_DISABLE == CapSense_CSD_SHIELD_EN) */
2739:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2740:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CLK_SOURCE_DIRECT != CapSense_CSD_SNS_CLK_SOURCE)
2741:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Force the LFSR to it's initial state (all ones) */
2742:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, CY_GET_REG32(CapSense_SENSE_PERIOD_PTR) |
 1324              		.loc 1 2742 0
 1325 0092 164A     		ldr	r2, .L89+44
 1326 0094 1368     		ldr	r3, [r2]
 1327 0096 8021     		movs	r1, #128
 1328 0098 4904     		lsls	r1, r1, #17
 1329 009a 0B43     		orrs	r3, r1
 1330 009c 1360     		str	r3, [r2]
2743:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                            CapSense_SENSE_PERIOD_LFSR_CLEAR_MASK);
2744:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CLK_SOURCE_DIRECT != CapSense_CSD_SNS_CLK_SOURCE) */
2745:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2746:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable SAMPLE interrupt */
2747:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_INTR_MASK_PTR, CapSense_INTR_MASK_SAMPLE_MASK);
 1331              		.loc 1 2747 0
 1332 009e 0222     		movs	r2, #2
 1333 00a0 104B     		ldr	r3, .L89+36
 1334 00a2 1A60     		str	r2, [r3]
 1335              	.LVL184:
2748:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2749:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
2750:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         watchdogCounter = CapSense_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
 1336              		.loc 1 2750 0
 1337 00a4 F023     		movs	r3, #240
 1338 00a6 00E0     		b	.L86
 1339              	.LVL185:
 1340              	.L88:
2751:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2752:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Wait for IDLE state of the HW sequencer */
2753:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         while((0u != (CapSense_STAT_SEQ_REG & CapSense_STAT_SEQ_SEQ_STATE_MASK)) && (0u != watchdog
2754:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2755:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             watchdogCounter--;
 1341              		.loc 1 2755 0
 1342 00a8 013B     		subs	r3, r3, #1
 1343              	.LVL186:
 1344              	.L86:
2753:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1345              		.loc 1 2753 0
 1346 00aa 114A     		ldr	r2, .L89+48
 1347 00ac 1268     		ldr	r2, [r2]
 1348 00ae 5207     		lsls	r2, r2, #29
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 75


 1349 00b0 01D0     		beq	.L87
 1350 00b2 002B     		cmp	r3, #0
 1351 00b4 F8D1     		bne	.L88
 1352              	.L87:
2756:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2757:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2758:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Start SEQUENCER for fine initialization scan for Cmod and then for normal scan */
2759:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_AZ0_SKIP_MASK |
 1353              		.loc 1 2759 0
 1354 00b6 0F4A     		ldr	r2, .L89+52
 1355 00b8 0B4B     		ldr	r3, .L89+40
 1356              	.LVL187:
 1357 00ba 1A60     		str	r2, [r3]
 1358              	.LBE9:
 1359              	.LBE8:
1389:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1360              		.loc 1 1389 0
 1361              		@ sp needed
 1362 00bc 10BD     		pop	{r4, pc}
 1363              	.L90:
 1364 00be C046     		.align	2
 1365              	.L89:
 1366 00c0 80010B40 		.word	1074463104
 1367 00c4 8C010B40 		.word	1074463116
 1368 00c8 B0020B40 		.word	1074463408
 1369 00cc 10110000 		.word	4368
 1370 00d0 B4020B40 		.word	1074463412
 1371 00d4 88020B40 		.word	1074463368
 1372 00d8 80020B40 		.word	1074463360
 1373 00dc F0010B40 		.word	1074463216
 1374 00e0 F0000B40 		.word	1074462960
 1375 00e4 F8000B40 		.word	1074462968
 1376 00e8 40030B40 		.word	1074463552
 1377 00ec 00020B40 		.word	1074463232
 1378 00f0 00000B40 		.word	1074462720
 1379 00f4 01030000 		.word	769
 1380              		.cfi_endproc
 1381              	.LFE12:
 1382              		.size	CapSense_SsCSDStartSample, .-CapSense_SsCSDStartSample
 1383              		.section	.text.CapSense_CSDScanExt,"ax",%progbits
 1384              		.align	2
 1385              		.global	CapSense_CSDScanExt
 1386              		.code	16
 1387              		.thumb_func
 1388              		.type	CapSense_CSDScanExt, %function
 1389              	CapSense_CSDScanExt:
 1390              	.LFB13:
1441:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if ((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) && \
 1391              		.loc 1 1441 0
 1392              		.cfi_startproc
 1393              		@ args = 0, pretend = 0, frame = 0
 1394              		@ frame_needed = 0, uses_anonymous_args = 0
 1395 0000 10B5     		push	{r4, lr}
 1396              		.cfi_def_cfa_offset 8
 1397              		.cfi_offset 4, -8
 1398              		.cfi_offset 14, -4
1452:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 76


 1399              		.loc 1 1452 0
 1400 0002 054A     		ldr	r2, .L92
 1401 0004 D368     		ldr	r3, [r2, #12]
 1402 0006 0549     		ldr	r1, .L92+4
 1403 0008 0B43     		orrs	r3, r1
 1404 000a D360     		str	r3, [r2, #12]
1462:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_ANALOG_STARTUP_DELAY_US > 0uL) */
 1405              		.loc 1 1462 0
 1406 000c 0A20     		movs	r0, #10
 1407 000e FFF7FEFF 		bl	CyDelayUs
 1408              	.LVL188:
1467:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 1409              		.loc 1 1467 0
 1410 0012 FFF7FEFF 		bl	CapSense_SsCSDStartSample
 1411              	.LVL189:
1468:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1412              		.loc 1 1468 0
 1413              		@ sp needed
 1414 0016 10BD     		pop	{r4, pc}
 1415              	.L93:
 1416              		.align	2
 1417              	.L92:
 1418 0018 00000000 		.word	CapSense_dsRam
 1419 001c 80000100 		.word	65664
 1420              		.cfi_endproc
 1421              	.LFE13:
 1422              		.size	CapSense_CSDScanExt, .-CapSense_CSDScanExt
 1423              		.section	.text.CapSense_CSDConnectSns,"ax",%progbits
 1424              		.align	2
 1425              		.global	CapSense_CSDConnectSns
 1426              		.code	16
 1427              		.thumb_func
 1428              		.type	CapSense_CSDConnectSns, %function
 1429              	CapSense_CSDConnectSns:
 1430              	.LFB17:
1734:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 newRegisterValue;
 1431              		.loc 1 1734 0
 1432              		.cfi_startproc
 1433              		@ args = 0, pretend = 0, frame = 0
 1434              		@ frame_needed = 0, uses_anonymous_args = 0
 1435              	.LVL190:
 1436 0000 70B5     		push	{r4, r5, r6, lr}
 1437              		.cfi_def_cfa_offset 16
 1438              		.cfi_offset 4, -16
 1439              		.cfi_offset 5, -12
 1440              		.cfi_offset 6, -8
 1441              		.cfi_offset 14, -4
 1442 0002 0400     		movs	r4, r0
1741:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
 1443              		.loc 1 1741 0
 1444 0004 857E     		ldrb	r5, [r0, #26]
 1445              	.LVL191:
1742:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1446              		.loc 1 1742 0
 1447 0006 067E     		ldrb	r6, [r0, #24]
 1448              	.LVL192:
1744:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 77


 1449              		.loc 1 1744 0
 1450 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1451              	.LVL193:
1747:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newRegisterValue &= ~(CapSense_HSIOM_SEL_MASK << pinHSIOMShift);
 1452              		.loc 1 1747 0
 1453 000c 2368     		ldr	r3, [r4]
 1454 000e 1B68     		ldr	r3, [r3]
 1455              	.LVL194:
1748:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newRegisterValue |= (uint32)((uint32)CapSense_HSIOM_SEL_CSD_SENSE << pinHSIOMShift);
 1456              		.loc 1 1748 0
 1457 0010 0F22     		movs	r2, #15
 1458 0012 B240     		lsls	r2, r2, r6
 1459 0014 9343     		bics	r3, r2
 1460              	.LVL195:
 1461 0016 1A00     		movs	r2, r3
 1462              	.LVL196:
1749:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1463              		.loc 1 1749 0
 1464 0018 0423     		movs	r3, #4
 1465 001a B340     		lsls	r3, r3, r6
 1466 001c 1343     		orrs	r3, r2
 1467              	.LVL197:
1752:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1468              		.loc 1 1752 0
 1469 001e 6668     		ldr	r6, [r4, #4]
 1470              	.LVL198:
 1471 0020 3268     		ldr	r2, [r6]
 1472 0022 0721     		movs	r1, #7
 1473 0024 A940     		lsls	r1, r1, r5
 1474 0026 8A43     		bics	r2, r1
 1475 0028 3260     		str	r2, [r6]
1755:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1476              		.loc 1 1755 0
 1477 002a 2268     		ldr	r2, [r4]
 1478 002c 1360     		str	r3, [r2]
1757:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 1479              		.loc 1 1757 0
 1480 002e FFF7FEFF 		bl	CyExitCriticalSection
 1481              	.LVL199:
1758:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1482              		.loc 1 1758 0
 1483              		@ sp needed
 1484              	.LVL200:
 1485              	.LVL201:
 1486 0032 70BD     		pop	{r4, r5, r6, pc}
 1487              		.cfi_endproc
 1488              	.LFE17:
 1489              		.size	CapSense_CSDConnectSns, .-CapSense_CSDConnectSns
 1490              		.section	.text.CapSense_CSDScan,"ax",%progbits
 1491              		.align	2
 1492              		.global	CapSense_CSDScan
 1493              		.code	16
 1494              		.thumb_func
 1495              		.type	CapSense_CSDScan, %function
 1496              	CapSense_CSDScan:
 1497              	.LFB14:
1508:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 78


 1498              		.loc 1 1508 0
 1499              		.cfi_startproc
 1500              		@ args = 0, pretend = 0, frame = 0
 1501              		@ frame_needed = 0, uses_anonymous_args = 0
 1502 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1503              		.cfi_def_cfa_offset 24
 1504              		.cfi_offset 3, -24
 1505              		.cfi_offset 4, -20
 1506              		.cfi_offset 5, -16
 1507              		.cfi_offset 6, -12
 1508              		.cfi_offset 7, -8
 1509              		.cfi_offset 14, -4
1510:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1510              		.loc 1 1510 0
 1511 0002 1D4B     		ldr	r3, .L97
 1512 0004 1B78     		ldrb	r3, [r3]
1509:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                     CapSense_dsFlash.wdgtArray[CapSense_widgetIndex
 1513              		.loc 1 1509 0
 1514 0006 5B01     		lsls	r3, r3, #5
 1515 0008 1C4A     		ldr	r2, .L97+4
 1516 000a D318     		adds	r3, r2, r3
 1517 000c 5F68     		ldr	r7, [r3, #4]
 1518              	.LVL202:
1513:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 1519              		.loc 1 1513 0
 1520 000e 1C4B     		ldr	r3, .L97+8
 1521 0010 8122     		movs	r2, #129
 1522 0012 9A5C     		ldrb	r2, [r3, r2]
 1523 0014 8021     		movs	r1, #128
 1524 0016 585C     		ldrb	r0, [r3, r1]
 1525 0018 8242     		cmp	r2, r0
 1526 001a 06D0     		beq	.L96
1515:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_dsRam.scanCurrentISC = CapSense_dsRam.scanCsdISC;
 1527              		.loc 1 1515 0
 1528 001c FFF7FEFF 		bl	CapSense_SsSetAllIOsState
 1529              	.LVL203:
1516:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 1530              		.loc 1 1516 0
 1531 0020 174B     		ldr	r3, .L97+8
 1532 0022 8022     		movs	r2, #128
 1533 0024 995C     		ldrb	r1, [r3, r2]
 1534 0026 0132     		adds	r2, r2, #1
 1535 0028 9954     		strb	r1, [r3, r2]
 1536              	.L96:
1523:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1537              		.loc 1 1523 0
 1538 002a 164C     		ldr	r4, .L97+12
 1539 002c 0023     		movs	r3, #0
 1540 002e 2370     		strb	r3, [r4]
1526:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2
 1541              		.loc 1 1526 0
 1542 0030 114E     		ldr	r6, .L97
 1543 0032 3378     		ldrb	r3, [r6]
1527:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               + CapSense_sensorIndex;
 1544              		.loc 1 1527 0
 1545 0034 114D     		ldr	r5, .L97+4
 1546 0036 5B01     		lsls	r3, r3, #5
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 79


 1547 0038 EB18     		adds	r3, r5, r3
 1548 003a 9968     		ldr	r1, [r3, #8]
1528:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1549              		.loc 1 1528 0
 1550 003c 2378     		ldrb	r3, [r4]
 1551 003e DBB2     		uxtb	r3, r3
 1552 0040 9A00     		lsls	r2, r3, #2
 1553 0042 D318     		adds	r3, r2, r3
 1554 0044 5A00     		lsls	r2, r3, #1
 1555 0046 8A18     		adds	r2, r1, r2
1526:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2
 1556              		.loc 1 1526 0
 1557 0048 0F4B     		ldr	r3, .L97+16
 1558 004a 1A60     		str	r2, [r3]
1536:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1559              		.loc 1 1536 0
 1560 004c 3800     		movs	r0, r7
 1561 004e FFF7FEFF 		bl	CapSense_SsCSDSetUpIdacs
 1562              	.LVL204:
1555:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2SnsFla
 1563              		.loc 1 1555 0
 1564 0052 3378     		ldrb	r3, [r6]
1556:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         + CapSense_sensorIndex;
 1565              		.loc 1 1556 0
 1566 0054 5B01     		lsls	r3, r3, #5
 1567 0056 5859     		ldr	r0, [r3, r5]
1557:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1568              		.loc 1 1557 0
 1569 0058 2278     		ldrb	r2, [r4]
 1570 005a D2B2     		uxtb	r2, r2
 1571 005c D300     		lsls	r3, r2, #3
 1572 005e 9A1A     		subs	r2, r3, r2
 1573 0060 9300     		lsls	r3, r2, #2
 1574 0062 C018     		adds	r0, r0, r3
1555:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2SnsFla
 1575              		.loc 1 1555 0
 1576 0064 094B     		ldr	r3, .L97+20
 1577 0066 1860     		str	r0, [r3]
1560:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1578              		.loc 1 1560 0
 1579 0068 FFF7FEFF 		bl	CapSense_CSDConnectSns
 1580              	.LVL205:
1563:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
 1581              		.loc 1 1563 0
 1582 006c 0848     		ldr	r0, .L97+24
 1583 006e FFF7FEFF 		bl	CapSense_ISR_StartEx
 1584              	.LVL206:
1567:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 1585              		.loc 1 1567 0
 1586 0072 FFF7FEFF 		bl	CapSense_CSDScanExt
 1587              	.LVL207:
1568:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1588              		.loc 1 1568 0
 1589              		@ sp needed
 1590              	.LVL208:
 1591 0076 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1592              	.L98:
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 80


 1593              		.align	2
 1594              	.L97:
 1595 0078 00000000 		.word	CapSense_widgetIndex
 1596 007c 00000000 		.word	CapSense_dsFlash
 1597 0080 00000000 		.word	CapSense_dsRam
 1598 0084 00000000 		.word	CapSense_sensorIndex
 1599 0088 00000000 		.word	CapSense_curRamSnsPtr
 1600 008c 00000000 		.word	CapSense_curSnsIOPtr
 1601 0090 00000000 		.word	CapSense_CSDPostMultiScan
 1602              		.cfi_endproc
 1603              	.LFE14:
 1604              		.size	CapSense_CSDScan, .-CapSense_CSDScan
 1605              		.section	.text.CapSense_SsCSDConnectSensorExt,"ax",%progbits
 1606              		.align	2
 1607              		.global	CapSense_SsCSDConnectSensorExt
 1608              		.code	16
 1609              		.thumb_func
 1610              		.type	CapSense_SsCSDConnectSensorExt, %function
 1611              	CapSense_SsCSDConnectSensorExt:
 1612              	.LFB15:
1591:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 1613              		.loc 1 1591 0
 1614              		.cfi_startproc
 1615              		@ args = 0, pretend = 0, frame = 0
 1616              		@ frame_needed = 0, uses_anonymous_args = 0
 1617              	.LVL209:
 1618 0000 10B5     		push	{r4, lr}
 1619              		.cfi_def_cfa_offset 8
 1620              		.cfi_offset 4, -8
 1621              		.cfi_offset 14, -4
1598:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       + sensorId;
 1622              		.loc 1 1598 0
 1623 0002 4001     		lsls	r0, r0, #5
 1624              	.LVL210:
 1625 0004 054B     		ldr	r3, .L100
 1626 0006 C058     		ldr	r0, [r0, r3]
1599:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1627              		.loc 1 1599 0
 1628 0008 CB00     		lsls	r3, r1, #3
 1629 000a 591A     		subs	r1, r3, r1
 1630              	.LVL211:
 1631 000c 8B00     		lsls	r3, r1, #2
 1632 000e C018     		adds	r0, r0, r3
1597:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 1633              		.loc 1 1597 0
 1634 0010 034B     		ldr	r3, .L100+4
 1635 0012 1860     		str	r0, [r3]
1633:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 1636              		.loc 1 1633 0
 1637 0014 FFF7FEFF 		bl	CapSense_CSDConnectSns
 1638              	.LVL212:
1635:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1639              		.loc 1 1635 0
 1640              		@ sp needed
 1641 0018 10BD     		pop	{r4, pc}
 1642              	.L101:
 1643 001a C046     		.align	2
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 81


 1644              	.L100:
 1645 001c 00000000 		.word	CapSense_dsFlash
 1646 0020 00000000 		.word	CapSense_curSnsIOPtr
 1647              		.cfi_endproc
 1648              	.LFE15:
 1649              		.size	CapSense_SsCSDConnectSensorExt, .-CapSense_SsCSDConnectSensorExt
 1650              		.section	.text.CapSense_CSDDisconnectSns,"ax",%progbits
 1651              		.align	2
 1652              		.global	CapSense_CSDDisconnectSns
 1653              		.code	16
 1654              		.thumb_func
 1655              		.type	CapSense_CSDDisconnectSns, %function
 1656              	CapSense_CSDDisconnectSns:
 1657              	.LFB18:
1786:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint8  interruptState;
 1658              		.loc 1 1786 0
 1659              		.cfi_startproc
 1660              		@ args = 0, pretend = 0, frame = 0
 1661              		@ frame_needed = 0, uses_anonymous_args = 0
 1662              	.LVL213:
 1663 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1664              		.cfi_def_cfa_offset 24
 1665              		.cfi_offset 3, -24
 1666              		.cfi_offset 4, -20
 1667              		.cfi_offset 5, -16
 1668              		.cfi_offset 6, -12
 1669              		.cfi_offset 7, -8
 1670              		.cfi_offset 14, -4
 1671 0002 0400     		movs	r4, r0
1793:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
 1672              		.loc 1 1793 0
 1673 0004 067E     		ldrb	r6, [r0, #24]
 1674              	.LVL214:
1794:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1675              		.loc 1 1794 0
 1676 0006 857E     		ldrb	r5, [r0, #26]
 1677              	.LVL215:
1796:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1678              		.loc 1 1796 0
 1679 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1680              	.LVL216:
1798:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newPcRegValue &= ~(CapSense_GPIO_PC_MASK << pinModeShift);
 1681              		.loc 1 1798 0
 1682 000c 6368     		ldr	r3, [r4, #4]
 1683 000e 1968     		ldr	r1, [r3]
 1684              	.LVL217:
1799:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1685              		.loc 1 1799 0
 1686 0010 0723     		movs	r3, #7
 1687 0012 AB40     		lsls	r3, r3, r5
 1688 0014 9943     		bics	r1, r3
 1689              	.LVL218:
1801:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newHsiomRegValue &= ~(CapSense_HSIOM_SEL_MASK << pinHSIOMShift);
 1690              		.loc 1 1801 0
 1691 0016 2768     		ldr	r7, [r4]
 1692 0018 3B68     		ldr	r3, [r7]
 1693              	.LVL219:
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 82


1802:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->hsiomPtr, newHsiomRegValue);
 1694              		.loc 1 1802 0
 1695 001a 0F22     		movs	r2, #15
 1696 001c B240     		lsls	r2, r2, r6
 1697 001e 9343     		bics	r3, r2
 1698              	.LVL220:
1803:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1699              		.loc 1 1803 0
 1700 0020 3B60     		str	r3, [r7]
1805:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 1701              		.loc 1 1805 0
 1702 0022 8122     		movs	r2, #129
 1703 0024 0E4F     		ldr	r7, .L105
 1704 0026 BA5C     		ldrb	r2, [r7, r2]
 1705 0028 002A     		cmp	r2, #0
 1706 002a 05D1     		bne	.L103
1807:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->pcPtr, newPcRegValue);
 1707              		.loc 1 1807 0
 1708 002c 0623     		movs	r3, #6
 1709              	.LVL221:
 1710 002e AB40     		lsls	r3, r3, r5
 1711 0030 1943     		orrs	r1, r3
 1712              	.LVL222:
1808:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 1713              		.loc 1 1808 0
 1714 0032 6368     		ldr	r3, [r4, #4]
 1715 0034 1960     		str	r1, [r3]
 1716 0036 08E0     		b	.L104
 1717              	.LVL223:
 1718              	.L103:
1813:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1719              		.loc 1 1813 0
 1720 0038 022A     		cmp	r2, #2
 1721 003a 06D1     		bne	.L104
1816:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(snsAddrPtr->pcPtr, newPcRegValue);
 1722              		.loc 1 1816 0
 1723 003c 0332     		adds	r2, r2, #3
 1724 003e B240     		lsls	r2, r2, r6
 1725 0040 1343     		orrs	r3, r2
 1726              	.LVL224:
1817:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(snsAddrPtr->hsiomPtr, newHsiomRegValue);
 1727              		.loc 1 1817 0
 1728 0042 6268     		ldr	r2, [r4, #4]
 1729 0044 1160     		str	r1, [r2]
1818:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 1730              		.loc 1 1818 0
 1731 0046 2268     		ldr	r2, [r4]
 1732 0048 1360     		str	r3, [r2]
 1733              	.LVL225:
 1734              	.L104:
1822:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1735              		.loc 1 1822 0
 1736 004a A168     		ldr	r1, [r4, #8]
 1737              	.LVL226:
 1738 004c 0B68     		ldr	r3, [r1]
 1739 004e 647E     		ldrb	r4, [r4, #25]
 1740              	.LVL227:
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 83


 1741 0050 0122     		movs	r2, #1
 1742 0052 A240     		lsls	r2, r2, r4
 1743 0054 9343     		bics	r3, r2
 1744 0056 0B60     		str	r3, [r1]
1824:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 1745              		.loc 1 1824 0
 1746 0058 FFF7FEFF 		bl	CyExitCriticalSection
 1747              	.LVL228:
1825:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1748              		.loc 1 1825 0
 1749              		@ sp needed
 1750              	.LVL229:
 1751              	.LVL230:
 1752 005c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1753              	.L106:
 1754 005e C046     		.align	2
 1755              	.L105:
 1756 0060 00000000 		.word	CapSense_dsRam
 1757              		.cfi_endproc
 1758              	.LFE18:
 1759              		.size	CapSense_CSDDisconnectSns, .-CapSense_CSDDisconnectSns
 1760              		.section	.text.CapSense_SsCSDElectrodeCheck,"ax",%progbits
 1761              		.align	2
 1762              		.global	CapSense_SsCSDElectrodeCheck
 1763              		.code	16
 1764              		.thumb_func
 1765              		.type	CapSense_SsCSDElectrodeCheck, %function
 1766              	CapSense_SsCSDElectrodeCheck:
 1767              	.LFB5:
 738:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 1768              		.loc 1 738 0
 1769              		.cfi_startproc
 1770              		@ args = 0, pretend = 0, frame = 0
 1771              		@ frame_needed = 0, uses_anonymous_args = 0
 1772 0000 10B5     		push	{r4, lr}
 1773              		.cfi_def_cfa_offset 8
 1774              		.cfi_offset 4, -8
 1775              		.cfi_offset 14, -4
 743:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 1776              		.loc 1 743 0
 1777 0002 064B     		ldr	r3, .L109
 1778 0004 1B78     		ldrb	r3, [r3]
 1779 0006 012B     		cmp	r3, #1
 1780 0008 06D1     		bne	.L107
 771:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
 1781              		.loc 1 771 0
 1782 000a 054B     		ldr	r3, .L109+4
 1783 000c 1868     		ldr	r0, [r3]
 1784 000e FFF7FEFF 		bl	CapSense_CSDDisconnectSns
 1785              	.LVL231:
 774:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 1786              		.loc 1 774 0
 1787 0012 0022     		movs	r2, #0
 1788 0014 014B     		ldr	r3, .L109
 1789 0016 1A70     		strb	r2, [r3]
 1790              	.L107:
 776:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 84


 1791              		.loc 1 776 0
 1792              		@ sp needed
 1793 0018 10BD     		pop	{r4, pc}
 1794              	.L110:
 1795 001a C046     		.align	2
 1796              	.L109:
 1797 001c 00000000 		.word	.LANCHOR1
 1798 0020 00000000 		.word	CapSense_curSnsIOPtr
 1799              		.cfi_endproc
 1800              	.LFE5:
 1801              		.size	CapSense_SsCSDElectrodeCheck, .-CapSense_SsCSDElectrodeCheck
 1802              		.section	.text.CapSense_CSDSetupWidget,"ax",%progbits
 1803              		.align	2
 1804              		.global	CapSense_CSDSetupWidget
 1805              		.code	16
 1806              		.thumb_func
 1807              		.type	CapSense_CSDSetupWidget, %function
 1808              	CapSense_CSDSetupWidget:
 1809              	.LFB10:
1180:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1810              		.loc 1 1180 0
 1811              		.cfi_startproc
 1812              		@ args = 0, pretend = 0, frame = 0
 1813              		@ frame_needed = 0, uses_anonymous_args = 0
 1814              	.LVL232:
 1815 0000 70B5     		push	{r4, r5, r6, lr}
 1816              		.cfi_def_cfa_offset 16
 1817              		.cfi_offset 4, -16
 1818              		.cfi_offset 5, -12
 1819              		.cfi_offset 6, -8
 1820              		.cfi_offset 14, -4
1181:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
 1821              		.loc 1 1181 0
 1822 0002 104E     		ldr	r6, .L112
 1823 0004 4301     		lsls	r3, r0, #5
 1824 0006 F318     		adds	r3, r6, r3
 1825 0008 5D68     		ldr	r5, [r3, #4]
 1826              	.LVL233:
1185:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1827              		.loc 1 1185 0
 1828 000a C0B2     		uxtb	r0, r0
 1829              	.LVL234:
 1830 000c 0E4C     		ldr	r4, .L112+4
 1831 000e 2070     		strb	r0, [r4]
1187:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1832              		.loc 1 1187 0
 1833 0010 0120     		movs	r0, #1
 1834 0012 FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1835              	.LVL235:
1195:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1836              		.loc 1 1195 0
 1837 0016 FFF7FEFF 		bl	CapSense_SsCSDElectrodeCheck
 1838              	.LVL236:
1199:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1839              		.loc 1 1199 0
 1840 001a 2378     		ldrb	r3, [r4]
 1841 001c 5B01     		lsls	r3, r3, #5
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 85


 1842 001e 9A59     		ldr	r2, [r3, r6]
1198:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2SnsFlash;
 1843              		.loc 1 1198 0
 1844 0020 0A4B     		ldr	r3, .L112+8
 1845 0022 1A60     		str	r2, [r3]
1202:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_dsRam.status |= CapSense_widgetIndex;
 1846              		.loc 1 1202 0
 1847 0024 0A4B     		ldr	r3, .L112+12
 1848 0026 DA68     		ldr	r2, [r3, #12]
 1849 0028 7F21     		movs	r1, #127
 1850 002a 8A43     		bics	r2, r1
 1851 002c DA60     		str	r2, [r3, #12]
1203:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1852              		.loc 1 1203 0
 1853 002e 2178     		ldrb	r1, [r4]
 1854 0030 DA68     		ldr	r2, [r3, #12]
 1855 0032 0A43     		orrs	r2, r1
 1856 0034 DA60     		str	r2, [r3, #12]
1205:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) || \
 1857              		.loc 1 1205 0
 1858 0036 2800     		movs	r0, r5
 1859 0038 FFF7FEFF 		bl	CapSense_SsCSDCalculateScanDuration
 1860              	.LVL237:
1210:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
 1861              		.loc 1 1210 0
 1862 003c FFF7FEFF 		bl	CapSense_SsCSDConfigClock
 1863              	.LVL238:
1212:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1864              		.loc 1 1212 0
 1865              		@ sp needed
 1866              	.LVL239:
 1867              	.LVL240:
 1868 0040 70BD     		pop	{r4, r5, r6, pc}
 1869              	.L113:
 1870 0042 C046     		.align	2
 1871              	.L112:
 1872 0044 00000000 		.word	CapSense_dsFlash
 1873 0048 00000000 		.word	CapSense_widgetIndex
 1874 004c 00000000 		.word	CapSense_curSnsIOPtr
 1875 0050 00000000 		.word	CapSense_dsRam
 1876              		.cfi_endproc
 1877              	.LFE10:
 1878              		.size	CapSense_CSDSetupWidget, .-CapSense_CSDSetupWidget
 1879              		.section	.text.CapSense_CSDSetupWidgetExt,"ax",%progbits
 1880              		.align	2
 1881              		.global	CapSense_CSDSetupWidgetExt
 1882              		.code	16
 1883              		.thumb_func
 1884              		.type	CapSense_CSDSetupWidgetExt, %function
 1885              	CapSense_CSDSetupWidgetExt:
 1886              	.LFB11:
1266:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1887              		.loc 1 1266 0
 1888              		.cfi_startproc
 1889              		@ args = 0, pretend = 0, frame = 0
 1890              		@ frame_needed = 0, uses_anonymous_args = 0
 1891              	.LVL241:
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 86


 1892 0000 70B5     		push	{r4, r5, r6, lr}
 1893              		.cfi_def_cfa_offset 16
 1894              		.cfi_offset 4, -16
 1895              		.cfi_offset 5, -12
 1896              		.cfi_offset 6, -8
 1897              		.cfi_offset 14, -4
1267:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                     CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRa
 1898              		.loc 1 1267 0
 1899 0002 4301     		lsls	r3, r0, #5
 1900 0004 134A     		ldr	r2, .L115
 1901 0006 D318     		adds	r3, r2, r3
 1902 0008 5D68     		ldr	r5, [r3, #4]
 1903              	.LVL242:
1271:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1904              		.loc 1 1271 0
 1905 000a C9B2     		uxtb	r1, r1
 1906              	.LVL243:
 1907 000c 124C     		ldr	r4, .L115+4
 1908 000e 2170     		strb	r1, [r4]
1275:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               + CapSense_sensorIndex;
 1909              		.loc 1 1275 0
 1910 0010 9968     		ldr	r1, [r3, #8]
1276:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1911              		.loc 1 1276 0
 1912 0012 2378     		ldrb	r3, [r4]
 1913 0014 DBB2     		uxtb	r3, r3
 1914 0016 9A00     		lsls	r2, r3, #2
 1915 0018 D318     		adds	r3, r2, r3
 1916 001a 5A00     		lsls	r2, r3, #1
 1917 001c 8A18     		adds	r2, r1, r2
1274:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsRam
 1918              		.loc 1 1274 0
 1919 001e 0F4B     		ldr	r3, .L115+8
 1920 0020 1A60     		str	r2, [r3]
1278:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1921              		.loc 1 1278 0
 1922 0022 FFF7FEFF 		bl	CapSense_CSDSetupWidget
 1923              	.LVL244:
1281:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1924              		.loc 1 1281 0
 1925 0026 2800     		movs	r0, r5
 1926 0028 FFF7FEFF 		bl	CapSense_SsCSDSetUpIdacs
 1927              	.LVL245:
1292:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
 1928              		.loc 1 1292 0
 1929 002c 2378     		ldrb	r3, [r4]
 1930 002e DBB2     		uxtb	r3, r3
 1931 0030 0B49     		ldr	r1, .L115+12
 1932 0032 DA00     		lsls	r2, r3, #3
 1933 0034 D31A     		subs	r3, r2, r3
 1934 0036 9800     		lsls	r0, r3, #2
 1935 0038 0B68     		ldr	r3, [r1]
 1936 003a 9C46     		mov	ip, r3
 1937 003c 6044     		add	r0, r0, ip
 1938 003e 0860     		str	r0, [r1]
1293:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
 1939              		.loc 1 1293 0
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 87


 1940 0040 FFF7FEFF 		bl	CapSense_CSDConnectSns
 1941              	.LVL246:
1303:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1942              		.loc 1 1303 0
 1943 0044 0122     		movs	r2, #1
 1944 0046 074B     		ldr	r3, .L115+16
 1945 0048 1A70     		strb	r2, [r3]
1306:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 1946              		.loc 1 1306 0
 1947 004a 0748     		ldr	r0, .L115+20
 1948 004c FFF7FEFF 		bl	CapSense_ISR_StartEx
 1949              	.LVL247:
1307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1950              		.loc 1 1307 0
 1951              		@ sp needed
 1952              	.LVL248:
 1953 0050 70BD     		pop	{r4, r5, r6, pc}
 1954              	.L116:
 1955 0052 C046     		.align	2
 1956              	.L115:
 1957 0054 00000000 		.word	CapSense_dsFlash
 1958 0058 00000000 		.word	CapSense_sensorIndex
 1959 005c 00000000 		.word	CapSense_curRamSnsPtr
 1960 0060 00000000 		.word	CapSense_curSnsIOPtr
 1961 0064 00000000 		.word	.LANCHOR1
 1962 0068 00000000 		.word	CapSense_CSDPostSingleScan
 1963              		.cfi_endproc
 1964              	.LFE11:
 1965              		.size	CapSense_CSDSetupWidgetExt, .-CapSense_CSDSetupWidgetExt
 1966              		.section	.text.CapSense_SsCSDCalibrate,"ax",%progbits
 1967              		.align	2
 1968              		.code	16
 1969              		.thumb_func
 1970              		.type	CapSense_SsCSDCalibrate, %function
 1971              	CapSense_SsCSDCalibrate:
 1972              	.LFB22:
2175:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 snsIndex;
 1973              		.loc 1 2175 0
 1974              		.cfi_startproc
 1975              		@ args = 0, pretend = 0, frame = 16
 1976              		@ frame_needed = 0, uses_anonymous_args = 0
 1977              	.LVL249:
 1978 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1979              		.cfi_def_cfa_offset 20
 1980              		.cfi_offset 4, -20
 1981              		.cfi_offset 5, -16
 1982              		.cfi_offset 6, -12
 1983              		.cfi_offset 7, -8
 1984              		.cfi_offset 14, -4
 1985 0002 5746     		mov	r7, r10
 1986 0004 80B4     		push	{r7}
 1987              		.cfi_def_cfa_offset 24
 1988              		.cfi_offset 10, -24
 1989 0006 84B0     		sub	sp, sp, #16
 1990              		.cfi_def_cfa_offset 40
 1991 0008 0190     		str	r0, [sp, #4]
 1992              	.LVL250:
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 88


2194:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1993              		.loc 1 2194 0
 1994 000a 4301     		lsls	r3, r0, #5
 1995 000c 514A     		ldr	r2, .L142
 1996 000e D318     		adds	r3, r2, r3
 1997              	.LVL251:
 1998 0010 5B68     		ldr	r3, [r3, #4]
 1999              	.LVL252:
 2000 0012 9A46     		mov	r10, r3
 2001              	.LVL253:
2196:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ptrMaxIdac = &maxIdac[0u];
 2002              		.loc 1 2196 0
 2003 0014 1D00     		movs	r5, r3
 2004 0016 0935     		adds	r5, r5, #9
 2005              	.LVL254:
2199:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 2006              		.loc 1 2199 0
 2007 0018 0123     		movs	r3, #1
 2008              	.LVL255:
 2009 001a 03E0     		b	.L118
 2010              	.LVL256:
 2011              	.L119:
2201:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
 2012              		.loc 1 2201 0
 2013 001c 0020     		movs	r0, #0
 2014 001e 03AB     		add	r3, sp, #12
 2015              	.LVL257:
 2016 0020 9854     		strb	r0, [r3, r2]
2199:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 2017              		.loc 1 2199 0
 2018 0022 1300     		movs	r3, r2
 2019              	.LVL258:
 2020              	.L118:
2199:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 2021              		.loc 1 2199 0 is_stmt 0 discriminator 1
 2022 0024 5A1E     		subs	r2, r3, #1
 2023              	.LVL259:
 2024 0026 002B     		cmp	r3, #0
 2025 0028 F8D1     		bne	.L119
2208:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2026              		.loc 1 2208 0 is_stmt 1
 2027 002a 5346     		mov	r3, r10
 2028 002c 1A88     		ldrh	r2, [r3]
 2029              	.LVL260:
 2030 002e 0123     		movs	r3, #1
 2031 0030 9340     		lsls	r3, r3, r2
 2032 0032 013B     		subs	r3, r3, #1
 2033 0034 5943     		muls	r1, r3
 2034              	.LVL261:
 2035 0036 0800     		movs	r0, r1
 2036 0038 6421     		movs	r1, #100
 2037 003a FFF7FEFF 		bl	__aeabi_uidiv
 2038              	.LVL262:
 2039 003e 0600     		movs	r6, r0
 2040              	.LVL263:
2219:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 2041              		.loc 1 2219 0
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 89


 2042 0040 0023     		movs	r3, #0
 2043 0042 0093     		str	r3, [sp]
 2044 0044 6EE0     		b	.L120
 2045              	.LVL264:
 2046              	.L138:
2232:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2047              		.loc 1 2232 0
 2048 0046 019B     		ldr	r3, [sp, #4]
 2049 0048 5B01     		lsls	r3, r3, #5
 2050 004a 424A     		ldr	r2, .L142
 2051              	.LVL265:
 2052 004c D318     		adds	r3, r2, r3
 2053 004e 9F68     		ldr	r7, [r3, #8]
 2054 0050 009A     		ldr	r2, [sp]
 2055 0052 9300     		lsls	r3, r2, #2
 2056 0054 9446     		mov	ip, r2
 2057 0056 6344     		add	r3, r3, ip
 2058 0058 5A00     		lsls	r2, r3, #1
 2059 005a BF18     		adds	r7, r7, r2
 2060              	.LVL266:
2236:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 2061              		.loc 1 2236 0
 2062 005c 0123     		movs	r3, #1
 2063 005e 04E0     		b	.L121
 2064              	.LVL267:
 2065              	.L122:
2238:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 2066              		.loc 1 2238 0
 2067 0060 4023     		movs	r3, #64
 2068 0062 AB54     		strb	r3, [r5, r2]
2240:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif
 2069              		.loc 1 2240 0
 2070 0064 B918     		adds	r1, r7, r2
 2071 0066 4B72     		strb	r3, [r1, #9]
2236:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 2072              		.loc 1 2236 0
 2073 0068 1300     		movs	r3, r2
 2074              	.LVL268:
 2075              	.L121:
2236:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 2076              		.loc 1 2236 0 is_stmt 0 discriminator 1
 2077 006a 5A1E     		subs	r2, r3, #1
 2078              	.LVL269:
 2079 006c 002B     		cmp	r3, #0
 2080 006e F7D1     		bne	.L122
 2081 0070 4024     		movs	r4, #64
 2082              	.LVL270:
 2083              	.L131:
2248:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2084              		.loc 1 2248 0 is_stmt 1
 2085 0072 0099     		ldr	r1, [sp]
 2086 0074 0198     		ldr	r0, [sp, #4]
 2087 0076 FFF7FEFF 		bl	CapSense_CSDSetupWidgetExt
 2088              	.LVL271:
2251:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif
 2089              		.loc 1 2251 0
 2090 007a 0120     		movs	r0, #1
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 90


 2091 007c FFF7FEFF 		bl	CapSense_DischargeExtCapacitors
 2092              	.LVL272:
2255:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2093              		.loc 1 2255 0
 2094 0080 FFF7FEFF 		bl	CapSense_CSDScanExt
 2095              	.LVL273:
2257:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 while (((CapSense_dsRam.status & CapSense_SW_STS_BUSY) != 0u) && (0uL != watchdogCo
 2096              		.loc 1 2257 0
 2097 0084 344B     		ldr	r3, .L142+4
2258:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 2098              		.loc 1 2258 0
 2099 0086 00E0     		b	.L123
 2100              	.LVL274:
 2101              	.L125:
2260:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
 2102              		.loc 1 2260 0
 2103 0088 013B     		subs	r3, r3, #1
 2104              	.LVL275:
 2105              	.L123:
2258:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 2106              		.loc 1 2258 0
 2107 008a 344A     		ldr	r2, .L142+8
 2108 008c D268     		ldr	r2, [r2, #12]
 2109 008e 1206     		lsls	r2, r2, #24
 2110 0090 0DD5     		bpl	.L141
2258:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 2111              		.loc 1 2258 0 is_stmt 0 discriminator 1
 2112 0092 002B     		cmp	r3, #0
 2113 0094 F8D1     		bne	.L125
 2114 0096 0133     		adds	r3, r3, #1
 2115              	.LVL276:
 2116 0098 0AE0     		b	.L124
 2117              	.LVL277:
 2118              	.L127:
2266:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 2119              		.loc 1 2266 0 is_stmt 1
 2120 009a 5300     		lsls	r3, r2, #1
 2121 009c DB5B     		ldrh	r3, [r3, r7]
 2122 009e 9E42     		cmp	r6, r3
 2123 00a0 03D9     		bls	.L126
2268:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
 2124              		.loc 1 2268 0
 2125 00a2 A918     		adds	r1, r5, r2
 2126 00a4 0B78     		ldrb	r3, [r1]
 2127 00a6 A343     		bics	r3, r4
 2128 00a8 0B70     		strb	r3, [r1]
 2129              	.L126:
 2130 00aa 1300     		movs	r3, r2
 2131 00ac 00E0     		b	.L124
 2132              	.LVL278:
 2133              	.L141:
 2134 00ae 0123     		movs	r3, #1
 2135              	.LVL279:
 2136              	.L124:
2264:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 2137              		.loc 1 2264 0 discriminator 1
 2138 00b0 5A1E     		subs	r2, r3, #1
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 91


 2139              	.LVL280:
 2140 00b2 002B     		cmp	r3, #0
 2141 00b4 F1D1     		bne	.L127
2273:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 2142              		.loc 1 2273 0
 2143 00b6 6408     		lsrs	r4, r4, #1
 2144              	.LVL281:
2274:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 2145              		.loc 1 2274 0
 2146 00b8 0133     		adds	r3, r3, #1
 2147 00ba 0FE0     		b	.L128
 2148              	.LVL282:
 2149              	.L130:
2276:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 2150              		.loc 1 2276 0
 2151 00bc A918     		adds	r1, r5, r2
 2152 00be 0B78     		ldrb	r3, [r1]
 2153 00c0 2343     		orrs	r3, r4
 2154 00c2 DBB2     		uxtb	r3, r3
 2155 00c4 0B70     		strb	r3, [r1]
2278:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #endif
 2156              		.loc 1 2278 0
 2157 00c6 B818     		adds	r0, r7, r2
 2158 00c8 4372     		strb	r3, [r0, #9]
2280:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 2159              		.loc 1 2280 0
 2160 00ca 002C     		cmp	r4, #0
 2161 00cc 05D1     		bne	.L129
2282:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
 2162              		.loc 1 2282 0
 2163 00ce 0B78     		ldrb	r3, [r1]
 2164 00d0 002B     		cmp	r3, #0
 2165 00d2 02D1     		bne	.L129
2284:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 2166              		.loc 1 2284 0
 2167 00d4 0133     		adds	r3, r3, #1
 2168 00d6 0B70     		strb	r3, [r1]
2286:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             #endif
 2169              		.loc 1 2286 0
 2170 00d8 4372     		strb	r3, [r0, #9]
 2171              	.L129:
 2172 00da 1300     		movs	r3, r2
 2173              	.LVL283:
 2174              	.L128:
2274:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 2175              		.loc 1 2274 0 discriminator 1
 2176 00dc 5A1E     		subs	r2, r3, #1
 2177              	.LVL284:
 2178 00de 002B     		cmp	r3, #0
 2179 00e0 ECD1     		bne	.L130
2292:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2180              		.loc 1 2292 0
 2181 00e2 002C     		cmp	r4, #0
 2182 00e4 C5D1     		bne	.L131
 2183 00e6 0133     		adds	r3, r3, #1
 2184 00e8 07E0     		b	.L132
 2185              	.L134:
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 92


2296:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 2186              		.loc 1 2296 0
 2187 00ea 03AB     		add	r3, sp, #12
 2188              	.LVL285:
 2189 00ec 9B18     		adds	r3, r3, r2
 2190              	.LVL286:
 2191 00ee 1878     		ldrb	r0, [r3]
 2192 00f0 A95C     		ldrb	r1, [r5, r2]
 2193 00f2 8842     		cmp	r0, r1
 2194 00f4 00D2     		bcs	.L133
2298:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
 2195              		.loc 1 2298 0
 2196 00f6 1970     		strb	r1, [r3]
 2197              	.L133:
 2198 00f8 1300     		movs	r3, r2
 2199              	.L132:
 2200              	.LVL287:
2294:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 2201              		.loc 1 2294 0 discriminator 1
 2202 00fa 5A1E     		subs	r2, r3, #1
 2203              	.LVL288:
 2204 00fc 002B     		cmp	r3, #0
 2205 00fe F4D1     		bne	.L134
2303:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDScanExt();
 2206              		.loc 1 2303 0
 2207 0100 0099     		ldr	r1, [sp]
 2208 0102 0198     		ldr	r0, [sp, #4]
 2209 0104 FFF7FEFF 		bl	CapSense_CSDSetupWidgetExt
 2210              	.LVL289:
2304:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2211              		.loc 1 2304 0
 2212 0108 FFF7FEFF 		bl	CapSense_CSDScanExt
 2213              	.LVL290:
2306:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while (((CapSense_dsRam.status & CapSense_SW_STS_BUSY) != 0u) && (0uL != watchdogCounte
 2214              		.loc 1 2306 0
 2215 010c 124B     		ldr	r3, .L142+4
2307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 2216              		.loc 1 2307 0
 2217 010e 00E0     		b	.L135
 2218              	.LVL291:
 2219              	.L137:
2309:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 2220              		.loc 1 2309 0
 2221 0110 013B     		subs	r3, r3, #1
 2222              	.LVL292:
 2223              	.L135:
2307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 2224              		.loc 1 2307 0
 2225 0112 124A     		ldr	r2, .L142+8
 2226 0114 D268     		ldr	r2, [r2, #12]
 2227 0116 1206     		lsls	r2, r2, #24
 2228 0118 01D5     		bpl	.L136
2307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 2229              		.loc 1 2307 0 is_stmt 0 discriminator 1
 2230 011a 002B     		cmp	r3, #0
 2231 011c F8D1     		bne	.L137
 2232              	.L136:
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 93


2219:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 2233              		.loc 1 2219 0 is_stmt 1 discriminator 2
 2234 011e 009B     		ldr	r3, [sp]
 2235              	.LVL293:
 2236 0120 0133     		adds	r3, r3, #1
 2237 0122 0093     		str	r3, [sp]
 2238              	.LVL294:
 2239              	.L120:
2219:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 2240              		.loc 1 2219 0 is_stmt 0 discriminator 1
 2241 0124 019B     		ldr	r3, [sp, #4]
 2242 0126 5B01     		lsls	r3, r3, #5
 2243 0128 0A4A     		ldr	r2, .L142
 2244 012a D318     		adds	r3, r2, r3
 2245 012c 1B8B     		ldrh	r3, [r3, #24]
 2246 012e 009A     		ldr	r2, [sp]
 2247 0130 9A42     		cmp	r2, r3
 2248 0132 88D3     		bcc	.L138
 2249 0134 0123     		movs	r3, #1
 2250 0136 05E0     		b	.L139
 2251              	.LVL295:
 2252              	.L140:
2315:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
 2253              		.loc 1 2315 0 is_stmt 1
 2254 0138 03AB     		add	r3, sp, #12
 2255              	.LVL296:
 2256 013a 995C     		ldrb	r1, [r3, r2]
 2257 013c 5346     		mov	r3, r10
 2258              	.LVL297:
 2259 013e 9B18     		adds	r3, r3, r2
 2260 0140 5972     		strb	r1, [r3, #9]
2313:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 2261              		.loc 1 2313 0
 2262 0142 1300     		movs	r3, r2
 2263              	.LVL298:
 2264              	.L139:
2313:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 2265              		.loc 1 2313 0 is_stmt 0 discriminator 1
 2266 0144 5A1E     		subs	r2, r3, #1
 2267              	.LVL299:
 2268 0146 002B     		cmp	r3, #0
 2269 0148 F6D1     		bne	.L140
2368:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2270              		.loc 1 2368 0 is_stmt 1
 2271 014a 04B0     		add	sp, sp, #16
 2272              	.LVL300:
 2273              		@ sp needed
 2274              	.LVL301:
 2275              	.LVL302:
 2276              	.LVL303:
 2277 014c 04BC     		pop	{r2}
 2278 014e 9246     		mov	r10, r2
 2279 0150 F0BD     		pop	{r4, r5, r6, r7, pc}
 2280              	.L143:
 2281 0152 C046     		.align	2
 2282              	.L142:
 2283 0154 00000000 		.word	CapSense_dsFlash
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 94


 2284 0158 00A60E00 		.word	960000
 2285 015c 00000000 		.word	CapSense_dsRam
 2286              		.cfi_endproc
 2287              	.LFE22:
 2288              		.size	CapSense_SsCSDCalibrate, .-CapSense_SsCSDCalibrate
 2289              		.section	.text.CapSense_SsCSDDisconnectSnsExt,"ax",%progbits
 2290              		.align	2
 2291              		.global	CapSense_SsCSDDisconnectSnsExt
 2292              		.code	16
 2293              		.thumb_func
 2294              		.type	CapSense_SsCSDDisconnectSnsExt, %function
 2295              	CapSense_SsCSDDisconnectSnsExt:
 2296              	.LFB16:
1661:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 2297              		.loc 1 1661 0
 2298              		.cfi_startproc
 2299              		@ args = 0, pretend = 0, frame = 0
 2300              		@ frame_needed = 0, uses_anonymous_args = 0
 2301              	.LVL304:
 2302 0000 10B5     		push	{r4, lr}
 2303              		.cfi_def_cfa_offset 8
 2304              		.cfi_offset 4, -8
 2305              		.cfi_offset 14, -4
1668:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       + sensorId;
 2306              		.loc 1 1668 0
 2307 0002 4001     		lsls	r0, r0, #5
 2308              	.LVL305:
 2309 0004 054B     		ldr	r3, .L145
 2310 0006 C058     		ldr	r0, [r0, r3]
1669:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2311              		.loc 1 1669 0
 2312 0008 CB00     		lsls	r3, r1, #3
 2313 000a 591A     		subs	r1, r3, r1
 2314              	.LVL306:
 2315 000c 8B00     		lsls	r3, r1, #2
 2316 000e C018     		adds	r0, r0, r3
1667:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 2317              		.loc 1 1667 0
 2318 0010 034B     		ldr	r3, .L145+4
 2319 0012 1860     		str	r0, [r3]
1702:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 2320              		.loc 1 1702 0
 2321 0014 FFF7FEFF 		bl	CapSense_CSDDisconnectSns
 2322              	.LVL307:
1704:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2323              		.loc 1 1704 0
 2324              		@ sp needed
 2325 0018 10BD     		pop	{r4, pc}
 2326              	.L146:
 2327 001a C046     		.align	2
 2328              	.L145:
 2329 001c 00000000 		.word	CapSense_dsFlash
 2330 0020 00000000 		.word	CapSense_curSnsIOPtr
 2331              		.cfi_endproc
 2332              	.LFE16:
 2333              		.size	CapSense_SsCSDDisconnectSnsExt, .-CapSense_SsCSDDisconnectSnsExt
 2334              		.section	.text.CapSense_CSDCalibrateWidget,"ax",%progbits
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 95


 2335              		.align	2
 2336              		.global	CapSense_CSDCalibrateWidget
 2337              		.code	16
 2338              		.thumb_func
 2339              		.type	CapSense_CSDCalibrateWidget, %function
 2340              	CapSense_CSDCalibrateWidget:
 2341              	.LFB23:
2417:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 2342              		.loc 1 2417 0
 2343              		.cfi_startproc
 2344              		@ args = 0, pretend = 0, frame = 0
 2345              		@ frame_needed = 0, uses_anonymous_args = 0
 2346              	.LVL308:
 2347 0000 70B5     		push	{r4, r5, r6, lr}
 2348              		.cfi_def_cfa_offset 16
 2349              		.cfi_offset 4, -16
 2350              		.cfi_offset 5, -12
 2351              		.cfi_offset 6, -8
 2352              		.cfi_offset 14, -4
 2353 0002 0400     		movs	r4, r0
 2354 0004 0D00     		movs	r5, r1
 2355              	.LVL309:
2425:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2356              		.loc 1 2425 0
 2357 0006 4601     		lsls	r6, r0, #5
 2358 0008 174B     		ldr	r3, .L155
 2359 000a F618     		adds	r6, r6, r3
 2360              	.LVL310:
2427:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 2361              		.loc 1 2427 0
 2362 000c 174B     		ldr	r3, .L155+4
 2363 000e DB68     		ldr	r3, [r3, #12]
 2364 0010 DB03     		lsls	r3, r3, #15
 2365 0012 24D4     		bmi	.L153
2435:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSD_IDAC_GAIN_INDEX_DEFAULT;
 2366              		.loc 1 2435 0
 2367 0014 7368     		ldr	r3, [r6, #4]
 2368 0016 0422     		movs	r2, #4
 2369 0018 9A72     		strb	r2, [r3, #10]
 2370              	.LVL311:
 2371              	.L149:
2444:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     gainSwitch = CapSense_SsCSDSwitchIdacGain(ptrFlashWidget);
 2372              		.loc 1 2444 0 discriminator 1
 2373 001a 2900     		movs	r1, r5
 2374 001c 2000     		movs	r0, r4
 2375 001e FFF7FEFF 		bl	CapSense_SsCSDCalibrate
 2376              	.LVL312:
2445:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 } while(0u != gainSwitch);
 2377              		.loc 1 2445 0 discriminator 1
 2378 0022 3000     		movs	r0, r6
 2379 0024 FFF7FEFF 		bl	CapSense_SsCSDSwitchIdacGain
 2380              	.LVL313:
2446:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
 2381              		.loc 1 2446 0 discriminator 1
 2382 0028 0028     		cmp	r0, #0
 2383 002a F6D1     		bne	.L149
2451:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 96


 2384              		.loc 1 2451 0
 2385 002c 2900     		movs	r1, r5
 2386 002e 3000     		movs	r0, r6
 2387              	.LVL314:
 2388 0030 FFF7FEFF 		bl	CapSense_SsCSDNormalizeIdac
 2389              	.LVL315:
2455:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDScan();
 2390              		.loc 1 2455 0
 2391 0034 2000     		movs	r0, r4
 2392 0036 FFF7FEFF 		bl	CapSense_CSDSetupWidget
 2393              	.LVL316:
2456:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 2394              		.loc 1 2456 0
 2395 003a FFF7FEFF 		bl	CapSense_CSDScan
 2396              	.LVL317:
2458:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while (((CapSense_dsRam.status & CapSense_SW_STS_BUSY) != 0u) && (0uL != watchdogCounte
 2397              		.loc 1 2458 0
 2398 003e 0C4B     		ldr	r3, .L155+8
2459:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 2399              		.loc 1 2459 0
 2400 0040 00E0     		b	.L150
 2401              	.LVL318:
 2402              	.L152:
2461:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 2403              		.loc 1 2461 0
 2404 0042 013B     		subs	r3, r3, #1
 2405              	.LVL319:
 2406              	.L150:
2459:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 2407              		.loc 1 2459 0
 2408 0044 094A     		ldr	r2, .L155+4
 2409 0046 D268     		ldr	r2, [r2, #12]
 2410 0048 1206     		lsls	r2, r2, #24
 2411 004a 01D5     		bpl	.L151
2459:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 2412              		.loc 1 2459 0 is_stmt 0 discriminator 1
 2413 004c 002B     		cmp	r3, #0
 2414 004e F8D1     		bne	.L152
 2415              	.L151:
2465:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 2416              		.loc 1 2465 0 is_stmt 1
 2417 0050 002B     		cmp	r3, #0
 2418 0052 06D0     		beq	.L154
2471:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 2419              		.loc 1 2471 0
 2420 0054 2900     		movs	r1, r5
 2421 0056 2000     		movs	r0, r4
 2422 0058 FFF7FEFF 		bl	CapSense_SsCSDCalibrateCheck
 2423              	.LVL320:
 2424 005c 02E0     		b	.L148
 2425              	.LVL321:
 2426              	.L153:
2430:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 2427              		.loc 1 2430 0
 2428 005e 1120     		movs	r0, #17
 2429              	.LVL322:
 2430 0060 00E0     		b	.L148
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 97


 2431              	.LVL323:
 2432              	.L154:
2467:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 2433              		.loc 1 2467 0
 2434 0062 1020     		movs	r0, #16
 2435              	.LVL324:
 2436              	.L148:
2481:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* ((CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) || \
 2437              		.loc 1 2481 0
 2438              		@ sp needed
 2439              	.LVL325:
 2440              	.LVL326:
 2441              	.LVL327:
 2442 0064 70BD     		pop	{r4, r5, r6, pc}
 2443              	.L156:
 2444 0066 C046     		.align	2
 2445              	.L155:
 2446 0068 00000000 		.word	CapSense_dsFlash
 2447 006c 00000000 		.word	CapSense_dsRam
 2448 0070 00366E01 		.word	24000000
 2449              		.cfi_endproc
 2450              	.LFE23:
 2451              		.size	CapSense_CSDCalibrateWidget, .-CapSense_CSDCalibrateWidget
 2452              		.global	CapSense_configCsd
 2453              		.data
 2454              		.align	2
 2455              		.set	.LANCHOR0,. + 0
 2456              		.type	CapSense_configCsd, %object
 2457              		.size	CapSense_configCsd, 4
 2458              	CapSense_configCsd:
 2459 0000 20000004 		.word	67108896
 2460              		.bss
 2461              		.set	.LANCHOR1,. + 0
 2462              		.type	CapSense_eleCsdDisconnectFlag, %object
 2463              		.size	CapSense_eleCsdDisconnectFlag, 1
 2464              	CapSense_eleCsdDisconnectFlag:
 2465 0000 00       		.space	1
 2466              		.text
 2467              	.Letext0:
 2468              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 2469              		.file 3 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 2470              		.file 4 "Generated_Source\\PSoC4\\CapSense_SmartSense_LL.h"
 2471              		.file 5 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 2472              		.file 6 "Generated_Source\\PSoC4\\CapSense_Sensing.h"
 2473              		.file 7 "Generated_Source\\PSoC4/CyLib.h"
 2474              		.file 8 "Generated_Source\\PSoC4\\CapSense_ISR.h"
 2475              		.section	.debug_info,"",%progbits
 2476              	.Ldebug_info0:
 2477 0000 54130000 		.4byte	0x1354
 2478 0004 0400     		.2byte	0x4
 2479 0006 00000000 		.4byte	.Ldebug_abbrev0
 2480 000a 04       		.byte	0x4
 2481 000b 01       		.uleb128 0x1
 2482 000c 03020000 		.4byte	.LASF194
 2483 0010 0C       		.byte	0xc
 2484 0011 64070000 		.4byte	.LASF195
 2485 0015 77000000 		.4byte	.LASF196
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 98


 2486 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2487 001d 00000000 		.4byte	0
 2488 0021 00000000 		.4byte	.Ldebug_line0
 2489 0025 02       		.uleb128 0x2
 2490 0026 01       		.byte	0x1
 2491 0027 06       		.byte	0x6
 2492 0028 650B0000 		.4byte	.LASF0
 2493 002c 02       		.uleb128 0x2
 2494 002d 01       		.byte	0x1
 2495 002e 08       		.byte	0x8
 2496 002f 940A0000 		.4byte	.LASF1
 2497 0033 02       		.uleb128 0x2
 2498 0034 02       		.byte	0x2
 2499 0035 05       		.byte	0x5
 2500 0036 37080000 		.4byte	.LASF2
 2501 003a 02       		.uleb128 0x2
 2502 003b 02       		.byte	0x2
 2503 003c 07       		.byte	0x7
 2504 003d 8D0B0000 		.4byte	.LASF3
 2505 0041 02       		.uleb128 0x2
 2506 0042 04       		.byte	0x4
 2507 0043 05       		.byte	0x5
 2508 0044 BF080000 		.4byte	.LASF4
 2509 0048 02       		.uleb128 0x2
 2510 0049 04       		.byte	0x4
 2511 004a 07       		.byte	0x7
 2512 004b D8090000 		.4byte	.LASF5
 2513 004f 02       		.uleb128 0x2
 2514 0050 08       		.byte	0x8
 2515 0051 05       		.byte	0x5
 2516 0052 C0050000 		.4byte	.LASF6
 2517 0056 02       		.uleb128 0x2
 2518 0057 08       		.byte	0x8
 2519 0058 07       		.byte	0x7
 2520 0059 FC020000 		.4byte	.LASF7
 2521 005d 03       		.uleb128 0x3
 2522 005e 04       		.byte	0x4
 2523 005f 05       		.byte	0x5
 2524 0060 696E7400 		.ascii	"int\000"
 2525 0064 02       		.uleb128 0x2
 2526 0065 04       		.byte	0x4
 2527 0066 07       		.byte	0x7
 2528 0067 9B000000 		.4byte	.LASF8
 2529 006b 04       		.uleb128 0x4
 2530 006c D30B0000 		.4byte	.LASF9
 2531 0070 02       		.byte	0x2
 2532 0071 FB01     		.2byte	0x1fb
 2533 0073 2C000000 		.4byte	0x2c
 2534 0077 04       		.uleb128 0x4
 2535 0078 61050000 		.4byte	.LASF10
 2536 007c 02       		.byte	0x2
 2537 007d FC01     		.2byte	0x1fc
 2538 007f 3A000000 		.4byte	0x3a
 2539 0083 04       		.uleb128 0x4
 2540 0084 F7060000 		.4byte	.LASF11
 2541 0088 02       		.byte	0x2
 2542 0089 FD01     		.2byte	0x1fd
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 99


 2543 008b 48000000 		.4byte	0x48
 2544 008f 02       		.uleb128 0x2
 2545 0090 04       		.byte	0x4
 2546 0091 04       		.byte	0x4
 2547 0092 DD010000 		.4byte	.LASF12
 2548 0096 02       		.uleb128 0x2
 2549 0097 08       		.byte	0x8
 2550 0098 04       		.byte	0x4
 2551 0099 D90B0000 		.4byte	.LASF13
 2552 009d 02       		.uleb128 0x2
 2553 009e 01       		.byte	0x1
 2554 009f 08       		.byte	0x8
 2555 00a0 EE040000 		.4byte	.LASF14
 2556 00a4 04       		.uleb128 0x4
 2557 00a5 6E0A0000 		.4byte	.LASF15
 2558 00a9 02       		.byte	0x2
 2559 00aa 9D02     		.2byte	0x29d
 2560 00ac 48000000 		.4byte	0x48
 2561 00b0 05       		.uleb128 0x5
 2562 00b1 6B000000 		.4byte	0x6b
 2563 00b5 04       		.uleb128 0x4
 2564 00b6 D6070000 		.4byte	.LASF16
 2565 00ba 02       		.byte	0x2
 2566 00bb A702     		.2byte	0x2a7
 2567 00bd C1000000 		.4byte	0xc1
 2568 00c1 05       		.uleb128 0x5
 2569 00c2 83000000 		.4byte	0x83
 2570 00c6 04       		.uleb128 0x4
 2571 00c7 CA0A0000 		.4byte	.LASF17
 2572 00cb 03       		.byte	0x3
 2573 00cc 2601     		.2byte	0x126
 2574 00ce 77000000 		.4byte	0x77
 2575 00d2 04       		.uleb128 0x4
 2576 00d3 96050000 		.4byte	.LASF18
 2577 00d7 03       		.byte	0x3
 2578 00d8 2A01     		.2byte	0x12a
 2579 00da 6B000000 		.4byte	0x6b
 2580 00de 06       		.uleb128 0x6
 2581 00df 0C       		.byte	0xc
 2582 00e0 04       		.byte	0x4
 2583 00e1 75       		.byte	0x75
 2584 00e2 3B010000 		.4byte	0x13b
 2585 00e6 07       		.uleb128 0x7
 2586 00e7 EE0B0000 		.4byte	.LASF19
 2587 00eb 04       		.byte	0x4
 2588 00ec 7A       		.byte	0x7a
 2589 00ed 77000000 		.4byte	0x77
 2590 00f1 00       		.byte	0
 2591 00f2 07       		.uleb128 0x7
 2592 00f3 F50B0000 		.4byte	.LASF20
 2593 00f7 04       		.byte	0x4
 2594 00f8 7E       		.byte	0x7e
 2595 00f9 77000000 		.4byte	0x77
 2596 00fd 02       		.byte	0x2
 2597 00fe 07       		.uleb128 0x7
 2598 00ff FC0B0000 		.4byte	.LASF21
 2599 0103 04       		.byte	0x4
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 100


 2600 0104 82       		.byte	0x82
 2601 0105 77000000 		.4byte	0x77
 2602 0109 04       		.byte	0x4
 2603 010a 07       		.uleb128 0x7
 2604 010b 030C0000 		.4byte	.LASF22
 2605 010f 04       		.byte	0x4
 2606 0110 86       		.byte	0x86
 2607 0111 77000000 		.4byte	0x77
 2608 0115 06       		.byte	0x6
 2609 0116 07       		.uleb128 0x7
 2610 0117 0A0C0000 		.4byte	.LASF23
 2611 011b 04       		.byte	0x4
 2612 011c 8A       		.byte	0x8a
 2613 011d 77000000 		.4byte	0x77
 2614 0121 08       		.byte	0x8
 2615 0122 07       		.uleb128 0x7
 2616 0123 110C0000 		.4byte	.LASF24
 2617 0127 04       		.byte	0x4
 2618 0128 8E       		.byte	0x8e
 2619 0129 6B000000 		.4byte	0x6b
 2620 012d 0A       		.byte	0xa
 2621 012e 07       		.uleb128 0x7
 2622 012f 180C0000 		.4byte	.LASF25
 2623 0133 04       		.byte	0x4
 2624 0134 92       		.byte	0x92
 2625 0135 6B000000 		.4byte	0x6b
 2626 0139 0B       		.byte	0xb
 2627 013a 00       		.byte	0
 2628 013b 08       		.uleb128 0x8
 2629 013c A5040000 		.4byte	.LASF26
 2630 0140 04       		.byte	0x4
 2631 0141 93       		.byte	0x93
 2632 0142 DE000000 		.4byte	0xde
 2633 0146 09       		.uleb128 0x9
 2634 0147 01       		.byte	0x1
 2635 0148 2C000000 		.4byte	0x2c
 2636 014c 05       		.byte	0x5
 2637 014d 70       		.byte	0x70
 2638 014e 71010000 		.4byte	0x171
 2639 0152 0A       		.uleb128 0xa
 2640 0153 62000000 		.4byte	.LASF27
 2641 0157 00       		.byte	0
 2642 0158 0A       		.uleb128 0xa
 2643 0159 AB090000 		.4byte	.LASF28
 2644 015d 01       		.byte	0x1
 2645 015e 0A       		.uleb128 0xa
 2646 015f EE080000 		.4byte	.LASF29
 2647 0163 02       		.byte	0x2
 2648 0164 0A       		.uleb128 0xa
 2649 0165 F30A0000 		.4byte	.LASF30
 2650 0169 03       		.byte	0x3
 2651 016a 0A       		.uleb128 0xa
 2652 016b 94070000 		.4byte	.LASF31
 2653 016f 04       		.byte	0x4
 2654 0170 00       		.byte	0
 2655 0171 06       		.uleb128 0x6
 2656 0172 14       		.byte	0x14
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 101


 2657 0173 05       		.byte	0x5
 2658 0174 AD       		.byte	0xad
 2659 0175 16020000 		.4byte	0x216
 2660 0179 07       		.uleb128 0x7
 2661 017a 84050000 		.4byte	.LASF32
 2662 017e 05       		.byte	0x5
 2663 017f B2       		.byte	0xb2
 2664 0180 77000000 		.4byte	0x77
 2665 0184 00       		.byte	0
 2666 0185 07       		.uleb128 0x7
 2667 0186 1F0A0000 		.4byte	.LASF33
 2668 018a 05       		.byte	0x5
 2669 018b B7       		.byte	0xb7
 2670 018c C6000000 		.4byte	0xc6
 2671 0190 02       		.byte	0x2
 2672 0191 07       		.uleb128 0x7
 2673 0192 D4040000 		.4byte	.LASF34
 2674 0196 05       		.byte	0x5
 2675 0197 BC       		.byte	0xbc
 2676 0198 6B000000 		.4byte	0x6b
 2677 019c 04       		.byte	0x4
 2678 019d 07       		.uleb128 0x7
 2679 019e 95060000 		.4byte	.LASF35
 2680 01a2 05       		.byte	0x5
 2681 01a3 C1       		.byte	0xc1
 2682 01a4 6B000000 		.4byte	0x6b
 2683 01a8 05       		.byte	0x5
 2684 01a9 07       		.uleb128 0x7
 2685 01aa 22040000 		.4byte	.LASF36
 2686 01ae 05       		.byte	0x5
 2687 01af C7       		.byte	0xc7
 2688 01b0 6B000000 		.4byte	0x6b
 2689 01b4 06       		.byte	0x6
 2690 01b5 07       		.uleb128 0x7
 2691 01b6 EF050000 		.4byte	.LASF37
 2692 01ba 05       		.byte	0x5
 2693 01bb CD       		.byte	0xcd
 2694 01bc 6B000000 		.4byte	0x6b
 2695 01c0 07       		.byte	0x7
 2696 01c1 07       		.uleb128 0x7
 2697 01c2 4F040000 		.4byte	.LASF38
 2698 01c6 05       		.byte	0x5
 2699 01c7 D4       		.byte	0xd4
 2700 01c8 D2000000 		.4byte	0xd2
 2701 01cc 08       		.byte	0x8
 2702 01cd 07       		.uleb128 0x7
 2703 01ce EA090000 		.4byte	.LASF39
 2704 01d2 05       		.byte	0x5
 2705 01d3 DB       		.byte	0xdb
 2706 01d4 16020000 		.4byte	0x216
 2707 01d8 09       		.byte	0x9
 2708 01d9 07       		.uleb128 0x7
 2709 01da B0010000 		.4byte	.LASF40
 2710 01de 05       		.byte	0x5
 2711 01df E0       		.byte	0xe0
 2712 01e0 6B000000 		.4byte	0x6b
 2713 01e4 0A       		.byte	0xa
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 102


 2714 01e5 07       		.uleb128 0x7
 2715 01e6 260B0000 		.4byte	.LASF41
 2716 01ea 05       		.byte	0x5
 2717 01eb E8       		.byte	0xe8
 2718 01ec 77000000 		.4byte	0x77
 2719 01f0 0C       		.byte	0xc
 2720 01f1 07       		.uleb128 0x7
 2721 01f2 0D080000 		.4byte	.LASF42
 2722 01f6 05       		.byte	0x5
 2723 01f7 ED       		.byte	0xed
 2724 01f8 6B000000 		.4byte	0x6b
 2725 01fc 0E       		.byte	0xe
 2726 01fd 07       		.uleb128 0x7
 2727 01fe 6B090000 		.4byte	.LASF43
 2728 0202 05       		.byte	0x5
 2729 0203 F3       		.byte	0xf3
 2730 0204 77000000 		.4byte	0x77
 2731 0208 10       		.byte	0x10
 2732 0209 07       		.uleb128 0x7
 2733 020a 1B040000 		.4byte	.LASF44
 2734 020e 05       		.byte	0x5
 2735 020f F8       		.byte	0xf8
 2736 0210 77000000 		.4byte	0x77
 2737 0214 12       		.byte	0x12
 2738 0215 00       		.byte	0
 2739 0216 0B       		.uleb128 0xb
 2740 0217 6B000000 		.4byte	0x6b
 2741 021b 26020000 		.4byte	0x226
 2742 021f 0C       		.uleb128 0xc
 2743 0220 26020000 		.4byte	0x226
 2744 0224 00       		.byte	0
 2745 0225 00       		.byte	0
 2746 0226 02       		.uleb128 0x2
 2747 0227 04       		.byte	0x4
 2748 0228 07       		.byte	0x7
 2749 0229 C7090000 		.4byte	.LASF45
 2750 022d 08       		.uleb128 0x8
 2751 022e C6060000 		.4byte	.LASF46
 2752 0232 05       		.byte	0x5
 2753 0233 F9       		.byte	0xf9
 2754 0234 71010000 		.4byte	0x171
 2755 0238 06       		.uleb128 0x6
 2756 0239 14       		.byte	0x14
 2757 023a 05       		.byte	0x5
 2758 023b FE       		.byte	0xfe
 2759 023c EA020000 		.4byte	0x2ea
 2760 0240 0D       		.uleb128 0xd
 2761 0241 84050000 		.4byte	.LASF32
 2762 0245 05       		.byte	0x5
 2763 0246 0301     		.2byte	0x103
 2764 0248 77000000 		.4byte	0x77
 2765 024c 00       		.byte	0
 2766 024d 0D       		.uleb128 0xd
 2767 024e 1F0A0000 		.4byte	.LASF33
 2768 0252 05       		.byte	0x5
 2769 0253 0801     		.2byte	0x108
 2770 0255 C6000000 		.4byte	0xc6
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 103


 2771 0259 02       		.byte	0x2
 2772 025a 0D       		.uleb128 0xd
 2773 025b D4040000 		.4byte	.LASF34
 2774 025f 05       		.byte	0x5
 2775 0260 0D01     		.2byte	0x10d
 2776 0262 6B000000 		.4byte	0x6b
 2777 0266 04       		.byte	0x4
 2778 0267 0D       		.uleb128 0xd
 2779 0268 95060000 		.4byte	.LASF35
 2780 026c 05       		.byte	0x5
 2781 026d 1201     		.2byte	0x112
 2782 026f 6B000000 		.4byte	0x6b
 2783 0273 05       		.byte	0x5
 2784 0274 0D       		.uleb128 0xd
 2785 0275 22040000 		.4byte	.LASF36
 2786 0279 05       		.byte	0x5
 2787 027a 1801     		.2byte	0x118
 2788 027c 6B000000 		.4byte	0x6b
 2789 0280 06       		.byte	0x6
 2790 0281 0D       		.uleb128 0xd
 2791 0282 EF050000 		.4byte	.LASF37
 2792 0286 05       		.byte	0x5
 2793 0287 1E01     		.2byte	0x11e
 2794 0289 6B000000 		.4byte	0x6b
 2795 028d 07       		.byte	0x7
 2796 028e 0D       		.uleb128 0xd
 2797 028f 4F040000 		.4byte	.LASF38
 2798 0293 05       		.byte	0x5
 2799 0294 2501     		.2byte	0x125
 2800 0296 D2000000 		.4byte	0xd2
 2801 029a 08       		.byte	0x8
 2802 029b 0D       		.uleb128 0xd
 2803 029c EA090000 		.4byte	.LASF39
 2804 02a0 05       		.byte	0x5
 2805 02a1 2C01     		.2byte	0x12c
 2806 02a3 16020000 		.4byte	0x216
 2807 02a7 09       		.byte	0x9
 2808 02a8 0D       		.uleb128 0xd
 2809 02a9 B0010000 		.4byte	.LASF40
 2810 02ad 05       		.byte	0x5
 2811 02ae 3101     		.2byte	0x131
 2812 02b0 6B000000 		.4byte	0x6b
 2813 02b4 0A       		.byte	0xa
 2814 02b5 0D       		.uleb128 0xd
 2815 02b6 260B0000 		.4byte	.LASF41
 2816 02ba 05       		.byte	0x5
 2817 02bb 3901     		.2byte	0x139
 2818 02bd 77000000 		.4byte	0x77
 2819 02c1 0C       		.byte	0xc
 2820 02c2 0D       		.uleb128 0xd
 2821 02c3 0D080000 		.4byte	.LASF42
 2822 02c7 05       		.byte	0x5
 2823 02c8 3E01     		.2byte	0x13e
 2824 02ca 6B000000 		.4byte	0x6b
 2825 02ce 0E       		.byte	0xe
 2826 02cf 0D       		.uleb128 0xd
 2827 02d0 6B090000 		.4byte	.LASF43
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 104


 2828 02d4 05       		.byte	0x5
 2829 02d5 4401     		.2byte	0x144
 2830 02d7 77000000 		.4byte	0x77
 2831 02db 10       		.byte	0x10
 2832 02dc 0D       		.uleb128 0xd
 2833 02dd 1B040000 		.4byte	.LASF44
 2834 02e1 05       		.byte	0x5
 2835 02e2 4901     		.2byte	0x149
 2836 02e4 77000000 		.4byte	0x77
 2837 02e8 12       		.byte	0x12
 2838 02e9 00       		.byte	0
 2839 02ea 04       		.uleb128 0x4
 2840 02eb 500A0000 		.4byte	.LASF47
 2841 02ef 05       		.byte	0x5
 2842 02f0 4A01     		.2byte	0x14a
 2843 02f2 38020000 		.4byte	0x238
 2844 02f6 0E       		.uleb128 0xe
 2845 02f7 3C       		.byte	0x3c
 2846 02f8 05       		.byte	0x5
 2847 02f9 5001     		.2byte	0x150
 2848 02fb 27030000 		.4byte	0x327
 2849 02ff 0D       		.uleb128 0xd
 2850 0300 1E090000 		.4byte	.LASF48
 2851 0304 05       		.byte	0x5
 2852 0305 5501     		.2byte	0x155
 2853 0307 EA020000 		.4byte	0x2ea
 2854 030b 00       		.byte	0
 2855 030c 0D       		.uleb128 0xd
 2856 030d 26090000 		.4byte	.LASF49
 2857 0311 05       		.byte	0x5
 2858 0312 5A01     		.2byte	0x15a
 2859 0314 EA020000 		.4byte	0x2ea
 2860 0318 14       		.byte	0x14
 2861 0319 0D       		.uleb128 0xd
 2862 031a 2E090000 		.4byte	.LASF50
 2863 031e 05       		.byte	0x5
 2864 031f 5F01     		.2byte	0x15f
 2865 0321 EA020000 		.4byte	0x2ea
 2866 0325 28       		.byte	0x28
 2867 0326 00       		.byte	0
 2868 0327 04       		.uleb128 0x4
 2869 0328 83010000 		.4byte	.LASF51
 2870 032c 05       		.byte	0x5
 2871 032d 6001     		.2byte	0x160
 2872 032f F6020000 		.4byte	0x2f6
 2873 0333 0E       		.uleb128 0xe
 2874 0334 0A       		.byte	0xa
 2875 0335 05       		.byte	0x5
 2876 0336 6601     		.2byte	0x166
 2877 0338 8B030000 		.4byte	0x38b
 2878 033c 0F       		.uleb128 0xf
 2879 033d 72617700 		.ascii	"raw\000"
 2880 0341 05       		.byte	0x5
 2881 0342 6B01     		.2byte	0x16b
 2882 0344 8B030000 		.4byte	0x38b
 2883 0348 00       		.byte	0
 2884 0349 0D       		.uleb128 0xd
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 105


 2885 034a 880B0000 		.4byte	.LASF52
 2886 034e 05       		.byte	0x5
 2887 034f 7001     		.2byte	0x170
 2888 0351 8B030000 		.4byte	0x38b
 2889 0355 02       		.byte	0x2
 2890 0356 0D       		.uleb128 0xd
 2891 0357 280A0000 		.4byte	.LASF53
 2892 035b 05       		.byte	0x5
 2893 035c 7601     		.2byte	0x176
 2894 035e 16020000 		.4byte	0x216
 2895 0362 04       		.byte	0x4
 2896 0363 0D       		.uleb128 0xd
 2897 0364 D3080000 		.4byte	.LASF54
 2898 0368 05       		.byte	0x5
 2899 0369 7B01     		.2byte	0x17b
 2900 036b C6000000 		.4byte	0xc6
 2901 036f 06       		.byte	0x6
 2902 0370 0D       		.uleb128 0xd
 2903 0371 E00B0000 		.4byte	.LASF55
 2904 0375 05       		.byte	0x5
 2905 0376 8001     		.2byte	0x180
 2906 0378 9B030000 		.4byte	0x39b
 2907 037c 08       		.byte	0x8
 2908 037d 0D       		.uleb128 0xd
 2909 037e B1050000 		.4byte	.LASF56
 2910 0382 05       		.byte	0x5
 2911 0383 8501     		.2byte	0x185
 2912 0385 16020000 		.4byte	0x216
 2913 0389 09       		.byte	0x9
 2914 038a 00       		.byte	0
 2915 038b 0B       		.uleb128 0xb
 2916 038c 77000000 		.4byte	0x77
 2917 0390 9B030000 		.4byte	0x39b
 2918 0394 0C       		.uleb128 0xc
 2919 0395 26020000 		.4byte	0x226
 2920 0399 00       		.byte	0
 2921 039a 00       		.byte	0
 2922 039b 0B       		.uleb128 0xb
 2923 039c D2000000 		.4byte	0xd2
 2924 03a0 AB030000 		.4byte	0x3ab
 2925 03a4 0C       		.uleb128 0xc
 2926 03a5 26020000 		.4byte	0x226
 2927 03a9 00       		.byte	0
 2928 03aa 00       		.byte	0
 2929 03ab 04       		.uleb128 0x4
 2930 03ac CC030000 		.4byte	.LASF57
 2931 03b0 05       		.byte	0x5
 2932 03b1 8601     		.2byte	0x186
 2933 03b3 33030000 		.4byte	0x333
 2934 03b7 0E       		.uleb128 0xe
 2935 03b8 1E       		.byte	0x1e
 2936 03b9 05       		.byte	0x5
 2937 03ba 8C01     		.2byte	0x18c
 2938 03bc E8030000 		.4byte	0x3e8
 2939 03c0 0D       		.uleb128 0xd
 2940 03c1 1E090000 		.4byte	.LASF48
 2941 03c5 05       		.byte	0x5
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 106


 2942 03c6 9101     		.2byte	0x191
 2943 03c8 E8030000 		.4byte	0x3e8
 2944 03cc 00       		.byte	0
 2945 03cd 0D       		.uleb128 0xd
 2946 03ce 26090000 		.4byte	.LASF49
 2947 03d2 05       		.byte	0x5
 2948 03d3 9601     		.2byte	0x196
 2949 03d5 E8030000 		.4byte	0x3e8
 2950 03d9 0A       		.byte	0xa
 2951 03da 0D       		.uleb128 0xd
 2952 03db 2E090000 		.4byte	.LASF50
 2953 03df 05       		.byte	0x5
 2954 03e0 9B01     		.2byte	0x19b
 2955 03e2 E8030000 		.4byte	0x3e8
 2956 03e6 14       		.byte	0x14
 2957 03e7 00       		.byte	0
 2958 03e8 0B       		.uleb128 0xb
 2959 03e9 AB030000 		.4byte	0x3ab
 2960 03ed F8030000 		.4byte	0x3f8
 2961 03f1 0C       		.uleb128 0xc
 2962 03f2 26020000 		.4byte	0x226
 2963 03f6 00       		.byte	0
 2964 03f7 00       		.byte	0
 2965 03f8 04       		.uleb128 0x4
 2966 03f9 780C0000 		.4byte	.LASF58
 2967 03fd 05       		.byte	0x5
 2968 03fe 9C01     		.2byte	0x19c
 2969 0400 B7030000 		.4byte	0x3b7
 2970 0404 0E       		.uleb128 0xe
 2971 0405 84       		.byte	0x84
 2972 0406 05       		.byte	0x5
 2973 0407 A201     		.2byte	0x1a2
 2974 0409 05050000 		.4byte	0x505
 2975 040d 0D       		.uleb128 0xd
 2976 040e EF070000 		.4byte	.LASF59
 2977 0412 05       		.byte	0x5
 2978 0413 A901     		.2byte	0x1a9
 2979 0415 77000000 		.4byte	0x77
 2980 0419 00       		.byte	0
 2981 041a 0D       		.uleb128 0xd
 2982 041b 410C0000 		.4byte	.LASF60
 2983 041f 05       		.byte	0x5
 2984 0420 AE01     		.2byte	0x1ae
 2985 0422 77000000 		.4byte	0x77
 2986 0426 02       		.byte	0x2
 2987 0427 0D       		.uleb128 0xd
 2988 0428 BA000000 		.4byte	.LASF61
 2989 042c 05       		.byte	0x5
 2990 042d B301     		.2byte	0x1b3
 2991 042f 77000000 		.4byte	0x77
 2992 0433 04       		.byte	0x4
 2993 0434 0D       		.uleb128 0xd
 2994 0435 E0080000 		.4byte	.LASF62
 2995 0439 05       		.byte	0x5
 2996 043a B901     		.2byte	0x1b9
 2997 043c 77000000 		.4byte	0x77
 2998 0440 06       		.byte	0x6
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 107


 2999 0441 0D       		.uleb128 0xd
 3000 0442 A8000000 		.4byte	.LASF63
 3001 0446 05       		.byte	0x5
 3002 0447 BE01     		.2byte	0x1be
 3003 0449 77000000 		.4byte	0x77
 3004 044d 08       		.byte	0x8
 3005 044e 0D       		.uleb128 0xd
 3006 044f 8F050000 		.4byte	.LASF64
 3007 0453 05       		.byte	0x5
 3008 0454 C301     		.2byte	0x1c3
 3009 0456 C1000000 		.4byte	0xc1
 3010 045a 0C       		.byte	0xc
 3011 045b 0D       		.uleb128 0xd
 3012 045c C8080000 		.4byte	.LASF65
 3013 0460 05       		.byte	0x5
 3014 0461 C901     		.2byte	0x1c9
 3015 0463 05050000 		.4byte	0x505
 3016 0467 10       		.byte	0x10
 3017 0468 0D       		.uleb128 0xd
 3018 0469 89090000 		.4byte	.LASF66
 3019 046d 05       		.byte	0x5
 3020 046e D001     		.2byte	0x1d0
 3021 0470 05050000 		.4byte	0x505
 3022 0474 14       		.byte	0x14
 3023 0475 0D       		.uleb128 0xd
 3024 0476 03080000 		.4byte	.LASF67
 3025 047a 05       		.byte	0x5
 3026 047b E001     		.2byte	0x1e0
 3027 047d 15050000 		.4byte	0x515
 3028 0481 18       		.byte	0x18
 3029 0482 0D       		.uleb128 0xd
 3030 0483 9E060000 		.4byte	.LASF68
 3031 0487 05       		.byte	0x5
 3032 0488 E601     		.2byte	0x1e6
 3033 048a 77000000 		.4byte	0x77
 3034 048e 1C       		.byte	0x1c
 3035 048f 0D       		.uleb128 0xd
 3036 0490 C2030000 		.4byte	.LASF69
 3037 0494 05       		.byte	0x5
 3038 0495 EB01     		.2byte	0x1eb
 3039 0497 6B000000 		.4byte	0x6b
 3040 049b 1E       		.byte	0x1e
 3041 049c 0D       		.uleb128 0xd
 3042 049d 2D060000 		.4byte	.LASF70
 3043 04a1 05       		.byte	0x5
 3044 04a2 F001     		.2byte	0x1f0
 3045 04a4 27030000 		.4byte	0x327
 3046 04a8 20       		.byte	0x20
 3047 04a9 0D       		.uleb128 0xd
 3048 04aa DF020000 		.4byte	.LASF71
 3049 04ae 05       		.byte	0x5
 3050 04af F501     		.2byte	0x1f5
 3051 04b1 F8030000 		.4byte	0x3f8
 3052 04b5 5C       		.byte	0x5c
 3053 04b6 0D       		.uleb128 0xd
 3054 04b7 52000000 		.4byte	.LASF72
 3055 04bb 05       		.byte	0x5
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 108


 3056 04bc FA01     		.2byte	0x1fa
 3057 04be 6B000000 		.4byte	0x6b
 3058 04c2 7A       		.byte	0x7a
 3059 04c3 0D       		.uleb128 0xd
 3060 04c4 41030000 		.4byte	.LASF73
 3061 04c8 05       		.byte	0x5
 3062 04c9 FF01     		.2byte	0x1ff
 3063 04cb 6B000000 		.4byte	0x6b
 3064 04cf 7B       		.byte	0x7b
 3065 04d0 0D       		.uleb128 0xd
 3066 04d1 DC070000 		.4byte	.LASF74
 3067 04d5 05       		.byte	0x5
 3068 04d6 0402     		.2byte	0x204
 3069 04d8 77000000 		.4byte	0x77
 3070 04dc 7C       		.byte	0x7c
 3071 04dd 0D       		.uleb128 0xd
 3072 04de 72060000 		.4byte	.LASF75
 3073 04e2 05       		.byte	0x5
 3074 04e3 0902     		.2byte	0x209
 3075 04e5 8B030000 		.4byte	0x38b
 3076 04e9 7E       		.byte	0x7e
 3077 04ea 0D       		.uleb128 0xd
 3078 04eb C2000000 		.4byte	.LASF76
 3079 04ef 05       		.byte	0x5
 3080 04f0 0E02     		.2byte	0x20e
 3081 04f2 6B000000 		.4byte	0x6b
 3082 04f6 80       		.byte	0x80
 3083 04f7 0D       		.uleb128 0xd
 3084 04f8 AF0A0000 		.4byte	.LASF77
 3085 04fc 05       		.byte	0x5
 3086 04fd 1302     		.2byte	0x213
 3087 04ff 6B000000 		.4byte	0x6b
 3088 0503 81       		.byte	0x81
 3089 0504 00       		.byte	0
 3090 0505 0B       		.uleb128 0xb
 3091 0506 83000000 		.4byte	0x83
 3092 050a 15050000 		.4byte	0x515
 3093 050e 0C       		.uleb128 0xc
 3094 050f 26020000 		.4byte	0x226
 3095 0513 00       		.byte	0
 3096 0514 00       		.byte	0
 3097 0515 0B       		.uleb128 0xb
 3098 0516 6B000000 		.4byte	0x6b
 3099 051a 25050000 		.4byte	0x525
 3100 051e 0C       		.uleb128 0xc
 3101 051f 26020000 		.4byte	0x226
 3102 0523 02       		.byte	0x2
 3103 0524 00       		.byte	0
 3104 0525 04       		.uleb128 0x4
 3105 0526 52080000 		.4byte	.LASF78
 3106 052a 05       		.byte	0x5
 3107 052b 1402     		.2byte	0x214
 3108 052d 04040000 		.4byte	0x404
 3109 0531 0E       		.uleb128 0xe
 3110 0532 1C       		.byte	0x1c
 3111 0533 05       		.byte	0x5
 3112 0534 1A02     		.2byte	0x21a
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 109


 3113 0536 B0050000 		.4byte	0x5b0
 3114 053a 0D       		.uleb128 0xd
 3115 053b EE060000 		.4byte	.LASF79
 3116 053f 05       		.byte	0x5
 3117 0540 1F02     		.2byte	0x21f
 3118 0542 B0050000 		.4byte	0x5b0
 3119 0546 00       		.byte	0
 3120 0547 0D       		.uleb128 0xd
 3121 0548 BA050000 		.4byte	.LASF80
 3122 054c 05       		.byte	0x5
 3123 054d 2402     		.2byte	0x224
 3124 054f B0050000 		.4byte	0x5b0
 3125 0553 04       		.byte	0x4
 3126 0554 0D       		.uleb128 0xd
 3127 0555 F8030000 		.4byte	.LASF81
 3128 0559 05       		.byte	0x5
 3129 055a 2902     		.2byte	0x229
 3130 055c B0050000 		.4byte	0x5b0
 3131 0560 08       		.byte	0x8
 3132 0561 0D       		.uleb128 0xd
 3133 0562 0A090000 		.4byte	.LASF82
 3134 0566 05       		.byte	0x5
 3135 0567 2E02     		.2byte	0x22e
 3136 0569 B0050000 		.4byte	0x5b0
 3137 056d 0C       		.byte	0xc
 3138 056e 0D       		.uleb128 0xd
 3139 056f 100B0000 		.4byte	.LASF83
 3140 0573 05       		.byte	0x5
 3141 0574 3302     		.2byte	0x233
 3142 0576 83000000 		.4byte	0x83
 3143 057a 10       		.byte	0x10
 3144 057b 0D       		.uleb128 0xd
 3145 057c 2D070000 		.4byte	.LASF84
 3146 0580 05       		.byte	0x5
 3147 0581 3802     		.2byte	0x238
 3148 0583 83000000 		.4byte	0x83
 3149 0587 14       		.byte	0x14
 3150 0588 0D       		.uleb128 0xd
 3151 0589 56050000 		.4byte	.LASF85
 3152 058d 05       		.byte	0x5
 3153 058e 3D02     		.2byte	0x23d
 3154 0590 6B000000 		.4byte	0x6b
 3155 0594 18       		.byte	0x18
 3156 0595 0D       		.uleb128 0xd
 3157 0596 D0090000 		.4byte	.LASF86
 3158 059a 05       		.byte	0x5
 3159 059b 4202     		.2byte	0x242
 3160 059d 6B000000 		.4byte	0x6b
 3161 05a1 19       		.byte	0x19
 3162 05a2 0D       		.uleb128 0xd
 3163 05a3 FD010000 		.4byte	.LASF87
 3164 05a7 05       		.byte	0x5
 3165 05a8 4702     		.2byte	0x247
 3166 05aa 6B000000 		.4byte	0x6b
 3167 05ae 1A       		.byte	0x1a
 3168 05af 00       		.byte	0
 3169 05b0 10       		.uleb128 0x10
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 110


 3170 05b1 04       		.byte	0x4
 3171 05b2 B5000000 		.4byte	0xb5
 3172 05b6 04       		.uleb128 0x4
 3173 05b7 28030000 		.4byte	.LASF88
 3174 05bb 05       		.byte	0x5
 3175 05bc 4802     		.2byte	0x248
 3176 05be 31050000 		.4byte	0x531
 3177 05c2 0E       		.uleb128 0xe
 3178 05c3 20       		.byte	0x20
 3179 05c4 05       		.byte	0x5
 3180 05c5 7B02     		.2byte	0x27b
 3181 05c7 4E060000 		.4byte	0x64e
 3182 05cb 0D       		.uleb128 0xd
 3183 05cc BA0B0000 		.4byte	.LASF89
 3184 05d0 05       		.byte	0x5
 3185 05d1 8402     		.2byte	0x284
 3186 05d3 4E060000 		.4byte	0x64e
 3187 05d7 00       		.byte	0
 3188 05d8 0D       		.uleb128 0xd
 3189 05d9 BE0A0000 		.4byte	.LASF90
 3190 05dd 05       		.byte	0x5
 3191 05de 8B02     		.2byte	0x28b
 3192 05e0 55060000 		.4byte	0x655
 3193 05e4 04       		.byte	0x4
 3194 05e5 0D       		.uleb128 0xd
 3195 05e6 F8070000 		.4byte	.LASF91
 3196 05ea 05       		.byte	0x5
 3197 05eb 9102     		.2byte	0x291
 3198 05ed 57060000 		.4byte	0x657
 3199 05f1 08       		.byte	0x8
 3200 05f2 0D       		.uleb128 0xd
 3201 05f3 FE060000 		.4byte	.LASF92
 3202 05f7 05       		.byte	0x5
 3203 05f8 9702     		.2byte	0x297
 3204 05fa 55060000 		.4byte	0x655
 3205 05fe 0C       		.byte	0xc
 3206 05ff 0D       		.uleb128 0xd
 3207 0600 0F0A0000 		.4byte	.LASF93
 3208 0604 05       		.byte	0x5
 3209 0605 9E02     		.2byte	0x29e
 3210 0607 5D060000 		.4byte	0x65d
 3211 060b 10       		.byte	0x10
 3212 060c 0D       		.uleb128 0xd
 3213 060d A20A0000 		.4byte	.LASF94
 3214 0611 05       		.byte	0x5
 3215 0612 A302     		.2byte	0x2a3
 3216 0614 83000000 		.4byte	0x83
 3217 0618 14       		.byte	0x14
 3218 0619 0D       		.uleb128 0xd
 3219 061a 7A040000 		.4byte	.LASF95
 3220 061e 05       		.byte	0x5
 3221 061f AA02     		.2byte	0x2aa
 3222 0621 77000000 		.4byte	0x77
 3223 0625 18       		.byte	0x18
 3224 0626 0D       		.uleb128 0xd
 3225 0627 68030000 		.4byte	.LASF96
 3226 062b 05       		.byte	0x5
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 111


 3227 062c B102     		.2byte	0x2b1
 3228 062e 6B000000 		.4byte	0x6b
 3229 0632 1A       		.byte	0x1a
 3230 0633 0D       		.uleb128 0xd
 3231 0634 CE050000 		.4byte	.LASF97
 3232 0638 05       		.byte	0x5
 3233 0639 BB02     		.2byte	0x2bb
 3234 063b 6B000000 		.4byte	0x6b
 3235 063f 1B       		.byte	0x1b
 3236 0640 0D       		.uleb128 0xd
 3237 0641 51030000 		.4byte	.LASF98
 3238 0645 05       		.byte	0x5
 3239 0646 C302     		.2byte	0x2c3
 3240 0648 63060000 		.4byte	0x663
 3241 064c 1C       		.byte	0x1c
 3242 064d 00       		.byte	0
 3243 064e 10       		.uleb128 0x10
 3244 064f 04       		.byte	0x4
 3245 0650 54060000 		.4byte	0x654
 3246 0654 11       		.uleb128 0x11
 3247 0655 12       		.uleb128 0x12
 3248 0656 04       		.byte	0x4
 3249 0657 10       		.uleb128 0x10
 3250 0658 04       		.byte	0x4
 3251 0659 AB030000 		.4byte	0x3ab
 3252 065d 10       		.uleb128 0x10
 3253 065e 04       		.byte	0x4
 3254 065f 6B000000 		.4byte	0x6b
 3255 0663 10       		.uleb128 0x10
 3256 0664 04       		.byte	0x4
 3257 0665 3B010000 		.4byte	0x13b
 3258 0669 04       		.uleb128 0x4
 3259 066a 36040000 		.4byte	.LASF99
 3260 066e 05       		.byte	0x5
 3261 066f C402     		.2byte	0x2c4
 3262 0671 C2050000 		.4byte	0x5c2
 3263 0675 0E       		.uleb128 0xe
 3264 0676 60       		.byte	0x60
 3265 0677 05       		.byte	0x5
 3266 0678 CA02     		.2byte	0x2ca
 3267 067a 8C060000 		.4byte	0x68c
 3268 067e 0D       		.uleb128 0xd
 3269 067f 950C0000 		.4byte	.LASF100
 3270 0683 05       		.byte	0x5
 3271 0684 CF02     		.2byte	0x2cf
 3272 0686 8C060000 		.4byte	0x68c
 3273 068a 00       		.byte	0
 3274 068b 00       		.byte	0
 3275 068c 0B       		.uleb128 0xb
 3276 068d 69060000 		.4byte	0x669
 3277 0691 9C060000 		.4byte	0x69c
 3278 0695 0C       		.uleb128 0xc
 3279 0696 26020000 		.4byte	0x226
 3280 069a 02       		.byte	0x2
 3281 069b 00       		.byte	0
 3282 069c 04       		.uleb128 0x4
 3283 069d 36060000 		.4byte	.LASF101
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 112


 3284 06a1 05       		.byte	0x5
 3285 06a2 D002     		.2byte	0x2d0
 3286 06a4 75060000 		.4byte	0x675
 3287 06a8 02       		.uleb128 0x2
 3288 06a9 08       		.byte	0x8
 3289 06aa 04       		.byte	0x4
 3290 06ab B0070000 		.4byte	.LASF102
 3291 06af 06       		.uleb128 0x6
 3292 06b0 08       		.byte	0x8
 3293 06b1 06       		.byte	0x6
 3294 06b2 CF       		.byte	0xcf
 3295 06b3 D0060000 		.4byte	0x6d0
 3296 06b7 07       		.uleb128 0x7
 3297 06b8 52090000 		.4byte	.LASF103
 3298 06bc 06       		.byte	0x6
 3299 06bd D4       		.byte	0xd4
 3300 06be 83000000 		.4byte	0x83
 3301 06c2 00       		.byte	0
 3302 06c3 07       		.uleb128 0x7
 3303 06c4 0E070000 		.4byte	.LASF104
 3304 06c8 06       		.byte	0x6
 3305 06c9 D9       		.byte	0xd9
 3306 06ca 83000000 		.4byte	0x83
 3307 06ce 04       		.byte	0x4
 3308 06cf 00       		.byte	0
 3309 06d0 08       		.uleb128 0x8
 3310 06d1 300A0000 		.4byte	.LASF105
 3311 06d5 06       		.byte	0x6
 3312 06d6 DA       		.byte	0xda
 3313 06d7 AF060000 		.4byte	0x6af
 3314 06db 13       		.uleb128 0x13
 3315 06dc 80080000 		.4byte	.LASF107
 3316 06e0 01       		.byte	0x1
 3317 06e1 8D01     		.2byte	0x18d
 3318 06e3 00000000 		.4byte	.LFB1
 3319 06e7 10000000 		.4byte	.LFE1-.LFB1
 3320 06eb 01       		.uleb128 0x1
 3321 06ec 9C       		.byte	0x9c
 3322 06ed 12070000 		.4byte	0x712
 3323 06f1 14       		.uleb128 0x14
 3324 06f2 0D080000 		.4byte	.LASF42
 3325 06f6 01       		.byte	0x1
 3326 06f7 8D01     		.2byte	0x18d
 3327 06f9 83000000 		.4byte	0x83
 3328 06fd 00000000 		.4byte	.LLST0
 3329 0701 14       		.uleb128 0x14
 3330 0702 2A0C0000 		.4byte	.LASF106
 3331 0706 01       		.byte	0x1
 3332 0707 8D01     		.2byte	0x18d
 3333 0709 83000000 		.4byte	0x83
 3334 070d 21000000 		.4byte	.LLST1
 3335 0711 00       		.byte	0
 3336 0712 15       		.uleb128 0x15
 3337 0713 770A0000 		.4byte	.LASF108
 3338 0717 01       		.byte	0x1
 3339 0718 AD01     		.2byte	0x1ad
 3340 071a 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 113


 3341 071e 50000000 		.4byte	.LFE2-.LFB2
 3342 0722 01       		.uleb128 0x1
 3343 0723 9C       		.byte	0x9c
 3344 0724 37070000 		.4byte	0x737
 3345 0728 16       		.uleb128 0x16
 3346 0729 54070000 		.4byte	.LASF111
 3347 072d 01       		.byte	0x1
 3348 072e B001     		.2byte	0x1b0
 3349 0730 83000000 		.4byte	0x83
 3350 0734 01       		.uleb128 0x1
 3351 0735 50       		.byte	0x50
 3352 0736 00       		.byte	0
 3353 0737 17       		.uleb128 0x17
 3354 0738 DC000000 		.4byte	.LASF197
 3355 073c 01       		.byte	0x1
 3356 073d D601     		.2byte	0x1d6
 3357 073f 00000000 		.4byte	.LFB3
 3358 0743 1C000000 		.4byte	.LFE3-.LFB3
 3359 0747 01       		.uleb128 0x1
 3360 0748 9C       		.byte	0x9c
 3361 0749 18       		.uleb128 0x18
 3362 074a A9060000 		.4byte	.LASF121
 3363 074e 01       		.byte	0x1
 3364 074f 3B07     		.2byte	0x73b
 3365 0751 A4000000 		.4byte	0xa4
 3366 0755 00000000 		.4byte	.LFB19
 3367 0759 98000000 		.4byte	.LFE19-.LFB19
 3368 075d 01       		.uleb128 0x1
 3369 075e 9C       		.byte	0x9c
 3370 075f 14080000 		.4byte	0x814
 3371 0763 14       		.uleb128 0x14
 3372 0764 4A0C0000 		.4byte	.LASF109
 3373 0768 01       		.byte	0x1
 3374 0769 3B07     		.2byte	0x73b
 3375 076b 83000000 		.4byte	0x83
 3376 076f 41000000 		.4byte	.LLST2
 3377 0773 14       		.uleb128 0x14
 3378 0774 F1030000 		.4byte	.LASF110
 3379 0778 01       		.byte	0x1
 3380 0779 3B07     		.2byte	0x73b
 3381 077b 83000000 		.4byte	0x83
 3382 077f 83000000 		.4byte	.LLST3
 3383 0783 19       		.uleb128 0x19
 3384 0784 1D060000 		.4byte	.LASF112
 3385 0788 01       		.byte	0x1
 3386 0789 3D07     		.2byte	0x73d
 3387 078b A4000000 		.4byte	0xa4
 3388 078f A4000000 		.4byte	.LLST4
 3389 0793 19       		.uleb128 0x19
 3390 0794 A8030000 		.4byte	.LASF113
 3391 0798 01       		.byte	0x1
 3392 0799 3E07     		.2byte	0x73e
 3393 079b 83000000 		.4byte	0x83
 3394 079f D0000000 		.4byte	.LLST5
 3395 07a3 19       		.uleb128 0x19
 3396 07a4 5E010000 		.4byte	.LASF114
 3397 07a8 01       		.byte	0x1
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 114


 3398 07a9 3F07     		.2byte	0x73f
 3399 07ab 83000000 		.4byte	0x83
 3400 07af F9000000 		.4byte	.LLST6
 3401 07b3 19       		.uleb128 0x19
 3402 07b4 E2060000 		.4byte	.LASF115
 3403 07b8 01       		.byte	0x1
 3404 07b9 4007     		.2byte	0x740
 3405 07bb 83000000 		.4byte	0x83
 3406 07bf 18010000 		.4byte	.LLST7
 3407 07c3 19       		.uleb128 0x19
 3408 07c4 FA050000 		.4byte	.LASF116
 3409 07c8 01       		.byte	0x1
 3410 07c9 4107     		.2byte	0x741
 3411 07cb 83000000 		.4byte	0x83
 3412 07cf 41010000 		.4byte	.LLST8
 3413 07d3 19       		.uleb128 0x19
 3414 07d4 32070000 		.4byte	.LASF117
 3415 07d8 01       		.byte	0x1
 3416 07d9 4207     		.2byte	0x742
 3417 07db 83000000 		.4byte	0x83
 3418 07df 6A010000 		.4byte	.LLST9
 3419 07e3 19       		.uleb128 0x19
 3420 07e4 F6000000 		.4byte	.LASF118
 3421 07e8 01       		.byte	0x1
 3422 07e9 4407     		.2byte	0x744
 3423 07eb 14080000 		.4byte	0x814
 3424 07ef B6010000 		.4byte	.LLST10
 3425 07f3 19       		.uleb128 0x19
 3426 07f4 E4030000 		.4byte	.LASF119
 3427 07f8 01       		.byte	0x1
 3428 07f9 4507     		.2byte	0x745
 3429 07fb 1F080000 		.4byte	0x81f
 3430 07ff C9010000 		.4byte	.LLST11
 3431 0803 19       		.uleb128 0x19
 3432 0804 77050000 		.4byte	.LASF120
 3433 0808 01       		.byte	0x1
 3434 0809 4607     		.2byte	0x746
 3435 080b 57060000 		.4byte	0x657
 3436 080f DC010000 		.4byte	.LLST12
 3437 0813 00       		.byte	0
 3438 0814 10       		.uleb128 0x10
 3439 0815 04       		.byte	0x4
 3440 0816 1A080000 		.4byte	0x81a
 3441 081a 1A       		.uleb128 0x1a
 3442 081b 69060000 		.4byte	0x669
 3443 081f 10       		.uleb128 0x10
 3444 0820 04       		.byte	0x4
 3445 0821 2D020000 		.4byte	0x22d
 3446 0825 18       		.uleb128 0x18
 3447 0826 F2090000 		.4byte	.LASF122
 3448 082a 01       		.byte	0x1
 3449 082b 8007     		.2byte	0x780
 3450 082d 83000000 		.4byte	0x83
 3451 0831 00000000 		.4byte	.LFB20
 3452 0835 9C000000 		.4byte	.LFE20-.LFB20
 3453 0839 01       		.uleb128 0x1
 3454 083a 9C       		.byte	0x9c
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 115


 3455 083b E0080000 		.4byte	0x8e0
 3456 083f 14       		.uleb128 0x14
 3457 0840 F6000000 		.4byte	.LASF118
 3458 0844 01       		.byte	0x1
 3459 0845 8007     		.2byte	0x780
 3460 0847 14080000 		.4byte	0x814
 3461 084b EF010000 		.4byte	.LLST13
 3462 084f 19       		.uleb128 0x19
 3463 0850 B4000000 		.4byte	.LASF123
 3464 0854 01       		.byte	0x1
 3465 0855 8207     		.2byte	0x782
 3466 0857 83000000 		.4byte	0x83
 3467 085b 34020000 		.4byte	.LLST14
 3468 085f 19       		.uleb128 0x19
 3469 0860 4E050000 		.4byte	.LASF124
 3470 0864 01       		.byte	0x1
 3471 0865 8307     		.2byte	0x783
 3472 0867 83000000 		.4byte	0x83
 3473 086b 52020000 		.4byte	.LLST15
 3474 086f 19       		.uleb128 0x19
 3475 0870 D8080000 		.4byte	.LASF125
 3476 0874 01       		.byte	0x1
 3477 0875 8407     		.2byte	0x784
 3478 0877 83000000 		.4byte	0x83
 3479 087b 71020000 		.4byte	.LLST16
 3480 087f 19       		.uleb128 0x19
 3481 0880 8F050000 		.4byte	.LASF64
 3482 0884 01       		.byte	0x1
 3483 0885 8507     		.2byte	0x785
 3484 0887 83000000 		.4byte	0x83
 3485 088b BD020000 		.4byte	.LLST17
 3486 088f 19       		.uleb128 0x19
 3487 0890 E2060000 		.4byte	.LASF115
 3488 0894 01       		.byte	0x1
 3489 0895 8607     		.2byte	0x786
 3490 0897 83000000 		.4byte	0x83
 3491 089b F4020000 		.4byte	.LLST18
 3492 089f 19       		.uleb128 0x19
 3493 08a0 CA040000 		.4byte	.LASF126
 3494 08a4 01       		.byte	0x1
 3495 08a5 8707     		.2byte	0x787
 3496 08a7 83000000 		.4byte	0x83
 3497 08ab 4A030000 		.4byte	.LLST19
 3498 08af 19       		.uleb128 0x19
 3499 08b0 E4030000 		.4byte	.LASF119
 3500 08b4 01       		.byte	0x1
 3501 08b5 8907     		.2byte	0x789
 3502 08b7 1F080000 		.4byte	0x81f
 3503 08bb 9F030000 		.4byte	.LLST20
 3504 08bf 19       		.uleb128 0x19
 3505 08c0 5E010000 		.4byte	.LASF114
 3506 08c4 01       		.byte	0x1
 3507 08c5 8B07     		.2byte	0x78b
 3508 08c7 83000000 		.4byte	0x83
 3509 08cb B2030000 		.4byte	.LLST21
 3510 08cf 19       		.uleb128 0x19
 3511 08d0 77050000 		.4byte	.LASF120
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 116


 3512 08d4 01       		.byte	0x1
 3513 08d5 8C07     		.2byte	0x78c
 3514 08d7 57060000 		.4byte	0x657
 3515 08db D0030000 		.4byte	.LLST22
 3516 08df 00       		.byte	0
 3517 08e0 15       		.uleb128 0x15
 3518 08e1 67010000 		.4byte	.LASF127
 3519 08e5 01       		.byte	0x1
 3520 08e6 E207     		.2byte	0x7e2
 3521 08e8 00000000 		.4byte	.LFB21
 3522 08ec CC000000 		.4byte	.LFE21-.LFB21
 3523 08f0 01       		.uleb128 0x1
 3524 08f1 9C       		.byte	0x9c
 3525 08f2 B7090000 		.4byte	0x9b7
 3526 08f6 14       		.uleb128 0x14
 3527 08f7 F6000000 		.4byte	.LASF118
 3528 08fb 01       		.byte	0x1
 3529 08fc E207     		.2byte	0x7e2
 3530 08fe 14080000 		.4byte	0x814
 3531 0902 E3030000 		.4byte	.LLST23
 3532 0906 14       		.uleb128 0x14
 3533 0907 F1030000 		.4byte	.LASF110
 3534 090b 01       		.byte	0x1
 3535 090c E207     		.2byte	0x7e2
 3536 090e 83000000 		.4byte	0x83
 3537 0912 0F040000 		.4byte	.LLST24
 3538 0916 19       		.uleb128 0x19
 3539 0917 5E010000 		.4byte	.LASF114
 3540 091b 01       		.byte	0x1
 3541 091c E407     		.2byte	0x7e4
 3542 091e 83000000 		.4byte	0x83
 3543 0922 3B040000 		.4byte	.LLST25
 3544 0926 19       		.uleb128 0x19
 3545 0927 E2060000 		.4byte	.LASF115
 3546 092b 01       		.byte	0x1
 3547 092c E507     		.2byte	0x7e5
 3548 092e 83000000 		.4byte	0x83
 3549 0932 71040000 		.4byte	.LLST26
 3550 0936 19       		.uleb128 0x19
 3551 0937 4E050000 		.4byte	.LASF124
 3552 093b 01       		.byte	0x1
 3553 093c E607     		.2byte	0x7e6
 3554 093e 83000000 		.4byte	0x83
 3555 0942 B3040000 		.4byte	.LLST27
 3556 0946 19       		.uleb128 0x19
 3557 0947 D8080000 		.4byte	.LASF125
 3558 094b 01       		.byte	0x1
 3559 094c E707     		.2byte	0x7e7
 3560 094e 83000000 		.4byte	0x83
 3561 0952 D1040000 		.4byte	.LLST28
 3562 0956 19       		.uleb128 0x19
 3563 0957 5A040000 		.4byte	.LASF128
 3564 095b 01       		.byte	0x1
 3565 095c E807     		.2byte	0x7e8
 3566 095e 83000000 		.4byte	0x83
 3567 0962 10050000 		.4byte	.LLST29
 3568 0966 19       		.uleb128 0x19
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 117


 3569 0967 48070000 		.4byte	.LASF129
 3570 096b 01       		.byte	0x1
 3571 096c E907     		.2byte	0x7e9
 3572 096e 83000000 		.4byte	0x83
 3573 0972 2E050000 		.4byte	.LLST30
 3574 0976 19       		.uleb128 0x19
 3575 0977 2D040000 		.4byte	.LASF130
 3576 097b 01       		.byte	0x1
 3577 097c EA07     		.2byte	0x7ea
 3578 097e 83000000 		.4byte	0x83
 3579 0982 4D050000 		.4byte	.LLST31
 3580 0986 19       		.uleb128 0x19
 3581 0987 96000000 		.4byte	.LASF131
 3582 098b 01       		.byte	0x1
 3583 098c EB07     		.2byte	0x7eb
 3584 098e 83000000 		.4byte	0x83
 3585 0992 6B050000 		.4byte	.LLST32
 3586 0996 19       		.uleb128 0x19
 3587 0997 E4030000 		.4byte	.LASF119
 3588 099b 01       		.byte	0x1
 3589 099c ED07     		.2byte	0x7ed
 3590 099e 1F080000 		.4byte	0x81f
 3591 09a2 B5050000 		.4byte	.LLST33
 3592 09a6 19       		.uleb128 0x19
 3593 09a7 77050000 		.4byte	.LASF120
 3594 09ab 01       		.byte	0x1
 3595 09ac EE07     		.2byte	0x7ee
 3596 09ae 57060000 		.4byte	0x657
 3597 09b2 D3050000 		.4byte	.LLST34
 3598 09b6 00       		.byte	0
 3599 09b7 1B       		.uleb128 0x1b
 3600 09b8 D6050000 		.4byte	.LASF133
 3601 09bc 01       		.byte	0x1
 3602 09bd 0C02     		.2byte	0x20c
 3603 09bf 00000000 		.4byte	.LFB4
 3604 09c3 3C010000 		.4byte	.LFE4-.LFB4
 3605 09c7 01       		.uleb128 0x1
 3606 09c8 9C       		.byte	0x9c
 3607 09c9 5C0A0000 		.4byte	0xa5c
 3608 09cd 19       		.uleb128 0x19
 3609 09ce C70B0000 		.4byte	.LASF132
 3610 09d2 01       		.byte	0x1
 3611 09d3 0F02     		.2byte	0x20f
 3612 09d5 83000000 		.4byte	0x83
 3613 09d9 F1050000 		.4byte	.LLST35
 3614 09dd 1C       		.uleb128 0x1c
 3615 09de 14000000 		.4byte	.LVL118
 3616 09e2 D3120000 		.4byte	0x12d3
 3617 09e6 1D       		.uleb128 0x1d
 3618 09e7 24000000 		.4byte	.LVL119
 3619 09eb DE120000 		.4byte	0x12de
 3620 09ef F9090000 		.4byte	0x9f9
 3621 09f3 1E       		.uleb128 0x1e
 3622 09f4 01       		.uleb128 0x1
 3623 09f5 50       		.byte	0x50
 3624 09f6 01       		.uleb128 0x1
 3625 09f7 31       		.byte	0x31
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 118


 3626 09f8 00       		.byte	0
 3627 09f9 1D       		.uleb128 0x1d
 3628 09fa 6C000000 		.4byte	.LVL124
 3629 09fe E9120000 		.4byte	0x12e9
 3630 0a02 1E0A0000 		.4byte	0xa1e
 3631 0a06 1E       		.uleb128 0x1e
 3632 0a07 01       		.uleb128 0x1
 3633 0a08 50       		.byte	0x50
 3634 0a09 05       		.uleb128 0x5
 3635 0a0a 0C       		.byte	0xc
 3636 0a0b 00040240 		.4byte	0x40020400
 3637 0a0f 1E       		.uleb128 0x1e
 3638 0a10 01       		.uleb128 0x1
 3639 0a11 51       		.byte	0x51
 3640 0a12 03       		.uleb128 0x3
 3641 0a13 0A       		.byte	0xa
 3642 0a14 00F0     		.2byte	0xf000
 3643 0a16 1E       		.uleb128 0x1e
 3644 0a17 01       		.uleb128 0x1
 3645 0a18 52       		.byte	0x52
 3646 0a19 03       		.uleb128 0x3
 3647 0a1a 0A       		.byte	0xa
 3648 0a1b 0060     		.2byte	0x6000
 3649 0a1d 00       		.byte	0
 3650 0a1e 1D       		.uleb128 0x1d
 3651 0a1f 76000000 		.4byte	.LVL125
 3652 0a23 E9120000 		.4byte	0x12e9
 3653 0a27 400A0000 		.4byte	0xa40
 3654 0a2b 1E       		.uleb128 0x1e
 3655 0a2c 01       		.uleb128 0x1
 3656 0a2d 50       		.byte	0x50
 3657 0a2e 05       		.uleb128 0x5
 3658 0a2f 0C       		.byte	0xc
 3659 0a30 00040440 		.4byte	0x40040400
 3660 0a34 1E       		.uleb128 0x1e
 3661 0a35 01       		.uleb128 0x1
 3662 0a36 51       		.byte	0x51
 3663 0a37 01       		.uleb128 0x1
 3664 0a38 38       		.byte	0x38
 3665 0a39 1E       		.uleb128 0x1e
 3666 0a3a 01       		.uleb128 0x1
 3667 0a3b 52       		.byte	0x52
 3668 0a3c 02       		.uleb128 0x2
 3669 0a3d 74       		.byte	0x74
 3670 0a3e 00       		.sleb128 0
 3671 0a3f 00       		.byte	0
 3672 0a40 1C       		.uleb128 0x1c
 3673 0a41 A6000000 		.4byte	.LVL134
 3674 0a45 37070000 		.4byte	0x737
 3675 0a49 1C       		.uleb128 0x1c
 3676 0a4a AE000000 		.4byte	.LVL135
 3677 0a4e F4120000 		.4byte	0x12f4
 3678 0a52 1C       		.uleb128 0x1c
 3679 0a53 B2000000 		.4byte	.LVL136
 3680 0a57 12070000 		.4byte	0x712
 3681 0a5b 00       		.byte	0
 3682 0a5c 1B       		.uleb128 0x1b
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 119


 3683 0a5d 61040000 		.4byte	.LASF134
 3684 0a61 01       		.byte	0x1
 3685 0a62 1E03     		.2byte	0x31e
 3686 0a64 00000000 		.4byte	.LFB6
 3687 0a68 60000000 		.4byte	.LFE6-.LFB6
 3688 0a6c 01       		.uleb128 0x1
 3689 0a6d 9C       		.byte	0x9c
 3690 0a6e E70A0000 		.4byte	0xae7
 3691 0a72 14       		.uleb128 0x14
 3692 0a73 A8010000 		.4byte	.LASF135
 3693 0a77 01       		.byte	0x1
 3694 0a78 1E03     		.2byte	0x31e
 3695 0a7a E70A0000 		.4byte	0xae7
 3696 0a7e 41060000 		.4byte	.LLST36
 3697 0a82 19       		.uleb128 0x19
 3698 0a83 CD000000 		.4byte	.LASF136
 3699 0a87 01       		.byte	0x1
 3700 0a88 2003     		.2byte	0x320
 3701 0a8a 6B000000 		.4byte	0x6b
 3702 0a8e 6D060000 		.4byte	.LLST37
 3703 0a92 19       		.uleb128 0x19
 3704 0a93 380C0000 		.4byte	.LASF137
 3705 0a97 01       		.byte	0x1
 3706 0a98 2103     		.2byte	0x321
 3707 0a9a 83000000 		.4byte	0x83
 3708 0a9e 8B060000 		.4byte	.LLST38
 3709 0aa2 19       		.uleb128 0x19
 3710 0aa3 10090000 		.4byte	.LASF138
 3711 0aa7 01       		.byte	0x1
 3712 0aa8 2703     		.2byte	0x327
 3713 0aaa 83000000 		.4byte	0x83
 3714 0aae 9E060000 		.4byte	.LLST39
 3715 0ab2 19       		.uleb128 0x19
 3716 0ab3 00000000 		.4byte	.LASF139
 3717 0ab7 01       		.byte	0x1
 3718 0ab8 2903     		.2byte	0x329
 3719 0aba 83000000 		.4byte	0x83
 3720 0abe B1060000 		.4byte	.LLST40
 3721 0ac2 1C       		.uleb128 0x1c
 3722 0ac3 10000000 		.4byte	.LVL139
 3723 0ac7 FF120000 		.4byte	0x12ff
 3724 0acb 1C       		.uleb128 0x1c
 3725 0acc 2A000000 		.4byte	.LVL145
 3726 0ad0 0A130000 		.4byte	0x130a
 3727 0ad4 1C       		.uleb128 0x1c
 3728 0ad5 2E000000 		.4byte	.LVL146
 3729 0ad9 FF120000 		.4byte	0x12ff
 3730 0add 1C       		.uleb128 0x1c
 3731 0ade 46000000 		.4byte	.LVL151
 3732 0ae2 0A130000 		.4byte	0x130a
 3733 0ae6 00       		.byte	0
 3734 0ae7 10       		.uleb128 0x10
 3735 0ae8 04       		.byte	0x4
 3736 0ae9 ED0A0000 		.4byte	0xaed
 3737 0aed 1A       		.uleb128 0x1a
 3738 0aee 2D020000 		.4byte	0x22d
 3739 0af2 1F       		.uleb128 0x1f
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 120


 3740 0af3 29050000 		.4byte	.LASF169
 3741 0af7 01       		.byte	0x1
 3742 0af8 9803     		.2byte	0x398
 3743 0afa 83000000 		.4byte	0x83
 3744 0afe 00000000 		.4byte	.LFB7
 3745 0b02 2A000000 		.4byte	.LFE7-.LFB7
 3746 0b06 01       		.uleb128 0x1
 3747 0b07 9C       		.byte	0x9c
 3748 0b08 4D0B0000 		.4byte	0xb4d
 3749 0b0c 14       		.uleb128 0x14
 3750 0b0d 2A0C0000 		.4byte	.LASF106
 3751 0b11 01       		.byte	0x1
 3752 0b12 9803     		.2byte	0x398
 3753 0b14 83000000 		.4byte	0x83
 3754 0b18 C4060000 		.4byte	.LLST41
 3755 0b1c 14       		.uleb128 0x14
 3756 0b1d 84050000 		.4byte	.LASF32
 3757 0b21 01       		.byte	0x1
 3758 0b22 9803     		.2byte	0x398
 3759 0b24 83000000 		.4byte	0x83
 3760 0b28 F0060000 		.4byte	.LLST42
 3761 0b2c 14       		.uleb128 0x14
 3762 0b2d 95020000 		.4byte	.LASF140
 3763 0b31 01       		.byte	0x1
 3764 0b32 9803     		.2byte	0x398
 3765 0b34 83000000 		.4byte	0x83
 3766 0b38 11070000 		.4byte	.LLST43
 3767 0b3c 19       		.uleb128 0x19
 3768 0b3d 68050000 		.4byte	.LASF141
 3769 0b41 01       		.byte	0x1
 3770 0b42 9A03     		.2byte	0x39a
 3771 0b44 83000000 		.4byte	0x83
 3772 0b48 4A070000 		.4byte	.LLST44
 3773 0b4c 00       		.byte	0
 3774 0b4d 1B       		.uleb128 0x1b
 3775 0b4e BC070000 		.4byte	.LASF142
 3776 0b52 01       		.byte	0x1
 3777 0b53 EA03     		.2byte	0x3ea
 3778 0b55 00000000 		.4byte	.LFB8
 3779 0b59 3C000000 		.4byte	.LFE8-.LFB8
 3780 0b5d 01       		.uleb128 0x1
 3781 0b5e 9C       		.byte	0x9c
 3782 0b5f AD0B0000 		.4byte	0xbad
 3783 0b63 19       		.uleb128 0x19
 3784 0b64 2A0C0000 		.4byte	.LASF106
 3785 0b68 01       		.byte	0x1
 3786 0b69 EC03     		.2byte	0x3ec
 3787 0b6b 83000000 		.4byte	0x83
 3788 0b6f 68070000 		.4byte	.LLST45
 3789 0b73 19       		.uleb128 0x19
 3790 0b74 95020000 		.4byte	.LASF140
 3791 0b78 01       		.byte	0x1
 3792 0b79 ED03     		.2byte	0x3ed
 3793 0b7b 83000000 		.4byte	0x83
 3794 0b7f 7B070000 		.4byte	.LLST46
 3795 0b83 19       		.uleb128 0x19
 3796 0b84 C70B0000 		.4byte	.LASF132
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 121


 3797 0b88 01       		.byte	0x1
 3798 0b89 EE03     		.2byte	0x3ee
 3799 0b8b 83000000 		.4byte	0x83
 3800 0b8f 9B070000 		.4byte	.LLST47
 3801 0b93 19       		.uleb128 0x19
 3802 0b94 A8010000 		.4byte	.LASF135
 3803 0b98 01       		.byte	0x1
 3804 0b99 F003     		.2byte	0x3f0
 3805 0b9b E70A0000 		.4byte	0xae7
 3806 0b9f AE070000 		.4byte	.LLST48
 3807 0ba3 1C       		.uleb128 0x1c
 3808 0ba4 32000000 		.4byte	.LVL172
 3809 0ba8 DB060000 		.4byte	0x6db
 3810 0bac 00       		.byte	0
 3811 0bad 1B       		.uleb128 0x1b
 3812 0bae 19000000 		.4byte	.LASF143
 3813 0bb2 01       		.byte	0x1
 3814 0bb3 5104     		.2byte	0x451
 3815 0bb5 00000000 		.4byte	.LFB9
 3816 0bb9 1C000000 		.4byte	.LFE9-.LFB9
 3817 0bbd 01       		.uleb128 0x1
 3818 0bbe 9C       		.byte	0x9c
 3819 0bbf FD0B0000 		.4byte	0xbfd
 3820 0bc3 14       		.uleb128 0x14
 3821 0bc4 A8010000 		.4byte	.LASF135
 3822 0bc8 01       		.byte	0x1
 3823 0bc9 5104     		.2byte	0x451
 3824 0bcb E70A0000 		.4byte	0xae7
 3825 0bcf C1070000 		.4byte	.LLST49
 3826 0bd3 19       		.uleb128 0x19
 3827 0bd4 68050000 		.4byte	.LASF141
 3828 0bd8 01       		.byte	0x1
 3829 0bd9 5404     		.2byte	0x454
 3830 0bdb 83000000 		.4byte	0x83
 3831 0bdf ED070000 		.4byte	.LLST50
 3832 0be3 19       		.uleb128 0x19
 3833 0be4 2A0C0000 		.4byte	.LASF106
 3834 0be8 01       		.byte	0x1
 3835 0be9 5504     		.2byte	0x455
 3836 0beb 83000000 		.4byte	0x83
 3837 0bef 00080000 		.4byte	.LLST51
 3838 0bf3 1C       		.uleb128 0x1c
 3839 0bf4 0E000000 		.4byte	.LVL175
 3840 0bf8 F20A0000 		.4byte	0xaf2
 3841 0bfc 00       		.byte	0
 3842 0bfd 20       		.uleb128 0x20
 3843 0bfe E3010000 		.4byte	.LASF144
 3844 0c02 01       		.byte	0x1
 3845 0c03 8B0A     		.2byte	0xa8b
 3846 0c05 03       		.byte	0x3
 3847 0c06 170C0000 		.4byte	0xc17
 3848 0c0a 21       		.uleb128 0x21
 3849 0c0b 9F020000 		.4byte	.LASF146
 3850 0c0f 01       		.byte	0x1
 3851 0c10 910A     		.2byte	0xa91
 3852 0c12 83000000 		.4byte	0x83
 3853 0c16 00       		.byte	0
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 122


 3854 0c17 20       		.uleb128 0x20
 3855 0c18 8C030000 		.4byte	.LASF145
 3856 0c1c 01       		.byte	0x1
 3857 0c1d 130A     		.2byte	0xa13
 3858 0c1f 03       		.byte	0x3
 3859 0c20 310C0000 		.4byte	0xc31
 3860 0c24 21       		.uleb128 0x21
 3861 0c25 9F020000 		.4byte	.LASF146
 3862 0c29 01       		.byte	0x1
 3863 0c2a 160A     		.2byte	0xa16
 3864 0c2c 83000000 		.4byte	0x83
 3865 0c30 00       		.byte	0
 3866 0c31 1B       		.uleb128 0x1b
 3867 0c32 A00B0000 		.4byte	.LASF147
 3868 0c36 01       		.byte	0x1
 3869 0c37 2F05     		.2byte	0x52f
 3870 0c39 00000000 		.4byte	.LFB12
 3871 0c3d F8000000 		.4byte	.LFE12-.LFB12
 3872 0c41 01       		.uleb128 0x1
 3873 0c42 9C       		.byte	0x9c
 3874 0c43 C90C0000 		.4byte	0xcc9
 3875 0c47 22       		.uleb128 0x22
 3876 0c48 170C0000 		.4byte	0xc17
 3877 0c4c 0E000000 		.4byte	.LBB6
 3878 0c50 4E000000 		.4byte	.LBE6-.LBB6
 3879 0c54 01       		.byte	0x1
 3880 0c55 4C05     		.2byte	0x54c
 3881 0c57 6F0C0000 		.4byte	0xc6f
 3882 0c5b 23       		.uleb128 0x23
 3883 0c5c 0E000000 		.4byte	.LBB7
 3884 0c60 4E000000 		.4byte	.LBE7-.LBB7
 3885 0c64 24       		.uleb128 0x24
 3886 0c65 240C0000 		.4byte	0xc24
 3887 0c69 13080000 		.4byte	.LLST52
 3888 0c6d 00       		.byte	0
 3889 0c6e 00       		.byte	0
 3890 0c6f 22       		.uleb128 0x22
 3891 0c70 FD0B0000 		.4byte	0xbfd
 3892 0c74 5C000000 		.4byte	.LBB8
 3893 0c78 60000000 		.4byte	.LBE8-.LBB8
 3894 0c7c 01       		.byte	0x1
 3895 0c7d 4F05     		.2byte	0x54f
 3896 0c7f B90C0000 		.4byte	0xcb9
 3897 0c83 23       		.uleb128 0x23
 3898 0c84 5C000000 		.4byte	.LBB9
 3899 0c88 60000000 		.4byte	.LBE9-.LBB9
 3900 0c8c 24       		.uleb128 0x24
 3901 0c8d 0A0C0000 		.4byte	0xc0a
 3902 0c91 33080000 		.4byte	.LLST53
 3903 0c95 1D       		.uleb128 0x1d
 3904 0c96 6A000000 		.4byte	.LVL182
 3905 0c9a 15130000 		.4byte	0x1315
 3906 0c9e A80C0000 		.4byte	0xca8
 3907 0ca2 1E       		.uleb128 0x1e
 3908 0ca3 01       		.uleb128 0x1
 3909 0ca4 50       		.byte	0x50
 3910 0ca5 01       		.uleb128 0x1
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 123


 3911 0ca6 3A       		.byte	0x3a
 3912 0ca7 00       		.byte	0
 3913 0ca8 25       		.uleb128 0x25
 3914 0ca9 70000000 		.4byte	.LVL183
 3915 0cad 20130000 		.4byte	0x1320
 3916 0cb1 1E       		.uleb128 0x1e
 3917 0cb2 01       		.uleb128 0x1
 3918 0cb3 50       		.byte	0x50
 3919 0cb4 01       		.uleb128 0x1
 3920 0cb5 3A       		.byte	0x3a
 3921 0cb6 00       		.byte	0
 3922 0cb7 00       		.byte	0
 3923 0cb8 00       		.byte	0
 3924 0cb9 25       		.uleb128 0x25
 3925 0cba 08000000 		.4byte	.LVL177
 3926 0cbe 2B130000 		.4byte	0x132b
 3927 0cc2 1E       		.uleb128 0x1e
 3928 0cc3 01       		.uleb128 0x1
 3929 0cc4 50       		.byte	0x50
 3930 0cc5 01       		.uleb128 0x1
 3931 0cc6 3A       		.byte	0x3a
 3932 0cc7 00       		.byte	0
 3933 0cc8 00       		.byte	0
 3934 0cc9 1B       		.uleb128 0x1b
 3935 0cca 75090000 		.4byte	.LASF148
 3936 0cce 01       		.byte	0x1
 3937 0ccf A005     		.2byte	0x5a0
 3938 0cd1 00000000 		.4byte	.LFB13
 3939 0cd5 20000000 		.4byte	.LFE13-.LFB13
 3940 0cd9 01       		.uleb128 0x1
 3941 0cda 9C       		.byte	0x9c
 3942 0cdb FC0C0000 		.4byte	0xcfc
 3943 0cdf 1D       		.uleb128 0x1d
 3944 0ce0 12000000 		.4byte	.LVL188
 3945 0ce4 36130000 		.4byte	0x1336
 3946 0ce8 F20C0000 		.4byte	0xcf2
 3947 0cec 1E       		.uleb128 0x1e
 3948 0ced 01       		.uleb128 0x1
 3949 0cee 50       		.byte	0x50
 3950 0cef 01       		.uleb128 0x1
 3951 0cf0 3A       		.byte	0x3a
 3952 0cf1 00       		.byte	0
 3953 0cf2 1C       		.uleb128 0x1c
 3954 0cf3 16000000 		.4byte	.LVL189
 3955 0cf7 310C0000 		.4byte	0xc31
 3956 0cfb 00       		.byte	0
 3957 0cfc 1B       		.uleb128 0x1b
 3958 0cfd 94090000 		.4byte	.LASF149
 3959 0d01 01       		.byte	0x1
 3960 0d02 C506     		.2byte	0x6c5
 3961 0d04 00000000 		.4byte	.LFB17
 3962 0d08 34000000 		.4byte	.LFE17-.LFB17
 3963 0d0c 01       		.uleb128 0x1
 3964 0d0d 9C       		.byte	0x9c
 3965 0d0e 750D0000 		.4byte	0xd75
 3966 0d12 14       		.uleb128 0x14
 3967 0d13 0E000000 		.4byte	.LASF150
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 124


 3968 0d17 01       		.byte	0x1
 3969 0d18 C506     		.2byte	0x6c5
 3970 0d1a 750D0000 		.4byte	0xd75
 3971 0d1e 53080000 		.4byte	.LLST54
 3972 0d22 19       		.uleb128 0x19
 3973 0d23 B1030000 		.4byte	.LASF151
 3974 0d27 01       		.byte	0x1
 3975 0d28 C706     		.2byte	0x6c7
 3976 0d2a 83000000 		.4byte	0x83
 3977 0d2e 7F080000 		.4byte	.LLST55
 3978 0d32 19       		.uleb128 0x19
 3979 0d33 CD000000 		.4byte	.LASF136
 3980 0d37 01       		.byte	0x1
 3981 0d38 C806     		.2byte	0x6c8
 3982 0d3a 6B000000 		.4byte	0x6b
 3983 0d3e A8080000 		.4byte	.LLST56
 3984 0d42 19       		.uleb128 0x19
 3985 0d43 51010000 		.4byte	.LASF152
 3986 0d47 01       		.byte	0x1
 3987 0d48 C906     		.2byte	0x6c9
 3988 0d4a 83000000 		.4byte	0x83
 3989 0d4e BB080000 		.4byte	.LLST57
 3990 0d52 19       		.uleb128 0x19
 3991 0d53 C7020000 		.4byte	.LASF153
 3992 0d57 01       		.byte	0x1
 3993 0d58 CA06     		.2byte	0x6ca
 3994 0d5a 83000000 		.4byte	0x83
 3995 0d5e CE080000 		.4byte	.LLST58
 3996 0d62 1C       		.uleb128 0x1c
 3997 0d63 0C000000 		.4byte	.LVL193
 3998 0d67 FF120000 		.4byte	0x12ff
 3999 0d6b 1C       		.uleb128 0x1c
 4000 0d6c 32000000 		.4byte	.LVL199
 4001 0d70 0A130000 		.4byte	0x130a
 4002 0d74 00       		.byte	0
 4003 0d75 10       		.uleb128 0x10
 4004 0d76 04       		.byte	0x4
 4005 0d77 7B0D0000 		.4byte	0xd7b
 4006 0d7b 1A       		.uleb128 0x1a
 4007 0d7c B6050000 		.4byte	0x5b6
 4008 0d80 1B       		.uleb128 0x1b
 4009 0d81 E20A0000 		.4byte	.LASF154
 4010 0d85 01       		.byte	0x1
 4011 0d86 E305     		.2byte	0x5e3
 4012 0d88 00000000 		.4byte	.LFB14
 4013 0d8c 94000000 		.4byte	.LFE14-.LFB14
 4014 0d90 01       		.uleb128 0x1
 4015 0d91 9C       		.byte	0x9c
 4016 0d92 DF0D0000 		.4byte	0xddf
 4017 0d96 19       		.uleb128 0x19
 4018 0d97 A8010000 		.4byte	.LASF135
 4019 0d9b 01       		.byte	0x1
 4020 0d9c E505     		.2byte	0x5e5
 4021 0d9e E70A0000 		.4byte	0xae7
 4022 0da2 E1080000 		.4byte	.LLST59
 4023 0da6 1C       		.uleb128 0x1c
 4024 0da7 20000000 		.4byte	.LVL203
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 125


 4025 0dab D3120000 		.4byte	0x12d3
 4026 0daf 1D       		.uleb128 0x1d
 4027 0db0 52000000 		.4byte	.LVL204
 4028 0db4 5C0A0000 		.4byte	0xa5c
 4029 0db8 C30D0000 		.4byte	0xdc3
 4030 0dbc 1E       		.uleb128 0x1e
 4031 0dbd 01       		.uleb128 0x1
 4032 0dbe 50       		.byte	0x50
 4033 0dbf 02       		.uleb128 0x2
 4034 0dc0 77       		.byte	0x77
 4035 0dc1 00       		.sleb128 0
 4036 0dc2 00       		.byte	0
 4037 0dc3 1C       		.uleb128 0x1c
 4038 0dc4 6C000000 		.4byte	.LVL205
 4039 0dc8 FC0C0000 		.4byte	0xcfc
 4040 0dcc 1C       		.uleb128 0x1c
 4041 0dcd 72000000 		.4byte	.LVL206
 4042 0dd1 41130000 		.4byte	0x1341
 4043 0dd5 1C       		.uleb128 0x1c
 4044 0dd6 76000000 		.4byte	.LVL207
 4045 0dda C90C0000 		.4byte	0xcc9
 4046 0dde 00       		.byte	0
 4047 0ddf 1B       		.uleb128 0x1b
 4048 0de0 BE010000 		.4byte	.LASF155
 4049 0de4 01       		.byte	0x1
 4050 0de5 3606     		.2byte	0x636
 4051 0de7 00000000 		.4byte	.LFB15
 4052 0deb 24000000 		.4byte	.LFE15-.LFB15
 4053 0def 01       		.uleb128 0x1
 4054 0df0 9C       		.byte	0x9c
 4055 0df1 1F0E0000 		.4byte	0xe1f
 4056 0df5 14       		.uleb128 0x14
 4057 0df6 4A0C0000 		.4byte	.LASF109
 4058 0dfa 01       		.byte	0x1
 4059 0dfb 3606     		.2byte	0x636
 4060 0dfd 83000000 		.4byte	0x83
 4061 0e01 F4080000 		.4byte	.LLST60
 4062 0e05 14       		.uleb128 0x14
 4063 0e06 9F010000 		.4byte	.LASF156
 4064 0e0a 01       		.byte	0x1
 4065 0e0b 3606     		.2byte	0x636
 4066 0e0d 83000000 		.4byte	0x83
 4067 0e11 15090000 		.4byte	.LLST61
 4068 0e15 1C       		.uleb128 0x1c
 4069 0e16 18000000 		.4byte	.LVL212
 4070 0e1a FC0C0000 		.4byte	0xcfc
 4071 0e1e 00       		.byte	0
 4072 0e1f 1B       		.uleb128 0x1b
 4073 0e20 66080000 		.4byte	.LASF157
 4074 0e24 01       		.byte	0x1
 4075 0e25 F906     		.2byte	0x6f9
 4076 0e27 00000000 		.4byte	.LFB18
 4077 0e2b 64000000 		.4byte	.LFE18-.LFB18
 4078 0e2f 01       		.uleb128 0x1
 4079 0e30 9C       		.byte	0x9c
 4080 0e31 A80E0000 		.4byte	0xea8
 4081 0e35 14       		.uleb128 0x14
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 126


 4082 0e36 0E000000 		.4byte	.LASF150
 4083 0e3a 01       		.byte	0x1
 4084 0e3b F906     		.2byte	0x6f9
 4085 0e3d 750D0000 		.4byte	0xd75
 4086 0e41 36090000 		.4byte	.LLST62
 4087 0e45 19       		.uleb128 0x19
 4088 0e46 CD000000 		.4byte	.LASF136
 4089 0e4a 01       		.byte	0x1
 4090 0e4b FB06     		.2byte	0x6fb
 4091 0e4d 6B000000 		.4byte	0x6b
 4092 0e51 62090000 		.4byte	.LLST63
 4093 0e55 19       		.uleb128 0x19
 4094 0e56 C7020000 		.4byte	.LASF153
 4095 0e5a 01       		.byte	0x1
 4096 0e5b FC06     		.2byte	0x6fc
 4097 0e5d 83000000 		.4byte	0x83
 4098 0e61 75090000 		.4byte	.LLST64
 4099 0e65 19       		.uleb128 0x19
 4100 0e66 51010000 		.4byte	.LASF152
 4101 0e6a 01       		.byte	0x1
 4102 0e6b FD06     		.2byte	0x6fd
 4103 0e6d 83000000 		.4byte	0x83
 4104 0e71 88090000 		.4byte	.LLST65
 4105 0e75 19       		.uleb128 0x19
 4106 0e76 530C0000 		.4byte	.LASF158
 4107 0e7a 01       		.byte	0x1
 4108 0e7b FE06     		.2byte	0x6fe
 4109 0e7d 83000000 		.4byte	0x83
 4110 0e81 9B090000 		.4byte	.LLST66
 4111 0e85 19       		.uleb128 0x19
 4112 0e86 41080000 		.4byte	.LASF159
 4113 0e8a 01       		.byte	0x1
 4114 0e8b FF06     		.2byte	0x6ff
 4115 0e8d 83000000 		.4byte	0x83
 4116 0e91 AE090000 		.4byte	.LLST67
 4117 0e95 1C       		.uleb128 0x1c
 4118 0e96 0C000000 		.4byte	.LVL216
 4119 0e9a FF120000 		.4byte	0x12ff
 4120 0e9e 1C       		.uleb128 0x1c
 4121 0e9f 5C000000 		.4byte	.LVL228
 4122 0ea3 0A130000 		.4byte	0x130a
 4123 0ea7 00       		.byte	0
 4124 0ea8 1B       		.uleb128 0x1b
 4125 0ea9 1A080000 		.4byte	.LASF160
 4126 0ead 01       		.byte	0x1
 4127 0eae E102     		.2byte	0x2e1
 4128 0eb0 00000000 		.4byte	.LFB5
 4129 0eb4 24000000 		.4byte	.LFE5-.LFB5
 4130 0eb8 01       		.uleb128 0x1
 4131 0eb9 9C       		.byte	0x9c
 4132 0eba C80E0000 		.4byte	0xec8
 4133 0ebe 1C       		.uleb128 0x1c
 4134 0ebf 12000000 		.4byte	.LVL231
 4135 0ec3 1F0E0000 		.4byte	0xe1f
 4136 0ec7 00       		.byte	0
 4137 0ec8 1B       		.uleb128 0x1b
 4138 0ec9 AF020000 		.4byte	.LASF161
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 127


 4139 0ecd 01       		.byte	0x1
 4140 0ece 9B04     		.2byte	0x49b
 4141 0ed0 00000000 		.4byte	.LFB10
 4142 0ed4 54000000 		.4byte	.LFE10-.LFB10
 4143 0ed8 01       		.uleb128 0x1
 4144 0ed9 9C       		.byte	0x9c
 4145 0eda 380F0000 		.4byte	0xf38
 4146 0ede 14       		.uleb128 0x14
 4147 0edf 4A0C0000 		.4byte	.LASF109
 4148 0ee3 01       		.byte	0x1
 4149 0ee4 9B04     		.2byte	0x49b
 4150 0ee6 83000000 		.4byte	0x83
 4151 0eea CC090000 		.4byte	.LLST68
 4152 0eee 19       		.uleb128 0x19
 4153 0eef A8010000 		.4byte	.LASF135
 4154 0ef3 01       		.byte	0x1
 4155 0ef4 9D04     		.2byte	0x49d
 4156 0ef6 E70A0000 		.4byte	0xae7
 4157 0efa ED090000 		.4byte	.LLST69
 4158 0efe 1D       		.uleb128 0x1d
 4159 0eff 16000000 		.4byte	.LVL235
 4160 0f03 4C130000 		.4byte	0x134c
 4161 0f07 110F0000 		.4byte	0xf11
 4162 0f0b 1E       		.uleb128 0x1e
 4163 0f0c 01       		.uleb128 0x1
 4164 0f0d 50       		.byte	0x50
 4165 0f0e 01       		.uleb128 0x1
 4166 0f0f 31       		.byte	0x31
 4167 0f10 00       		.byte	0
 4168 0f11 1C       		.uleb128 0x1c
 4169 0f12 1A000000 		.4byte	.LVL236
 4170 0f16 A80E0000 		.4byte	0xea8
 4171 0f1a 1D       		.uleb128 0x1d
 4172 0f1b 3C000000 		.4byte	.LVL237
 4173 0f1f AD0B0000 		.4byte	0xbad
 4174 0f23 2E0F0000 		.4byte	0xf2e
 4175 0f27 1E       		.uleb128 0x1e
 4176 0f28 01       		.uleb128 0x1
 4177 0f29 50       		.byte	0x50
 4178 0f2a 02       		.uleb128 0x2
 4179 0f2b 75       		.byte	0x75
 4180 0f2c 00       		.sleb128 0
 4181 0f2d 00       		.byte	0
 4182 0f2e 1C       		.uleb128 0x1c
 4183 0f2f 40000000 		.4byte	.LVL238
 4184 0f33 4D0B0000 		.4byte	0xb4d
 4185 0f37 00       		.byte	0
 4186 0f38 1B       		.uleb128 0x1b
 4187 0f39 71030000 		.4byte	.LASF162
 4188 0f3d 01       		.byte	0x1
 4189 0f3e F104     		.2byte	0x4f1
 4190 0f40 00000000 		.4byte	.LFB11
 4191 0f44 6C000000 		.4byte	.LFE11-.LFB11
 4192 0f48 01       		.uleb128 0x1
 4193 0f49 9C       		.byte	0x9c
 4194 0f4a BA0F0000 		.4byte	0xfba
 4195 0f4e 14       		.uleb128 0x14
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 128


 4196 0f4f 4A0C0000 		.4byte	.LASF109
 4197 0f53 01       		.byte	0x1
 4198 0f54 F104     		.2byte	0x4f1
 4199 0f56 83000000 		.4byte	0x83
 4200 0f5a 140A0000 		.4byte	.LLST70
 4201 0f5e 14       		.uleb128 0x14
 4202 0f5f 9F010000 		.4byte	.LASF156
 4203 0f63 01       		.byte	0x1
 4204 0f64 F104     		.2byte	0x4f1
 4205 0f66 83000000 		.4byte	0x83
 4206 0f6a 350A0000 		.4byte	.LLST71
 4207 0f6e 19       		.uleb128 0x19
 4208 0f6f A8010000 		.4byte	.LASF135
 4209 0f73 01       		.byte	0x1
 4210 0f74 F304     		.2byte	0x4f3
 4211 0f76 E70A0000 		.4byte	0xae7
 4212 0f7a 560A0000 		.4byte	.LLST72
 4213 0f7e 1D       		.uleb128 0x1d
 4214 0f7f 26000000 		.4byte	.LVL244
 4215 0f83 C80E0000 		.4byte	0xec8
 4216 0f87 930F0000 		.4byte	0xf93
 4217 0f8b 1E       		.uleb128 0x1e
 4218 0f8c 01       		.uleb128 0x1
 4219 0f8d 50       		.byte	0x50
 4220 0f8e 03       		.uleb128 0x3
 4221 0f8f F3       		.byte	0xf3
 4222 0f90 01       		.uleb128 0x1
 4223 0f91 50       		.byte	0x50
 4224 0f92 00       		.byte	0
 4225 0f93 1D       		.uleb128 0x1d
 4226 0f94 2C000000 		.4byte	.LVL245
 4227 0f98 5C0A0000 		.4byte	0xa5c
 4228 0f9c A70F0000 		.4byte	0xfa7
 4229 0fa0 1E       		.uleb128 0x1e
 4230 0fa1 01       		.uleb128 0x1
 4231 0fa2 50       		.byte	0x50
 4232 0fa3 02       		.uleb128 0x2
 4233 0fa4 75       		.byte	0x75
 4234 0fa5 00       		.sleb128 0
 4235 0fa6 00       		.byte	0
 4236 0fa7 1C       		.uleb128 0x1c
 4237 0fa8 44000000 		.4byte	.LVL246
 4238 0fac FC0C0000 		.4byte	0xcfc
 4239 0fb0 1C       		.uleb128 0x1c
 4240 0fb1 50000000 		.4byte	.LVL247
 4241 0fb5 41130000 		.4byte	0x1341
 4242 0fb9 00       		.byte	0
 4243 0fba 15       		.uleb128 0x15
 4244 0fbb 05060000 		.4byte	.LASF163
 4245 0fbf 01       		.byte	0x1
 4246 0fc0 7E08     		.2byte	0x87e
 4247 0fc2 00000000 		.4byte	.LFB22
 4248 0fc6 60010000 		.4byte	.LFE22-.LFB22
 4249 0fca 01       		.uleb128 0x1
 4250 0fcb 9C       		.byte	0x9c
 4251 0fcc FD100000 		.4byte	0x10fd
 4252 0fd0 14       		.uleb128 0x14
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 129


 4253 0fd1 4A0C0000 		.4byte	.LASF109
 4254 0fd5 01       		.byte	0x1
 4255 0fd6 7E08     		.2byte	0x87e
 4256 0fd8 83000000 		.4byte	0x83
 4257 0fdc 690A0000 		.4byte	.LLST73
 4258 0fe0 14       		.uleb128 0x14
 4259 0fe1 F1030000 		.4byte	.LASF110
 4260 0fe5 01       		.byte	0x1
 4261 0fe6 7E08     		.2byte	0x87e
 4262 0fe8 83000000 		.4byte	0x83
 4263 0fec 880A0000 		.4byte	.LLST74
 4264 0ff0 19       		.uleb128 0x19
 4265 0ff1 5E010000 		.4byte	.LASF114
 4266 0ff5 01       		.byte	0x1
 4267 0ff6 8008     		.2byte	0x880
 4268 0ff8 83000000 		.4byte	0x83
 4269 0ffc A90A0000 		.4byte	.LLST75
 4270 1000 19       		.uleb128 0x19
 4271 1001 E2060000 		.4byte	.LASF115
 4272 1005 01       		.byte	0x1
 4273 1006 8108     		.2byte	0x881
 4274 1008 83000000 		.4byte	0x83
 4275 100c E00A0000 		.4byte	.LLST76
 4276 1010 19       		.uleb128 0x19
 4277 1011 60030000 		.4byte	.LASF164
 4278 1015 01       		.byte	0x1
 4279 1016 8208     		.2byte	0x882
 4280 1018 83000000 		.4byte	0x83
 4281 101c C70B0000 		.4byte	.LLST77
 4282 1020 19       		.uleb128 0x19
 4283 1021 E9080000 		.4byte	.LASF165
 4284 1025 01       		.byte	0x1
 4285 1026 8308     		.2byte	0x883
 4286 1028 83000000 		.4byte	0x83
 4287 102c E70B0000 		.4byte	.LLST78
 4288 1030 19       		.uleb128 0x19
 4289 1031 9F020000 		.4byte	.LASF146
 4290 1035 01       		.byte	0x1
 4291 1036 8408     		.2byte	0x884
 4292 1038 83000000 		.4byte	0x83
 4293 103c 050C0000 		.4byte	.LLST79
 4294 1040 19       		.uleb128 0x19
 4295 1041 1F0C0000 		.4byte	.LASF166
 4296 1045 01       		.byte	0x1
 4297 1046 8608     		.2byte	0x886
 4298 1048 5D060000 		.4byte	0x65d
 4299 104c 5B0C0000 		.4byte	.LLST80
 4300 1050 19       		.uleb128 0x19
 4301 1051 3D070000 		.4byte	.LASF167
 4302 1055 01       		.byte	0x1
 4303 1056 8708     		.2byte	0x887
 4304 1058 5D060000 		.4byte	0x65d
 4305 105c 7B0C0000 		.4byte	.LLST81
 4306 1060 16       		.uleb128 0x16
 4307 1061 4E050000 		.4byte	.LASF124
 4308 1065 01       		.byte	0x1
 4309 1066 8908     		.2byte	0x889
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 130


 4310 1068 16020000 		.4byte	0x216
 4311 106c 02       		.uleb128 0x2
 4312 106d 91       		.byte	0x91
 4313 106e 64       		.sleb128 -28
 4314 106f 19       		.uleb128 0x19
 4315 1070 77050000 		.4byte	.LASF120
 4316 1074 01       		.byte	0x1
 4317 1075 9008     		.2byte	0x890
 4318 1077 57060000 		.4byte	0x657
 4319 107b D80C0000 		.4byte	.LLST82
 4320 107f 19       		.uleb128 0x19
 4321 1080 F6000000 		.4byte	.LASF118
 4322 1084 01       		.byte	0x1
 4323 1085 9108     		.2byte	0x891
 4324 1087 14080000 		.4byte	0x814
 4325 108b EB0C0000 		.4byte	.LLST83
 4326 108f 19       		.uleb128 0x19
 4327 1090 E4030000 		.4byte	.LASF119
 4328 1094 01       		.byte	0x1
 4329 1095 9208     		.2byte	0x892
 4330 1097 1F080000 		.4byte	0x81f
 4331 109b FE0C0000 		.4byte	.LLST84
 4332 109f 1D       		.uleb128 0x1d
 4333 10a0 7A000000 		.4byte	.LVL271
 4334 10a4 380F0000 		.4byte	0xf38
 4335 10a8 BB100000 		.4byte	0x10bb
 4336 10ac 1E       		.uleb128 0x1e
 4337 10ad 01       		.uleb128 0x1
 4338 10ae 50       		.byte	0x50
 4339 10af 03       		.uleb128 0x3
 4340 10b0 91       		.byte	0x91
 4341 10b1 5C       		.sleb128 -36
 4342 10b2 06       		.byte	0x6
 4343 10b3 1E       		.uleb128 0x1e
 4344 10b4 01       		.uleb128 0x1
 4345 10b5 51       		.byte	0x51
 4346 10b6 03       		.uleb128 0x3
 4347 10b7 7D       		.byte	0x7d
 4348 10b8 00       		.sleb128 0
 4349 10b9 06       		.byte	0x6
 4350 10ba 00       		.byte	0
 4351 10bb 1D       		.uleb128 0x1d
 4352 10bc 80000000 		.4byte	.LVL272
 4353 10c0 DE120000 		.4byte	0x12de
 4354 10c4 CE100000 		.4byte	0x10ce
 4355 10c8 1E       		.uleb128 0x1e
 4356 10c9 01       		.uleb128 0x1
 4357 10ca 50       		.byte	0x50
 4358 10cb 01       		.uleb128 0x1
 4359 10cc 31       		.byte	0x31
 4360 10cd 00       		.byte	0
 4361 10ce 1C       		.uleb128 0x1c
 4362 10cf 84000000 		.4byte	.LVL273
 4363 10d3 C90C0000 		.4byte	0xcc9
 4364 10d7 1D       		.uleb128 0x1d
 4365 10d8 08010000 		.4byte	.LVL289
 4366 10dc 380F0000 		.4byte	0xf38
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 131


 4367 10e0 F3100000 		.4byte	0x10f3
 4368 10e4 1E       		.uleb128 0x1e
 4369 10e5 01       		.uleb128 0x1
 4370 10e6 50       		.byte	0x50
 4371 10e7 03       		.uleb128 0x3
 4372 10e8 91       		.byte	0x91
 4373 10e9 5C       		.sleb128 -36
 4374 10ea 06       		.byte	0x6
 4375 10eb 1E       		.uleb128 0x1e
 4376 10ec 01       		.uleb128 0x1
 4377 10ed 51       		.byte	0x51
 4378 10ee 03       		.uleb128 0x3
 4379 10ef 7D       		.byte	0x7d
 4380 10f0 00       		.sleb128 0
 4381 10f1 06       		.byte	0x6
 4382 10f2 00       		.byte	0
 4383 10f3 1C       		.uleb128 0x1c
 4384 10f4 0C010000 		.4byte	.LVL290
 4385 10f8 C90C0000 		.4byte	0xcc9
 4386 10fc 00       		.byte	0
 4387 10fd 1B       		.uleb128 0x1b
 4388 10fe 86040000 		.4byte	.LASF168
 4389 1102 01       		.byte	0x1
 4390 1103 7C06     		.2byte	0x67c
 4391 1105 00000000 		.4byte	.LFB16
 4392 1109 24000000 		.4byte	.LFE16-.LFB16
 4393 110d 01       		.uleb128 0x1
 4394 110e 9C       		.byte	0x9c
 4395 110f 3D110000 		.4byte	0x113d
 4396 1113 14       		.uleb128 0x14
 4397 1114 4A0C0000 		.4byte	.LASF109
 4398 1118 01       		.byte	0x1
 4399 1119 7C06     		.2byte	0x67c
 4400 111b 83000000 		.4byte	0x83
 4401 111f 1C0D0000 		.4byte	.LLST85
 4402 1123 14       		.uleb128 0x14
 4403 1124 9F010000 		.4byte	.LASF156
 4404 1128 01       		.byte	0x1
 4405 1129 7C06     		.2byte	0x67c
 4406 112b 83000000 		.4byte	0x83
 4407 112f 3D0D0000 		.4byte	.LLST86
 4408 1133 1C       		.uleb128 0x1c
 4409 1134 18000000 		.4byte	.LVL307
 4410 1138 1F0E0000 		.4byte	0xe1f
 4411 113c 00       		.byte	0
 4412 113d 26       		.uleb128 0x26
 4413 113e 36090000 		.4byte	.LASF170
 4414 1142 01       		.byte	0x1
 4415 1143 7009     		.2byte	0x970
 4416 1145 A4000000 		.4byte	0xa4
 4417 1149 00000000 		.4byte	.LFB23
 4418 114d 74000000 		.4byte	.LFE23-.LFB23
 4419 1151 01       		.uleb128 0x1
 4420 1152 9C       		.byte	0x9c
 4421 1153 33120000 		.4byte	0x1233
 4422 1157 14       		.uleb128 0x14
 4423 1158 4A0C0000 		.4byte	.LASF109
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 132


 4424 115c 01       		.byte	0x1
 4425 115d 7009     		.2byte	0x970
 4426 115f 83000000 		.4byte	0x83
 4427 1163 5E0D0000 		.4byte	.LLST87
 4428 1167 14       		.uleb128 0x14
 4429 1168 F1030000 		.4byte	.LASF110
 4430 116c 01       		.byte	0x1
 4431 116d 7009     		.2byte	0x970
 4432 116f 83000000 		.4byte	0x83
 4433 1173 A00D0000 		.4byte	.LLST88
 4434 1177 19       		.uleb128 0x19
 4435 1178 1D060000 		.4byte	.LASF112
 4436 117c 01       		.byte	0x1
 4437 117d 7209     		.2byte	0x972
 4438 117f A4000000 		.4byte	0xa4
 4439 1183 E20D0000 		.4byte	.LLST89
 4440 1187 19       		.uleb128 0x19
 4441 1188 9F020000 		.4byte	.LASF146
 4442 118c 01       		.byte	0x1
 4443 118d 7309     		.2byte	0x973
 4444 118f 83000000 		.4byte	0x83
 4445 1193 180E0000 		.4byte	.LLST90
 4446 1197 19       		.uleb128 0x19
 4447 1198 2D0B0000 		.4byte	.LASF171
 4448 119c 01       		.byte	0x1
 4449 119d 7609     		.2byte	0x976
 4450 119f 83000000 		.4byte	0x83
 4451 11a3 460E0000 		.4byte	.LLST91
 4452 11a7 19       		.uleb128 0x19
 4453 11a8 F6000000 		.4byte	.LASF118
 4454 11ac 01       		.byte	0x1
 4455 11ad 7909     		.2byte	0x979
 4456 11af 14080000 		.4byte	0x814
 4457 11b3 590E0000 		.4byte	.LLST92
 4458 11b7 1D       		.uleb128 0x1d
 4459 11b8 22000000 		.4byte	.LVL312
 4460 11bc BA0F0000 		.4byte	0xfba
 4461 11c0 D1110000 		.4byte	0x11d1
 4462 11c4 1E       		.uleb128 0x1e
 4463 11c5 01       		.uleb128 0x1
 4464 11c6 50       		.byte	0x50
 4465 11c7 02       		.uleb128 0x2
 4466 11c8 74       		.byte	0x74
 4467 11c9 00       		.sleb128 0
 4468 11ca 1E       		.uleb128 0x1e
 4469 11cb 01       		.uleb128 0x1
 4470 11cc 51       		.byte	0x51
 4471 11cd 02       		.uleb128 0x2
 4472 11ce 75       		.byte	0x75
 4473 11cf 00       		.sleb128 0
 4474 11d0 00       		.byte	0
 4475 11d1 1D       		.uleb128 0x1d
 4476 11d2 28000000 		.4byte	.LVL313
 4477 11d6 25080000 		.4byte	0x825
 4478 11da E5110000 		.4byte	0x11e5
 4479 11de 1E       		.uleb128 0x1e
 4480 11df 01       		.uleb128 0x1
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 133


 4481 11e0 50       		.byte	0x50
 4482 11e1 02       		.uleb128 0x2
 4483 11e2 76       		.byte	0x76
 4484 11e3 00       		.sleb128 0
 4485 11e4 00       		.byte	0
 4486 11e5 1D       		.uleb128 0x1d
 4487 11e6 34000000 		.4byte	.LVL315
 4488 11ea E0080000 		.4byte	0x8e0
 4489 11ee FF110000 		.4byte	0x11ff
 4490 11f2 1E       		.uleb128 0x1e
 4491 11f3 01       		.uleb128 0x1
 4492 11f4 50       		.byte	0x50
 4493 11f5 02       		.uleb128 0x2
 4494 11f6 76       		.byte	0x76
 4495 11f7 00       		.sleb128 0
 4496 11f8 1E       		.uleb128 0x1e
 4497 11f9 01       		.uleb128 0x1
 4498 11fa 51       		.byte	0x51
 4499 11fb 02       		.uleb128 0x2
 4500 11fc 75       		.byte	0x75
 4501 11fd 00       		.sleb128 0
 4502 11fe 00       		.byte	0
 4503 11ff 1D       		.uleb128 0x1d
 4504 1200 3A000000 		.4byte	.LVL316
 4505 1204 C80E0000 		.4byte	0xec8
 4506 1208 13120000 		.4byte	0x1213
 4507 120c 1E       		.uleb128 0x1e
 4508 120d 01       		.uleb128 0x1
 4509 120e 50       		.byte	0x50
 4510 120f 02       		.uleb128 0x2
 4511 1210 74       		.byte	0x74
 4512 1211 00       		.sleb128 0
 4513 1212 00       		.byte	0
 4514 1213 1C       		.uleb128 0x1c
 4515 1214 3E000000 		.4byte	.LVL317
 4516 1218 800D0000 		.4byte	0xd80
 4517 121c 25       		.uleb128 0x25
 4518 121d 5C000000 		.4byte	.LVL320
 4519 1221 49070000 		.4byte	0x749
 4520 1225 1E       		.uleb128 0x1e
 4521 1226 01       		.uleb128 0x1
 4522 1227 50       		.byte	0x50
 4523 1228 02       		.uleb128 0x2
 4524 1229 74       		.byte	0x74
 4525 122a 00       		.sleb128 0
 4526 122b 1E       		.uleb128 0x1e
 4527 122c 01       		.uleb128 0x1
 4528 122d 51       		.byte	0x51
 4529 122e 02       		.uleb128 0x2
 4530 122f 75       		.byte	0x75
 4531 1230 00       		.sleb128 0
 4532 1231 00       		.byte	0
 4533 1232 00       		.byte	0
 4534 1233 27       		.uleb128 0x27
 4535 1234 05010000 		.4byte	.LASF172
 4536 1238 01       		.byte	0x1
 4537 1239 7B       		.byte	0x7b
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 134


 4538 123a 6B000000 		.4byte	0x6b
 4539 123e 05       		.uleb128 0x5
 4540 123f 03       		.byte	0x3
 4541 1240 00000000 		.4byte	CapSense_eleCsdDisconnectFlag
 4542 1244 28       		.uleb128 0x28
 4543 1245 63060000 		.4byte	.LASF173
 4544 1249 05       		.byte	0x5
 4545 124a 6404     		.2byte	0x464
 4546 124c 25050000 		.4byte	0x525
 4547 1250 28       		.uleb128 0x28
 4548 1251 5A090000 		.4byte	.LASF174
 4549 1255 05       		.byte	0x5
 4550 1256 6504     		.2byte	0x465
 4551 1258 5C120000 		.4byte	0x125c
 4552 125c 1A       		.uleb128 0x1a
 4553 125d 9C060000 		.4byte	0x69c
 4554 1261 29       		.uleb128 0x29
 4555 1262 3D000000 		.4byte	.LASF175
 4556 1266 06       		.byte	0x6
 4557 1267 B1       		.byte	0xb1
 4558 1268 B0000000 		.4byte	0xb0
 4559 126c 29       		.uleb128 0x29
 4560 126d 13030000 		.4byte	.LASF176
 4561 1271 06       		.byte	0x6
 4562 1272 B2       		.byte	0xb2
 4563 1273 B0000000 		.4byte	0xb0
 4564 1277 29       		.uleb128 0x29
 4565 1278 4F0B0000 		.4byte	.LASF177
 4566 127c 06       		.byte	0x6
 4567 127d B5       		.byte	0xb5
 4568 127e 57060000 		.4byte	0x657
 4569 1282 29       		.uleb128 0x29
 4570 1283 710B0000 		.4byte	.LASF178
 4571 1287 06       		.byte	0x6
 4572 1288 BC       		.byte	0xbc
 4573 1289 8D120000 		.4byte	0x128d
 4574 128d 1A       		.uleb128 0x1a
 4575 128e 6B000000 		.4byte	0x6b
 4576 1292 29       		.uleb128 0x29
 4577 1293 18070000 		.4byte	.LASF179
 4578 1297 06       		.byte	0x6
 4579 1298 CA       		.byte	0xca
 4580 1299 750D0000 		.4byte	0xd75
 4581 129d 0B       		.uleb128 0xb
 4582 129e AD120000 		.4byte	0x12ad
 4583 12a2 AD120000 		.4byte	0x12ad
 4584 12a6 0C       		.uleb128 0xc
 4585 12a7 26020000 		.4byte	0x226
 4586 12ab 05       		.byte	0x5
 4587 12ac 00       		.byte	0
 4588 12ad 1A       		.uleb128 0x1a
 4589 12ae D0060000 		.4byte	0x6d0
 4590 12b2 29       		.uleb128 0x29
 4591 12b3 610C0000 		.4byte	.LASF180
 4592 12b7 06       		.byte	0x6
 4593 12b8 F5       		.byte	0xf5
 4594 12b9 BD120000 		.4byte	0x12bd
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 135


 4595 12bd 1A       		.uleb128 0x1a
 4596 12be 9D120000 		.4byte	0x129d
 4597 12c2 2A       		.uleb128 0x2a
 4598 12c3 82060000 		.4byte	.LASF181
 4599 12c7 01       		.byte	0x1
 4600 12c8 74       		.byte	0x74
 4601 12c9 83000000 		.4byte	0x83
 4602 12cd 05       		.uleb128 0x5
 4603 12ce 03       		.byte	0x3
 4604 12cf 00000000 		.4byte	CapSense_configCsd
 4605 12d3 2B       		.uleb128 0x2b
 4606 12d4 A5080000 		.4byte	.LASF182
 4607 12d8 A5080000 		.4byte	.LASF182
 4608 12dc 06       		.byte	0x6
 4609 12dd 84       		.byte	0x84
 4610 12de 2B       		.uleb128 0x2b
 4611 12df 09050000 		.4byte	.LASF183
 4612 12e3 09050000 		.4byte	.LASF183
 4613 12e7 06       		.byte	0x6
 4614 12e8 A8       		.byte	0xa8
 4615 12e9 2B       		.uleb128 0x2b
 4616 12ea 4C060000 		.4byte	.LASF184
 4617 12ee 4C060000 		.4byte	.LASF184
 4618 12f2 06       		.byte	0x6
 4619 12f3 A9       		.byte	0xa9
 4620 12f4 2B       		.uleb128 0x2b
 4621 12f5 30010000 		.4byte	.LASF185
 4622 12f9 30010000 		.4byte	.LASF185
 4623 12fd 06       		.byte	0x6
 4624 12fe 7F       		.byte	0x7f
 4625 12ff 2B       		.uleb128 0x2b
 4626 1300 380B0000 		.4byte	.LASF186
 4627 1304 380B0000 		.4byte	.LASF186
 4628 1308 07       		.byte	0x7
 4629 1309 F8       		.byte	0xf8
 4630 130a 2B       		.uleb128 0x2b
 4631 130b F3040000 		.4byte	.LASF187
 4632 130f F3040000 		.4byte	.LASF187
 4633 1313 07       		.byte	0x7
 4634 1314 F9       		.byte	0xf9
 4635 1315 2B       		.uleb128 0x2b
 4636 1316 DC040000 		.4byte	.LASF188
 4637 131a DC040000 		.4byte	.LASF188
 4638 131e 07       		.byte	0x7
 4639 131f DB       		.byte	0xdb
 4640 1320 2B       		.uleb128 0x2b
 4641 1321 1A0B0000 		.4byte	.LASF189
 4642 1325 1A0B0000 		.4byte	.LASF189
 4643 1329 07       		.byte	0x7
 4644 132a D6       		.byte	0xd6
 4645 132b 2B       		.uleb128 0x2b
 4646 132c 23010000 		.4byte	.LASF190
 4647 1330 23010000 		.4byte	.LASF190
 4648 1334 07       		.byte	0x7
 4649 1335 D8       		.byte	0xd8
 4650 1336 2B       		.uleb128 0x2b
 4651 1337 D5020000 		.4byte	.LASF191
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 136


 4652 133b D5020000 		.4byte	.LASF191
 4653 133f 07       		.byte	0x7
 4654 1340 ED       		.byte	0xed
 4655 1341 2B       		.uleb128 0x2b
 4656 1342 E7020000 		.4byte	.LASF192
 4657 1346 E7020000 		.4byte	.LASF192
 4658 134a 08       		.byte	0x8
 4659 134b 18       		.byte	0x18
 4660 134c 2B       		.uleb128 0x2b
 4661 134d FE030000 		.4byte	.LASF193
 4662 1351 FE030000 		.4byte	.LASF193
 4663 1355 06       		.byte	0x6
 4664 1356 85       		.byte	0x85
 4665 1357 00       		.byte	0
 4666              		.section	.debug_abbrev,"",%progbits
 4667              	.Ldebug_abbrev0:
 4668 0000 01       		.uleb128 0x1
 4669 0001 11       		.uleb128 0x11
 4670 0002 01       		.byte	0x1
 4671 0003 25       		.uleb128 0x25
 4672 0004 0E       		.uleb128 0xe
 4673 0005 13       		.uleb128 0x13
 4674 0006 0B       		.uleb128 0xb
 4675 0007 03       		.uleb128 0x3
 4676 0008 0E       		.uleb128 0xe
 4677 0009 1B       		.uleb128 0x1b
 4678 000a 0E       		.uleb128 0xe
 4679 000b 55       		.uleb128 0x55
 4680 000c 17       		.uleb128 0x17
 4681 000d 11       		.uleb128 0x11
 4682 000e 01       		.uleb128 0x1
 4683 000f 10       		.uleb128 0x10
 4684 0010 17       		.uleb128 0x17
 4685 0011 00       		.byte	0
 4686 0012 00       		.byte	0
 4687 0013 02       		.uleb128 0x2
 4688 0014 24       		.uleb128 0x24
 4689 0015 00       		.byte	0
 4690 0016 0B       		.uleb128 0xb
 4691 0017 0B       		.uleb128 0xb
 4692 0018 3E       		.uleb128 0x3e
 4693 0019 0B       		.uleb128 0xb
 4694 001a 03       		.uleb128 0x3
 4695 001b 0E       		.uleb128 0xe
 4696 001c 00       		.byte	0
 4697 001d 00       		.byte	0
 4698 001e 03       		.uleb128 0x3
 4699 001f 24       		.uleb128 0x24
 4700 0020 00       		.byte	0
 4701 0021 0B       		.uleb128 0xb
 4702 0022 0B       		.uleb128 0xb
 4703 0023 3E       		.uleb128 0x3e
 4704 0024 0B       		.uleb128 0xb
 4705 0025 03       		.uleb128 0x3
 4706 0026 08       		.uleb128 0x8
 4707 0027 00       		.byte	0
 4708 0028 00       		.byte	0
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 137


 4709 0029 04       		.uleb128 0x4
 4710 002a 16       		.uleb128 0x16
 4711 002b 00       		.byte	0
 4712 002c 03       		.uleb128 0x3
 4713 002d 0E       		.uleb128 0xe
 4714 002e 3A       		.uleb128 0x3a
 4715 002f 0B       		.uleb128 0xb
 4716 0030 3B       		.uleb128 0x3b
 4717 0031 05       		.uleb128 0x5
 4718 0032 49       		.uleb128 0x49
 4719 0033 13       		.uleb128 0x13
 4720 0034 00       		.byte	0
 4721 0035 00       		.byte	0
 4722 0036 05       		.uleb128 0x5
 4723 0037 35       		.uleb128 0x35
 4724 0038 00       		.byte	0
 4725 0039 49       		.uleb128 0x49
 4726 003a 13       		.uleb128 0x13
 4727 003b 00       		.byte	0
 4728 003c 00       		.byte	0
 4729 003d 06       		.uleb128 0x6
 4730 003e 13       		.uleb128 0x13
 4731 003f 01       		.byte	0x1
 4732 0040 0B       		.uleb128 0xb
 4733 0041 0B       		.uleb128 0xb
 4734 0042 3A       		.uleb128 0x3a
 4735 0043 0B       		.uleb128 0xb
 4736 0044 3B       		.uleb128 0x3b
 4737 0045 0B       		.uleb128 0xb
 4738 0046 01       		.uleb128 0x1
 4739 0047 13       		.uleb128 0x13
 4740 0048 00       		.byte	0
 4741 0049 00       		.byte	0
 4742 004a 07       		.uleb128 0x7
 4743 004b 0D       		.uleb128 0xd
 4744 004c 00       		.byte	0
 4745 004d 03       		.uleb128 0x3
 4746 004e 0E       		.uleb128 0xe
 4747 004f 3A       		.uleb128 0x3a
 4748 0050 0B       		.uleb128 0xb
 4749 0051 3B       		.uleb128 0x3b
 4750 0052 0B       		.uleb128 0xb
 4751 0053 49       		.uleb128 0x49
 4752 0054 13       		.uleb128 0x13
 4753 0055 38       		.uleb128 0x38
 4754 0056 0B       		.uleb128 0xb
 4755 0057 00       		.byte	0
 4756 0058 00       		.byte	0
 4757 0059 08       		.uleb128 0x8
 4758 005a 16       		.uleb128 0x16
 4759 005b 00       		.byte	0
 4760 005c 03       		.uleb128 0x3
 4761 005d 0E       		.uleb128 0xe
 4762 005e 3A       		.uleb128 0x3a
 4763 005f 0B       		.uleb128 0xb
 4764 0060 3B       		.uleb128 0x3b
 4765 0061 0B       		.uleb128 0xb
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 138


 4766 0062 49       		.uleb128 0x49
 4767 0063 13       		.uleb128 0x13
 4768 0064 00       		.byte	0
 4769 0065 00       		.byte	0
 4770 0066 09       		.uleb128 0x9
 4771 0067 04       		.uleb128 0x4
 4772 0068 01       		.byte	0x1
 4773 0069 0B       		.uleb128 0xb
 4774 006a 0B       		.uleb128 0xb
 4775 006b 49       		.uleb128 0x49
 4776 006c 13       		.uleb128 0x13
 4777 006d 3A       		.uleb128 0x3a
 4778 006e 0B       		.uleb128 0xb
 4779 006f 3B       		.uleb128 0x3b
 4780 0070 0B       		.uleb128 0xb
 4781 0071 01       		.uleb128 0x1
 4782 0072 13       		.uleb128 0x13
 4783 0073 00       		.byte	0
 4784 0074 00       		.byte	0
 4785 0075 0A       		.uleb128 0xa
 4786 0076 28       		.uleb128 0x28
 4787 0077 00       		.byte	0
 4788 0078 03       		.uleb128 0x3
 4789 0079 0E       		.uleb128 0xe
 4790 007a 1C       		.uleb128 0x1c
 4791 007b 0B       		.uleb128 0xb
 4792 007c 00       		.byte	0
 4793 007d 00       		.byte	0
 4794 007e 0B       		.uleb128 0xb
 4795 007f 01       		.uleb128 0x1
 4796 0080 01       		.byte	0x1
 4797 0081 49       		.uleb128 0x49
 4798 0082 13       		.uleb128 0x13
 4799 0083 01       		.uleb128 0x1
 4800 0084 13       		.uleb128 0x13
 4801 0085 00       		.byte	0
 4802 0086 00       		.byte	0
 4803 0087 0C       		.uleb128 0xc
 4804 0088 21       		.uleb128 0x21
 4805 0089 00       		.byte	0
 4806 008a 49       		.uleb128 0x49
 4807 008b 13       		.uleb128 0x13
 4808 008c 2F       		.uleb128 0x2f
 4809 008d 0B       		.uleb128 0xb
 4810 008e 00       		.byte	0
 4811 008f 00       		.byte	0
 4812 0090 0D       		.uleb128 0xd
 4813 0091 0D       		.uleb128 0xd
 4814 0092 00       		.byte	0
 4815 0093 03       		.uleb128 0x3
 4816 0094 0E       		.uleb128 0xe
 4817 0095 3A       		.uleb128 0x3a
 4818 0096 0B       		.uleb128 0xb
 4819 0097 3B       		.uleb128 0x3b
 4820 0098 05       		.uleb128 0x5
 4821 0099 49       		.uleb128 0x49
 4822 009a 13       		.uleb128 0x13
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 139


 4823 009b 38       		.uleb128 0x38
 4824 009c 0B       		.uleb128 0xb
 4825 009d 00       		.byte	0
 4826 009e 00       		.byte	0
 4827 009f 0E       		.uleb128 0xe
 4828 00a0 13       		.uleb128 0x13
 4829 00a1 01       		.byte	0x1
 4830 00a2 0B       		.uleb128 0xb
 4831 00a3 0B       		.uleb128 0xb
 4832 00a4 3A       		.uleb128 0x3a
 4833 00a5 0B       		.uleb128 0xb
 4834 00a6 3B       		.uleb128 0x3b
 4835 00a7 05       		.uleb128 0x5
 4836 00a8 01       		.uleb128 0x1
 4837 00a9 13       		.uleb128 0x13
 4838 00aa 00       		.byte	0
 4839 00ab 00       		.byte	0
 4840 00ac 0F       		.uleb128 0xf
 4841 00ad 0D       		.uleb128 0xd
 4842 00ae 00       		.byte	0
 4843 00af 03       		.uleb128 0x3
 4844 00b0 08       		.uleb128 0x8
 4845 00b1 3A       		.uleb128 0x3a
 4846 00b2 0B       		.uleb128 0xb
 4847 00b3 3B       		.uleb128 0x3b
 4848 00b4 05       		.uleb128 0x5
 4849 00b5 49       		.uleb128 0x49
 4850 00b6 13       		.uleb128 0x13
 4851 00b7 38       		.uleb128 0x38
 4852 00b8 0B       		.uleb128 0xb
 4853 00b9 00       		.byte	0
 4854 00ba 00       		.byte	0
 4855 00bb 10       		.uleb128 0x10
 4856 00bc 0F       		.uleb128 0xf
 4857 00bd 00       		.byte	0
 4858 00be 0B       		.uleb128 0xb
 4859 00bf 0B       		.uleb128 0xb
 4860 00c0 49       		.uleb128 0x49
 4861 00c1 13       		.uleb128 0x13
 4862 00c2 00       		.byte	0
 4863 00c3 00       		.byte	0
 4864 00c4 11       		.uleb128 0x11
 4865 00c5 26       		.uleb128 0x26
 4866 00c6 00       		.byte	0
 4867 00c7 00       		.byte	0
 4868 00c8 00       		.byte	0
 4869 00c9 12       		.uleb128 0x12
 4870 00ca 0F       		.uleb128 0xf
 4871 00cb 00       		.byte	0
 4872 00cc 0B       		.uleb128 0xb
 4873 00cd 0B       		.uleb128 0xb
 4874 00ce 00       		.byte	0
 4875 00cf 00       		.byte	0
 4876 00d0 13       		.uleb128 0x13
 4877 00d1 2E       		.uleb128 0x2e
 4878 00d2 01       		.byte	0x1
 4879 00d3 03       		.uleb128 0x3
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 140


 4880 00d4 0E       		.uleb128 0xe
 4881 00d5 3A       		.uleb128 0x3a
 4882 00d6 0B       		.uleb128 0xb
 4883 00d7 3B       		.uleb128 0x3b
 4884 00d8 05       		.uleb128 0x5
 4885 00d9 27       		.uleb128 0x27
 4886 00da 19       		.uleb128 0x19
 4887 00db 11       		.uleb128 0x11
 4888 00dc 01       		.uleb128 0x1
 4889 00dd 12       		.uleb128 0x12
 4890 00de 06       		.uleb128 0x6
 4891 00df 40       		.uleb128 0x40
 4892 00e0 18       		.uleb128 0x18
 4893 00e1 9742     		.uleb128 0x2117
 4894 00e3 19       		.uleb128 0x19
 4895 00e4 01       		.uleb128 0x1
 4896 00e5 13       		.uleb128 0x13
 4897 00e6 00       		.byte	0
 4898 00e7 00       		.byte	0
 4899 00e8 14       		.uleb128 0x14
 4900 00e9 05       		.uleb128 0x5
 4901 00ea 00       		.byte	0
 4902 00eb 03       		.uleb128 0x3
 4903 00ec 0E       		.uleb128 0xe
 4904 00ed 3A       		.uleb128 0x3a
 4905 00ee 0B       		.uleb128 0xb
 4906 00ef 3B       		.uleb128 0x3b
 4907 00f0 05       		.uleb128 0x5
 4908 00f1 49       		.uleb128 0x49
 4909 00f2 13       		.uleb128 0x13
 4910 00f3 02       		.uleb128 0x2
 4911 00f4 17       		.uleb128 0x17
 4912 00f5 00       		.byte	0
 4913 00f6 00       		.byte	0
 4914 00f7 15       		.uleb128 0x15
 4915 00f8 2E       		.uleb128 0x2e
 4916 00f9 01       		.byte	0x1
 4917 00fa 03       		.uleb128 0x3
 4918 00fb 0E       		.uleb128 0xe
 4919 00fc 3A       		.uleb128 0x3a
 4920 00fd 0B       		.uleb128 0xb
 4921 00fe 3B       		.uleb128 0x3b
 4922 00ff 05       		.uleb128 0x5
 4923 0100 27       		.uleb128 0x27
 4924 0101 19       		.uleb128 0x19
 4925 0102 11       		.uleb128 0x11
 4926 0103 01       		.uleb128 0x1
 4927 0104 12       		.uleb128 0x12
 4928 0105 06       		.uleb128 0x6
 4929 0106 40       		.uleb128 0x40
 4930 0107 18       		.uleb128 0x18
 4931 0108 9642     		.uleb128 0x2116
 4932 010a 19       		.uleb128 0x19
 4933 010b 01       		.uleb128 0x1
 4934 010c 13       		.uleb128 0x13
 4935 010d 00       		.byte	0
 4936 010e 00       		.byte	0
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 141


 4937 010f 16       		.uleb128 0x16
 4938 0110 34       		.uleb128 0x34
 4939 0111 00       		.byte	0
 4940 0112 03       		.uleb128 0x3
 4941 0113 0E       		.uleb128 0xe
 4942 0114 3A       		.uleb128 0x3a
 4943 0115 0B       		.uleb128 0xb
 4944 0116 3B       		.uleb128 0x3b
 4945 0117 05       		.uleb128 0x5
 4946 0118 49       		.uleb128 0x49
 4947 0119 13       		.uleb128 0x13
 4948 011a 02       		.uleb128 0x2
 4949 011b 18       		.uleb128 0x18
 4950 011c 00       		.byte	0
 4951 011d 00       		.byte	0
 4952 011e 17       		.uleb128 0x17
 4953 011f 2E       		.uleb128 0x2e
 4954 0120 00       		.byte	0
 4955 0121 03       		.uleb128 0x3
 4956 0122 0E       		.uleb128 0xe
 4957 0123 3A       		.uleb128 0x3a
 4958 0124 0B       		.uleb128 0xb
 4959 0125 3B       		.uleb128 0x3b
 4960 0126 05       		.uleb128 0x5
 4961 0127 27       		.uleb128 0x27
 4962 0128 19       		.uleb128 0x19
 4963 0129 11       		.uleb128 0x11
 4964 012a 01       		.uleb128 0x1
 4965 012b 12       		.uleb128 0x12
 4966 012c 06       		.uleb128 0x6
 4967 012d 40       		.uleb128 0x40
 4968 012e 18       		.uleb128 0x18
 4969 012f 9742     		.uleb128 0x2117
 4970 0131 19       		.uleb128 0x19
 4971 0132 00       		.byte	0
 4972 0133 00       		.byte	0
 4973 0134 18       		.uleb128 0x18
 4974 0135 2E       		.uleb128 0x2e
 4975 0136 01       		.byte	0x1
 4976 0137 03       		.uleb128 0x3
 4977 0138 0E       		.uleb128 0xe
 4978 0139 3A       		.uleb128 0x3a
 4979 013a 0B       		.uleb128 0xb
 4980 013b 3B       		.uleb128 0x3b
 4981 013c 05       		.uleb128 0x5
 4982 013d 27       		.uleb128 0x27
 4983 013e 19       		.uleb128 0x19
 4984 013f 49       		.uleb128 0x49
 4985 0140 13       		.uleb128 0x13
 4986 0141 11       		.uleb128 0x11
 4987 0142 01       		.uleb128 0x1
 4988 0143 12       		.uleb128 0x12
 4989 0144 06       		.uleb128 0x6
 4990 0145 40       		.uleb128 0x40
 4991 0146 18       		.uleb128 0x18
 4992 0147 9642     		.uleb128 0x2116
 4993 0149 19       		.uleb128 0x19
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 142


 4994 014a 01       		.uleb128 0x1
 4995 014b 13       		.uleb128 0x13
 4996 014c 00       		.byte	0
 4997 014d 00       		.byte	0
 4998 014e 19       		.uleb128 0x19
 4999 014f 34       		.uleb128 0x34
 5000 0150 00       		.byte	0
 5001 0151 03       		.uleb128 0x3
 5002 0152 0E       		.uleb128 0xe
 5003 0153 3A       		.uleb128 0x3a
 5004 0154 0B       		.uleb128 0xb
 5005 0155 3B       		.uleb128 0x3b
 5006 0156 05       		.uleb128 0x5
 5007 0157 49       		.uleb128 0x49
 5008 0158 13       		.uleb128 0x13
 5009 0159 02       		.uleb128 0x2
 5010 015a 17       		.uleb128 0x17
 5011 015b 00       		.byte	0
 5012 015c 00       		.byte	0
 5013 015d 1A       		.uleb128 0x1a
 5014 015e 26       		.uleb128 0x26
 5015 015f 00       		.byte	0
 5016 0160 49       		.uleb128 0x49
 5017 0161 13       		.uleb128 0x13
 5018 0162 00       		.byte	0
 5019 0163 00       		.byte	0
 5020 0164 1B       		.uleb128 0x1b
 5021 0165 2E       		.uleb128 0x2e
 5022 0166 01       		.byte	0x1
 5023 0167 3F       		.uleb128 0x3f
 5024 0168 19       		.uleb128 0x19
 5025 0169 03       		.uleb128 0x3
 5026 016a 0E       		.uleb128 0xe
 5027 016b 3A       		.uleb128 0x3a
 5028 016c 0B       		.uleb128 0xb
 5029 016d 3B       		.uleb128 0x3b
 5030 016e 05       		.uleb128 0x5
 5031 016f 27       		.uleb128 0x27
 5032 0170 19       		.uleb128 0x19
 5033 0171 11       		.uleb128 0x11
 5034 0172 01       		.uleb128 0x1
 5035 0173 12       		.uleb128 0x12
 5036 0174 06       		.uleb128 0x6
 5037 0175 40       		.uleb128 0x40
 5038 0176 18       		.uleb128 0x18
 5039 0177 9742     		.uleb128 0x2117
 5040 0179 19       		.uleb128 0x19
 5041 017a 01       		.uleb128 0x1
 5042 017b 13       		.uleb128 0x13
 5043 017c 00       		.byte	0
 5044 017d 00       		.byte	0
 5045 017e 1C       		.uleb128 0x1c
 5046 017f 898201   		.uleb128 0x4109
 5047 0182 00       		.byte	0
 5048 0183 11       		.uleb128 0x11
 5049 0184 01       		.uleb128 0x1
 5050 0185 31       		.uleb128 0x31
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 143


 5051 0186 13       		.uleb128 0x13
 5052 0187 00       		.byte	0
 5053 0188 00       		.byte	0
 5054 0189 1D       		.uleb128 0x1d
 5055 018a 898201   		.uleb128 0x4109
 5056 018d 01       		.byte	0x1
 5057 018e 11       		.uleb128 0x11
 5058 018f 01       		.uleb128 0x1
 5059 0190 31       		.uleb128 0x31
 5060 0191 13       		.uleb128 0x13
 5061 0192 01       		.uleb128 0x1
 5062 0193 13       		.uleb128 0x13
 5063 0194 00       		.byte	0
 5064 0195 00       		.byte	0
 5065 0196 1E       		.uleb128 0x1e
 5066 0197 8A8201   		.uleb128 0x410a
 5067 019a 00       		.byte	0
 5068 019b 02       		.uleb128 0x2
 5069 019c 18       		.uleb128 0x18
 5070 019d 9142     		.uleb128 0x2111
 5071 019f 18       		.uleb128 0x18
 5072 01a0 00       		.byte	0
 5073 01a1 00       		.byte	0
 5074 01a2 1F       		.uleb128 0x1f
 5075 01a3 2E       		.uleb128 0x2e
 5076 01a4 01       		.byte	0x1
 5077 01a5 3F       		.uleb128 0x3f
 5078 01a6 19       		.uleb128 0x19
 5079 01a7 03       		.uleb128 0x3
 5080 01a8 0E       		.uleb128 0xe
 5081 01a9 3A       		.uleb128 0x3a
 5082 01aa 0B       		.uleb128 0xb
 5083 01ab 3B       		.uleb128 0x3b
 5084 01ac 05       		.uleb128 0x5
 5085 01ad 27       		.uleb128 0x27
 5086 01ae 19       		.uleb128 0x19
 5087 01af 49       		.uleb128 0x49
 5088 01b0 13       		.uleb128 0x13
 5089 01b1 11       		.uleb128 0x11
 5090 01b2 01       		.uleb128 0x1
 5091 01b3 12       		.uleb128 0x12
 5092 01b4 06       		.uleb128 0x6
 5093 01b5 40       		.uleb128 0x40
 5094 01b6 18       		.uleb128 0x18
 5095 01b7 9642     		.uleb128 0x2116
 5096 01b9 19       		.uleb128 0x19
 5097 01ba 01       		.uleb128 0x1
 5098 01bb 13       		.uleb128 0x13
 5099 01bc 00       		.byte	0
 5100 01bd 00       		.byte	0
 5101 01be 20       		.uleb128 0x20
 5102 01bf 2E       		.uleb128 0x2e
 5103 01c0 01       		.byte	0x1
 5104 01c1 03       		.uleb128 0x3
 5105 01c2 0E       		.uleb128 0xe
 5106 01c3 3A       		.uleb128 0x3a
 5107 01c4 0B       		.uleb128 0xb
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 144


 5108 01c5 3B       		.uleb128 0x3b
 5109 01c6 05       		.uleb128 0x5
 5110 01c7 27       		.uleb128 0x27
 5111 01c8 19       		.uleb128 0x19
 5112 01c9 20       		.uleb128 0x20
 5113 01ca 0B       		.uleb128 0xb
 5114 01cb 01       		.uleb128 0x1
 5115 01cc 13       		.uleb128 0x13
 5116 01cd 00       		.byte	0
 5117 01ce 00       		.byte	0
 5118 01cf 21       		.uleb128 0x21
 5119 01d0 34       		.uleb128 0x34
 5120 01d1 00       		.byte	0
 5121 01d2 03       		.uleb128 0x3
 5122 01d3 0E       		.uleb128 0xe
 5123 01d4 3A       		.uleb128 0x3a
 5124 01d5 0B       		.uleb128 0xb
 5125 01d6 3B       		.uleb128 0x3b
 5126 01d7 05       		.uleb128 0x5
 5127 01d8 49       		.uleb128 0x49
 5128 01d9 13       		.uleb128 0x13
 5129 01da 00       		.byte	0
 5130 01db 00       		.byte	0
 5131 01dc 22       		.uleb128 0x22
 5132 01dd 1D       		.uleb128 0x1d
 5133 01de 01       		.byte	0x1
 5134 01df 31       		.uleb128 0x31
 5135 01e0 13       		.uleb128 0x13
 5136 01e1 11       		.uleb128 0x11
 5137 01e2 01       		.uleb128 0x1
 5138 01e3 12       		.uleb128 0x12
 5139 01e4 06       		.uleb128 0x6
 5140 01e5 58       		.uleb128 0x58
 5141 01e6 0B       		.uleb128 0xb
 5142 01e7 59       		.uleb128 0x59
 5143 01e8 05       		.uleb128 0x5
 5144 01e9 01       		.uleb128 0x1
 5145 01ea 13       		.uleb128 0x13
 5146 01eb 00       		.byte	0
 5147 01ec 00       		.byte	0
 5148 01ed 23       		.uleb128 0x23
 5149 01ee 0B       		.uleb128 0xb
 5150 01ef 01       		.byte	0x1
 5151 01f0 11       		.uleb128 0x11
 5152 01f1 01       		.uleb128 0x1
 5153 01f2 12       		.uleb128 0x12
 5154 01f3 06       		.uleb128 0x6
 5155 01f4 00       		.byte	0
 5156 01f5 00       		.byte	0
 5157 01f6 24       		.uleb128 0x24
 5158 01f7 34       		.uleb128 0x34
 5159 01f8 00       		.byte	0
 5160 01f9 31       		.uleb128 0x31
 5161 01fa 13       		.uleb128 0x13
 5162 01fb 02       		.uleb128 0x2
 5163 01fc 17       		.uleb128 0x17
 5164 01fd 00       		.byte	0
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 145


 5165 01fe 00       		.byte	0
 5166 01ff 25       		.uleb128 0x25
 5167 0200 898201   		.uleb128 0x4109
 5168 0203 01       		.byte	0x1
 5169 0204 11       		.uleb128 0x11
 5170 0205 01       		.uleb128 0x1
 5171 0206 31       		.uleb128 0x31
 5172 0207 13       		.uleb128 0x13
 5173 0208 00       		.byte	0
 5174 0209 00       		.byte	0
 5175 020a 26       		.uleb128 0x26
 5176 020b 2E       		.uleb128 0x2e
 5177 020c 01       		.byte	0x1
 5178 020d 3F       		.uleb128 0x3f
 5179 020e 19       		.uleb128 0x19
 5180 020f 03       		.uleb128 0x3
 5181 0210 0E       		.uleb128 0xe
 5182 0211 3A       		.uleb128 0x3a
 5183 0212 0B       		.uleb128 0xb
 5184 0213 3B       		.uleb128 0x3b
 5185 0214 05       		.uleb128 0x5
 5186 0215 27       		.uleb128 0x27
 5187 0216 19       		.uleb128 0x19
 5188 0217 49       		.uleb128 0x49
 5189 0218 13       		.uleb128 0x13
 5190 0219 11       		.uleb128 0x11
 5191 021a 01       		.uleb128 0x1
 5192 021b 12       		.uleb128 0x12
 5193 021c 06       		.uleb128 0x6
 5194 021d 40       		.uleb128 0x40
 5195 021e 18       		.uleb128 0x18
 5196 021f 9742     		.uleb128 0x2117
 5197 0221 19       		.uleb128 0x19
 5198 0222 01       		.uleb128 0x1
 5199 0223 13       		.uleb128 0x13
 5200 0224 00       		.byte	0
 5201 0225 00       		.byte	0
 5202 0226 27       		.uleb128 0x27
 5203 0227 34       		.uleb128 0x34
 5204 0228 00       		.byte	0
 5205 0229 03       		.uleb128 0x3
 5206 022a 0E       		.uleb128 0xe
 5207 022b 3A       		.uleb128 0x3a
 5208 022c 0B       		.uleb128 0xb
 5209 022d 3B       		.uleb128 0x3b
 5210 022e 0B       		.uleb128 0xb
 5211 022f 49       		.uleb128 0x49
 5212 0230 13       		.uleb128 0x13
 5213 0231 02       		.uleb128 0x2
 5214 0232 18       		.uleb128 0x18
 5215 0233 00       		.byte	0
 5216 0234 00       		.byte	0
 5217 0235 28       		.uleb128 0x28
 5218 0236 34       		.uleb128 0x34
 5219 0237 00       		.byte	0
 5220 0238 03       		.uleb128 0x3
 5221 0239 0E       		.uleb128 0xe
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 146


 5222 023a 3A       		.uleb128 0x3a
 5223 023b 0B       		.uleb128 0xb
 5224 023c 3B       		.uleb128 0x3b
 5225 023d 05       		.uleb128 0x5
 5226 023e 49       		.uleb128 0x49
 5227 023f 13       		.uleb128 0x13
 5228 0240 3F       		.uleb128 0x3f
 5229 0241 19       		.uleb128 0x19
 5230 0242 3C       		.uleb128 0x3c
 5231 0243 19       		.uleb128 0x19
 5232 0244 00       		.byte	0
 5233 0245 00       		.byte	0
 5234 0246 29       		.uleb128 0x29
 5235 0247 34       		.uleb128 0x34
 5236 0248 00       		.byte	0
 5237 0249 03       		.uleb128 0x3
 5238 024a 0E       		.uleb128 0xe
 5239 024b 3A       		.uleb128 0x3a
 5240 024c 0B       		.uleb128 0xb
 5241 024d 3B       		.uleb128 0x3b
 5242 024e 0B       		.uleb128 0xb
 5243 024f 49       		.uleb128 0x49
 5244 0250 13       		.uleb128 0x13
 5245 0251 3F       		.uleb128 0x3f
 5246 0252 19       		.uleb128 0x19
 5247 0253 3C       		.uleb128 0x3c
 5248 0254 19       		.uleb128 0x19
 5249 0255 00       		.byte	0
 5250 0256 00       		.byte	0
 5251 0257 2A       		.uleb128 0x2a
 5252 0258 34       		.uleb128 0x34
 5253 0259 00       		.byte	0
 5254 025a 03       		.uleb128 0x3
 5255 025b 0E       		.uleb128 0xe
 5256 025c 3A       		.uleb128 0x3a
 5257 025d 0B       		.uleb128 0xb
 5258 025e 3B       		.uleb128 0x3b
 5259 025f 0B       		.uleb128 0xb
 5260 0260 49       		.uleb128 0x49
 5261 0261 13       		.uleb128 0x13
 5262 0262 3F       		.uleb128 0x3f
 5263 0263 19       		.uleb128 0x19
 5264 0264 02       		.uleb128 0x2
 5265 0265 18       		.uleb128 0x18
 5266 0266 00       		.byte	0
 5267 0267 00       		.byte	0
 5268 0268 2B       		.uleb128 0x2b
 5269 0269 2E       		.uleb128 0x2e
 5270 026a 00       		.byte	0
 5271 026b 3F       		.uleb128 0x3f
 5272 026c 19       		.uleb128 0x19
 5273 026d 3C       		.uleb128 0x3c
 5274 026e 19       		.uleb128 0x19
 5275 026f 6E       		.uleb128 0x6e
 5276 0270 0E       		.uleb128 0xe
 5277 0271 03       		.uleb128 0x3
 5278 0272 0E       		.uleb128 0xe
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 147


 5279 0273 3A       		.uleb128 0x3a
 5280 0274 0B       		.uleb128 0xb
 5281 0275 3B       		.uleb128 0x3b
 5282 0276 0B       		.uleb128 0xb
 5283 0277 00       		.byte	0
 5284 0278 00       		.byte	0
 5285 0279 00       		.byte	0
 5286              		.section	.debug_loc,"",%progbits
 5287              	.Ldebug_loc0:
 5288              	.LLST0:
 5289 0000 00000000 		.4byte	.LVL0
 5290 0004 04000000 		.4byte	.LVL2
 5291 0008 0100     		.2byte	0x1
 5292 000a 50       		.byte	0x50
 5293 000b 04000000 		.4byte	.LVL2
 5294 000f 10000000 		.4byte	.LFE1
 5295 0013 0400     		.2byte	0x4
 5296 0015 F3       		.byte	0xf3
 5297 0016 01       		.uleb128 0x1
 5298 0017 50       		.byte	0x50
 5299 0018 9F       		.byte	0x9f
 5300 0019 00000000 		.4byte	0
 5301 001d 00000000 		.4byte	0
 5302              	.LLST1:
 5303 0021 00000000 		.4byte	.LVL0
 5304 0025 02000000 		.4byte	.LVL1
 5305 0029 0100     		.2byte	0x1
 5306 002b 51       		.byte	0x51
 5307 002c 02000000 		.4byte	.LVL1
 5308 0030 10000000 		.4byte	.LFE1
 5309 0034 0300     		.2byte	0x3
 5310 0036 71       		.byte	0x71
 5311 0037 01       		.sleb128 1
 5312 0038 9F       		.byte	0x9f
 5313 0039 00000000 		.4byte	0
 5314 003d 00000000 		.4byte	0
 5315              	.LLST2:
 5316 0041 00000000 		.4byte	.LVL4
 5317 0045 22000000 		.4byte	.LVL11
 5318 0049 0100     		.2byte	0x1
 5319 004b 50       		.byte	0x50
 5320 004c 22000000 		.4byte	.LVL11
 5321 0050 26000000 		.4byte	.LVL13
 5322 0054 0100     		.2byte	0x1
 5323 0056 55       		.byte	0x55
 5324 0057 26000000 		.4byte	.LVL13
 5325 005b 28000000 		.4byte	.LVL14
 5326 005f 0100     		.2byte	0x1
 5327 0061 50       		.byte	0x50
 5328 0062 28000000 		.4byte	.LVL14
 5329 0066 8E000000 		.4byte	.LVL37
 5330 006a 0100     		.2byte	0x1
 5331 006c 55       		.byte	0x55
 5332 006d 8E000000 		.4byte	.LVL37
 5333 0071 98000000 		.4byte	.LFE19
 5334 0075 0400     		.2byte	0x4
 5335 0077 F3       		.byte	0xf3
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 148


 5336 0078 01       		.uleb128 0x1
 5337 0079 50       		.byte	0x50
 5338 007a 9F       		.byte	0x9f
 5339 007b 00000000 		.4byte	0
 5340 007f 00000000 		.4byte	0
 5341              	.LLST3:
 5342 0083 00000000 		.4byte	.LVL4
 5343 0087 3C000000 		.4byte	.LVL18
 5344 008b 0100     		.2byte	0x1
 5345 008d 51       		.byte	0x51
 5346 008e 3C000000 		.4byte	.LVL18
 5347 0092 98000000 		.4byte	.LFE19
 5348 0096 0400     		.2byte	0x4
 5349 0098 F3       		.byte	0xf3
 5350 0099 01       		.uleb128 0x1
 5351 009a 51       		.byte	0x51
 5352 009b 9F       		.byte	0x9f
 5353 009c 00000000 		.4byte	0
 5354 00a0 00000000 		.4byte	0
 5355              	.LLST4:
 5356 00a4 0A000000 		.4byte	.LVL5
 5357 00a8 56000000 		.4byte	.LVL25
 5358 00ac 0200     		.2byte	0x2
 5359 00ae 30       		.byte	0x30
 5360 00af 9F       		.byte	0x9f
 5361 00b0 56000000 		.4byte	.LVL25
 5362 00b4 74000000 		.4byte	.LVL31
 5363 00b8 0200     		.2byte	0x2
 5364 00ba 91       		.byte	0x91
 5365 00bb 64       		.sleb128 -28
 5366 00bc 76000000 		.4byte	.LVL32
 5367 00c0 98000000 		.4byte	.LFE19
 5368 00c4 0200     		.2byte	0x2
 5369 00c6 91       		.byte	0x91
 5370 00c7 64       		.sleb128 -28
 5371 00c8 00000000 		.4byte	0
 5372 00cc 00000000 		.4byte	0
 5373              	.LLST5:
 5374 00d0 1C000000 		.4byte	.LVL10
 5375 00d4 50000000 		.4byte	.LVL24
 5376 00d8 0100     		.2byte	0x1
 5377 00da 57       		.byte	0x57
 5378 00db 5A000000 		.4byte	.LVL26
 5379 00df 66000000 		.4byte	.LVL27
 5380 00e3 0100     		.2byte	0x1
 5381 00e5 50       		.byte	0x50
 5382 00e6 70000000 		.4byte	.LVL30
 5383 00ea 7A000000 		.4byte	.LVL33
 5384 00ee 0100     		.2byte	0x1
 5385 00f0 50       		.byte	0x50
 5386 00f1 00000000 		.4byte	0
 5387 00f5 00000000 		.4byte	0
 5388              	.LLST6:
 5389 00f9 4E000000 		.4byte	.LVL23
 5390 00fd 56000000 		.4byte	.LVL25
 5391 0101 0200     		.2byte	0x2
 5392 0103 30       		.byte	0x30
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 149


 5393 0104 9F       		.byte	0x9f
 5394 0105 56000000 		.4byte	.LVL25
 5395 0109 8E000000 		.4byte	.LVL39
 5396 010d 0100     		.2byte	0x1
 5397 010f 57       		.byte	0x57
 5398 0110 00000000 		.4byte	0
 5399 0114 00000000 		.4byte	0
 5400              	.LLST7:
 5401 0118 56000000 		.4byte	.LVL25
 5402 011c 66000000 		.4byte	.LVL27
 5403 0120 0100     		.2byte	0x1
 5404 0122 51       		.byte	0x51
 5405 0123 68000000 		.4byte	.LVL28
 5406 0127 6A000000 		.4byte	.LVL29
 5407 012b 0100     		.2byte	0x1
 5408 012d 53       		.byte	0x53
 5409 012e 6A000000 		.4byte	.LVL29
 5410 0132 7E000000 		.4byte	.LVL35
 5411 0136 0100     		.2byte	0x1
 5412 0138 51       		.byte	0x51
 5413 0139 00000000 		.4byte	0
 5414 013d 00000000 		.4byte	0
 5415              	.LLST8:
 5416 0141 2E000000 		.4byte	.LVL15
 5417 0145 4E000000 		.4byte	.LVL23
 5418 0149 0100     		.2byte	0x1
 5419 014b 58       		.byte	0x58
 5420 014c 4E000000 		.4byte	.LVL23
 5421 0150 56000000 		.4byte	.LVL25
 5422 0154 0100     		.2byte	0x1
 5423 0156 50       		.byte	0x50
 5424 0157 56000000 		.4byte	.LVL25
 5425 015b 98000000 		.4byte	.LFE19
 5426 015f 0100     		.2byte	0x1
 5427 0161 52       		.byte	0x52
 5428 0162 00000000 		.4byte	0
 5429 0166 00000000 		.4byte	0
 5430              	.LLST9:
 5431 016a 1C000000 		.4byte	.LVL10
 5432 016e 24000000 		.4byte	.LVL12
 5433 0172 0200     		.2byte	0x2
 5434 0174 30       		.byte	0x30
 5435 0175 9F       		.byte	0x9f
 5436 0176 24000000 		.4byte	.LVL12
 5437 017a 26000000 		.4byte	.LVL13
 5438 017e 0100     		.2byte	0x1
 5439 0180 50       		.byte	0x50
 5440 0181 26000000 		.4byte	.LVL13
 5441 0185 28000000 		.4byte	.LVL14
 5442 0189 0200     		.2byte	0x2
 5443 018b 30       		.byte	0x30
 5444 018c 9F       		.byte	0x9f
 5445 018d 28000000 		.4byte	.LVL14
 5446 0191 3A000000 		.4byte	.LVL17
 5447 0195 0100     		.2byte	0x1
 5448 0197 50       		.byte	0x50
 5449 0198 42000000 		.4byte	.LVL20
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 150


 5450 019c 44000000 		.4byte	.LVL21
 5451 01a0 0100     		.2byte	0x1
 5452 01a2 50       		.byte	0x50
 5453 01a3 44000000 		.4byte	.LVL21
 5454 01a7 8E000000 		.4byte	.LVL38
 5455 01ab 0100     		.2byte	0x1
 5456 01ad 56       		.byte	0x56
 5457 01ae 00000000 		.4byte	0
 5458 01b2 00000000 		.4byte	0
 5459              	.LLST10:
 5460 01b6 10000000 		.4byte	.LVL6
 5461 01ba 16000000 		.4byte	.LVL9
 5462 01be 0100     		.2byte	0x1
 5463 01c0 53       		.byte	0x53
 5464 01c1 00000000 		.4byte	0
 5465 01c5 00000000 		.4byte	0
 5466              	.LLST11:
 5467 01c9 12000000 		.4byte	.LVL7
 5468 01cd 3F000000 		.4byte	.LVL19-1
 5469 01d1 0100     		.2byte	0x1
 5470 01d3 52       		.byte	0x52
 5471 01d4 00000000 		.4byte	0
 5472 01d8 00000000 		.4byte	0
 5473              	.LLST12:
 5474 01dc 14000000 		.4byte	.LVL8
 5475 01e0 8E000000 		.4byte	.LVL36
 5476 01e4 0100     		.2byte	0x1
 5477 01e6 54       		.byte	0x54
 5478 01e7 00000000 		.4byte	0
 5479 01eb 00000000 		.4byte	0
 5480              	.LLST13:
 5481 01ef 00000000 		.4byte	.LVL40
 5482 01f3 16000000 		.4byte	.LVL45
 5483 01f7 0100     		.2byte	0x1
 5484 01f9 50       		.byte	0x50
 5485 01fa 16000000 		.4byte	.LVL45
 5486 01fe 78000000 		.4byte	.LVL64
 5487 0202 0100     		.2byte	0x1
 5488 0204 57       		.byte	0x57
 5489 0205 78000000 		.4byte	.LVL64
 5490 0209 86000000 		.4byte	.LVL68
 5491 020d 0400     		.2byte	0x4
 5492 020f F3       		.byte	0xf3
 5493 0210 01       		.uleb128 0x1
 5494 0211 50       		.byte	0x50
 5495 0212 9F       		.byte	0x9f
 5496 0213 86000000 		.4byte	.LVL68
 5497 0217 8E000000 		.4byte	.LVL72
 5498 021b 0100     		.2byte	0x1
 5499 021d 57       		.byte	0x57
 5500 021e 8E000000 		.4byte	.LVL72
 5501 0222 9C000000 		.4byte	.LFE20
 5502 0226 0400     		.2byte	0x4
 5503 0228 F3       		.byte	0xf3
 5504 0229 01       		.uleb128 0x1
 5505 022a 50       		.byte	0x50
 5506 022b 9F       		.byte	0x9f
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 151


 5507 022c 00000000 		.4byte	0
 5508 0230 00000000 		.4byte	0
 5509              	.LLST14:
 5510 0234 76000000 		.4byte	.LVL63
 5511 0238 84000000 		.4byte	.LVL67
 5512 023c 0100     		.2byte	0x1
 5513 023e 50       		.byte	0x50
 5514 023f 8E000000 		.4byte	.LVL72
 5515 0243 90000000 		.4byte	.LVL73
 5516 0247 0100     		.2byte	0x1
 5517 0249 50       		.byte	0x50
 5518 024a 00000000 		.4byte	0
 5519 024e 00000000 		.4byte	0
 5520              	.LLST15:
 5521 0252 12000000 		.4byte	.LVL44
 5522 0256 1C000000 		.4byte	.LVL46
 5523 025a 0200     		.2byte	0x2
 5524 025c 30       		.byte	0x30
 5525 025d 9F       		.byte	0x9f
 5526 025e 1C000000 		.4byte	.LVL46
 5527 0262 90000000 		.4byte	.LVL77
 5528 0266 0100     		.2byte	0x1
 5529 0268 59       		.byte	0x59
 5530 0269 00000000 		.4byte	0
 5531 026d 00000000 		.4byte	0
 5532              	.LLST16:
 5533 0271 12000000 		.4byte	.LVL44
 5534 0275 1C000000 		.4byte	.LVL46
 5535 0279 0300     		.2byte	0x3
 5536 027b 08       		.byte	0x8
 5537 027c 7F       		.byte	0x7f
 5538 027d 9F       		.byte	0x9f
 5539 027e 1C000000 		.4byte	.LVL46
 5540 0282 2C000000 		.4byte	.LVL48
 5541 0286 0100     		.2byte	0x1
 5542 0288 50       		.byte	0x50
 5543 0289 2E000000 		.4byte	.LVL49
 5544 028d 42000000 		.4byte	.LVL52
 5545 0291 0100     		.2byte	0x1
 5546 0293 50       		.byte	0x50
 5547 0294 46000000 		.4byte	.LVL53
 5548 0298 6A000000 		.4byte	.LVL61
 5549 029c 0100     		.2byte	0x1
 5550 029e 50       		.byte	0x50
 5551 029f 86000000 		.4byte	.LVL68
 5552 02a3 88000000 		.4byte	.LVL69
 5553 02a7 0100     		.2byte	0x1
 5554 02a9 50       		.byte	0x50
 5555 02aa 8A000000 		.4byte	.LVL70
 5556 02ae 8C000000 		.4byte	.LVL71
 5557 02b2 0100     		.2byte	0x1
 5558 02b4 50       		.byte	0x50
 5559 02b5 00000000 		.4byte	0
 5560 02b9 00000000 		.4byte	0
 5561              	.LLST17:
 5562 02bd 0A000000 		.4byte	.LVL41
 5563 02c1 82000000 		.4byte	.LVL66
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 152


 5564 02c5 0200     		.2byte	0x2
 5565 02c7 30       		.byte	0x30
 5566 02c8 9F       		.byte	0x9f
 5567 02c9 82000000 		.4byte	.LVL66
 5568 02cd 86000000 		.4byte	.LVL68
 5569 02d1 0200     		.2byte	0x2
 5570 02d3 31       		.byte	0x31
 5571 02d4 9F       		.byte	0x9f
 5572 02d5 86000000 		.4byte	.LVL68
 5573 02d9 90000000 		.4byte	.LVL73
 5574 02dd 0200     		.2byte	0x2
 5575 02df 30       		.byte	0x30
 5576 02e0 9F       		.byte	0x9f
 5577 02e1 90000000 		.4byte	.LVL73
 5578 02e5 9C000000 		.4byte	.LFE20
 5579 02e9 0100     		.2byte	0x1
 5580 02eb 50       		.byte	0x50
 5581 02ec 00000000 		.4byte	0
 5582 02f0 00000000 		.4byte	0
 5583              	.LLST18:
 5584 02f4 12000000 		.4byte	.LVL44
 5585 02f8 1C000000 		.4byte	.LVL46
 5586 02fc 0200     		.2byte	0x2
 5587 02fe 31       		.byte	0x31
 5588 02ff 9F       		.byte	0x9f
 5589 0300 1C000000 		.4byte	.LVL46
 5590 0304 2E000000 		.4byte	.LVL49
 5591 0308 0100     		.2byte	0x1
 5592 030a 52       		.byte	0x52
 5593 030b 2E000000 		.4byte	.LVL49
 5594 030f 30000000 		.4byte	.LVL50
 5595 0313 0100     		.2byte	0x1
 5596 0315 53       		.byte	0x53
 5597 0316 30000000 		.4byte	.LVL50
 5598 031a 48000000 		.4byte	.LVL54
 5599 031e 0100     		.2byte	0x1
 5600 0320 52       		.byte	0x52
 5601 0321 48000000 		.4byte	.LVL54
 5602 0325 4A000000 		.4byte	.LVL55
 5603 0329 0100     		.2byte	0x1
 5604 032b 53       		.byte	0x53
 5605 032c 4A000000 		.4byte	.LVL55
 5606 0330 66000000 		.4byte	.LVL60
 5607 0334 0100     		.2byte	0x1
 5608 0336 52       		.byte	0x52
 5609 0337 86000000 		.4byte	.LVL68
 5610 033b 8E000000 		.4byte	.LVL72
 5611 033f 0100     		.2byte	0x1
 5612 0341 52       		.byte	0x52
 5613 0342 00000000 		.4byte	0
 5614 0346 00000000 		.4byte	0
 5615              	.LLST19:
 5616 034a 12000000 		.4byte	.LVL44
 5617 034e 5E000000 		.4byte	.LVL58
 5618 0352 0100     		.2byte	0x1
 5619 0354 55       		.byte	0x55
 5620 0355 5E000000 		.4byte	.LVL58
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 153


 5621 0359 6C000000 		.4byte	.LVL62
 5622 035d 0100     		.2byte	0x1
 5623 035f 53       		.byte	0x53
 5624 0360 6C000000 		.4byte	.LVL62
 5625 0364 80000000 		.4byte	.LVL65
 5626 0368 0100     		.2byte	0x1
 5627 036a 55       		.byte	0x55
 5628 036b 80000000 		.4byte	.LVL65
 5629 036f 86000000 		.4byte	.LVL68
 5630 0373 0100     		.2byte	0x1
 5631 0375 58       		.byte	0x58
 5632 0376 86000000 		.4byte	.LVL68
 5633 037a 8E000000 		.4byte	.LVL72
 5634 037e 0100     		.2byte	0x1
 5635 0380 53       		.byte	0x53
 5636 0381 8E000000 		.4byte	.LVL72
 5637 0385 90000000 		.4byte	.LVL73
 5638 0389 0100     		.2byte	0x1
 5639 038b 55       		.byte	0x55
 5640 038c 90000000 		.4byte	.LVL73
 5641 0390 90000000 		.4byte	.LVL76
 5642 0394 0100     		.2byte	0x1
 5643 0396 58       		.byte	0x58
 5644 0397 00000000 		.4byte	0
 5645 039b 00000000 		.4byte	0
 5646              	.LLST20:
 5647 039f 0C000000 		.4byte	.LVL42
 5648 03a3 90000000 		.4byte	.LVL75
 5649 03a7 0100     		.2byte	0x1
 5650 03a9 56       		.byte	0x56
 5651 03aa 00000000 		.4byte	0
 5652 03ae 00000000 		.4byte	0
 5653              	.LLST21:
 5654 03b2 38000000 		.4byte	.LVL51
 5655 03b6 64000000 		.4byte	.LVL59
 5656 03ba 0100     		.2byte	0x1
 5657 03bc 51       		.byte	0x51
 5658 03bd 86000000 		.4byte	.LVL68
 5659 03c1 8E000000 		.4byte	.LVL72
 5660 03c5 0100     		.2byte	0x1
 5661 03c7 51       		.byte	0x51
 5662 03c8 00000000 		.4byte	0
 5663 03cc 00000000 		.4byte	0
 5664              	.LLST22:
 5665 03d0 0E000000 		.4byte	.LVL43
 5666 03d4 90000000 		.4byte	.LVL74
 5667 03d8 0100     		.2byte	0x1
 5668 03da 54       		.byte	0x54
 5669 03db 00000000 		.4byte	0
 5670 03df 00000000 		.4byte	0
 5671              	.LLST23:
 5672 03e3 00000000 		.4byte	.LVL78
 5673 03e7 24000000 		.4byte	.LVL83
 5674 03eb 0100     		.2byte	0x1
 5675 03ed 50       		.byte	0x50
 5676 03ee 24000000 		.4byte	.LVL83
 5677 03f2 C2000000 		.4byte	.LVL115
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 154


 5678 03f6 0100     		.2byte	0x1
 5679 03f8 57       		.byte	0x57
 5680 03f9 C2000000 		.4byte	.LVL115
 5681 03fd CC000000 		.4byte	.LFE21
 5682 0401 0400     		.2byte	0x4
 5683 0403 F3       		.byte	0xf3
 5684 0404 01       		.uleb128 0x1
 5685 0405 50       		.byte	0x50
 5686 0406 9F       		.byte	0x9f
 5687 0407 00000000 		.4byte	0
 5688 040b 00000000 		.4byte	0
 5689              	.LLST24:
 5690 040f 00000000 		.4byte	.LVL78
 5691 0413 24000000 		.4byte	.LVL83
 5692 0417 0100     		.2byte	0x1
 5693 0419 51       		.byte	0x51
 5694 041a 24000000 		.4byte	.LVL83
 5695 041e C2000000 		.4byte	.LVL116
 5696 0422 0100     		.2byte	0x1
 5697 0424 5A       		.byte	0x5a
 5698 0425 C2000000 		.4byte	.LVL116
 5699 0429 CC000000 		.4byte	.LFE21
 5700 042d 0400     		.2byte	0x4
 5701 042f F3       		.byte	0xf3
 5702 0430 01       		.uleb128 0x1
 5703 0431 51       		.byte	0x51
 5704 0432 9F       		.byte	0x9f
 5705 0433 00000000 		.4byte	0
 5706 0437 00000000 		.4byte	0
 5707              	.LLST25:
 5708 043b 32000000 		.4byte	.LVL86
 5709 043f 38000000 		.4byte	.LVL87
 5710 0443 0200     		.2byte	0x2
 5711 0445 30       		.byte	0x30
 5712 0446 9F       		.byte	0x9f
 5713 0447 38000000 		.4byte	.LVL87
 5714 044b 59000000 		.4byte	.LVL96-1
 5715 044f 0100     		.2byte	0x1
 5716 0451 52       		.byte	0x52
 5717 0452 74000000 		.4byte	.LVL101
 5718 0456 78000000 		.4byte	.LVL102
 5719 045a 0200     		.2byte	0x2
 5720 045c 30       		.byte	0x30
 5721 045d 9F       		.byte	0x9f
 5722 045e 78000000 		.4byte	.LVL102
 5723 0462 BA000000 		.4byte	.LVL112
 5724 0466 0100     		.2byte	0x1
 5725 0468 56       		.byte	0x56
 5726 0469 00000000 		.4byte	0
 5727 046d 00000000 		.4byte	0
 5728              	.LLST26:
 5729 0471 20000000 		.4byte	.LVL81
 5730 0475 24000000 		.4byte	.LVL83
 5731 0479 0200     		.2byte	0x2
 5732 047b 31       		.byte	0x31
 5733 047c 9F       		.byte	0x9f
 5734 047d 24000000 		.4byte	.LVL83
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 155


 5735 0481 BA000000 		.4byte	.LVL112
 5736 0485 0100     		.2byte	0x1
 5737 0487 55       		.byte	0x55
 5738 0488 BA000000 		.4byte	.LVL112
 5739 048c BC000000 		.4byte	.LVL113
 5740 0490 0100     		.2byte	0x1
 5741 0492 53       		.byte	0x53
 5742 0493 BC000000 		.4byte	.LVL113
 5743 0497 C2000000 		.4byte	.LVL114
 5744 049b 0100     		.2byte	0x1
 5745 049d 55       		.byte	0x55
 5746 049e C2000000 		.4byte	.LVL114
 5747 04a2 CC000000 		.4byte	.LFE21
 5748 04a6 0300     		.2byte	0x3
 5749 04a8 73       		.byte	0x73
 5750 04a9 7F       		.sleb128 -1
 5751 04aa 9F       		.byte	0x9f
 5752 04ab 00000000 		.4byte	0
 5753 04af 00000000 		.4byte	0
 5754              	.LLST27:
 5755 04b3 2C000000 		.4byte	.LVL84
 5756 04b7 2E000000 		.4byte	.LVL85
 5757 04bb 0100     		.2byte	0x1
 5758 04bd 53       		.byte	0x53
 5759 04be 2E000000 		.4byte	.LVL85
 5760 04c2 6A000000 		.4byte	.LVL100
 5761 04c6 0100     		.2byte	0x1
 5762 04c8 59       		.byte	0x59
 5763 04c9 00000000 		.4byte	0
 5764 04cd 00000000 		.4byte	0
 5765              	.LLST28:
 5766 04d1 2C000000 		.4byte	.LVL84
 5767 04d5 2E000000 		.4byte	.LVL85
 5768 04d9 0100     		.2byte	0x1
 5769 04db 53       		.byte	0x53
 5770 04dc 2E000000 		.4byte	.LVL85
 5771 04e0 38000000 		.4byte	.LVL87
 5772 04e4 0100     		.2byte	0x1
 5773 04e6 59       		.byte	0x59
 5774 04e7 38000000 		.4byte	.LVL87
 5775 04eb 40000000 		.4byte	.LVL88
 5776 04ef 0100     		.2byte	0x1
 5777 04f1 54       		.byte	0x54
 5778 04f2 40000000 		.4byte	.LVL88
 5779 04f6 46000000 		.4byte	.LVL91
 5780 04fa 0100     		.2byte	0x1
 5781 04fc 51       		.byte	0x51
 5782 04fd 46000000 		.4byte	.LVL91
 5783 0501 74000000 		.4byte	.LVL101
 5784 0505 0100     		.2byte	0x1
 5785 0507 54       		.byte	0x54
 5786 0508 00000000 		.4byte	0
 5787 050c 00000000 		.4byte	0
 5788              	.LLST29:
 5789 0510 32000000 		.4byte	.LVL86
 5790 0514 42000000 		.4byte	.LVL89
 5791 0518 0100     		.2byte	0x1
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 156


 5792 051a 50       		.byte	0x50
 5793 051b 44000000 		.4byte	.LVL90
 5794 051f 54000000 		.4byte	.LVL95
 5795 0523 0100     		.2byte	0x1
 5796 0525 50       		.byte	0x50
 5797 0526 00000000 		.4byte	0
 5798 052a 00000000 		.4byte	0
 5799              	.LLST30:
 5800 052e 20000000 		.4byte	.LVL81
 5801 0532 22000000 		.4byte	.LVL82
 5802 0536 0100     		.2byte	0x1
 5803 0538 53       		.byte	0x53
 5804 0539 22000000 		.4byte	.LVL82
 5805 053d CC000000 		.4byte	.LFE21
 5806 0541 0200     		.2byte	0x2
 5807 0543 91       		.byte	0x91
 5808 0544 5C       		.sleb128 -36
 5809 0545 00000000 		.4byte	0
 5810 0549 00000000 		.4byte	0
 5811              	.LLST31:
 5812 054d 5C000000 		.4byte	.LVL97
 5813 0551 5E000000 		.4byte	.LVL98
 5814 0555 0100     		.2byte	0x1
 5815 0557 50       		.byte	0x50
 5816 0558 8E000000 		.4byte	.LVL104
 5817 055c A2000000 		.4byte	.LVL108
 5818 0560 0100     		.2byte	0x1
 5819 0562 50       		.byte	0x50
 5820 0563 00000000 		.4byte	0
 5821 0567 00000000 		.4byte	0
 5822              	.LLST32:
 5823 056b 64000000 		.4byte	.LVL99
 5824 056f 6A000000 		.4byte	.LVL100
 5825 0573 0100     		.2byte	0x1
 5826 0575 50       		.byte	0x50
 5827 0576 6A000000 		.4byte	.LVL100
 5828 057a 98000000 		.4byte	.LVL105
 5829 057e 0100     		.2byte	0x1
 5830 0580 59       		.byte	0x59
 5831 0581 98000000 		.4byte	.LVL105
 5832 0585 9C000000 		.4byte	.LVL106
 5833 0589 0100     		.2byte	0x1
 5834 058b 52       		.byte	0x52
 5835 058c 9C000000 		.4byte	.LVL106
 5836 0590 A0000000 		.4byte	.LVL107
 5837 0594 0100     		.2byte	0x1
 5838 0596 59       		.byte	0x59
 5839 0597 A0000000 		.4byte	.LVL107
 5840 059b A9000000 		.4byte	.LVL109-1
 5841 059f 0100     		.2byte	0x1
 5842 05a1 52       		.byte	0x52
 5843 05a2 A9000000 		.4byte	.LVL109-1
 5844 05a6 BA000000 		.4byte	.LVL112
 5845 05aa 0100     		.2byte	0x1
 5846 05ac 59       		.byte	0x59
 5847 05ad 00000000 		.4byte	0
 5848 05b1 00000000 		.4byte	0
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 157


 5849              	.LLST33:
 5850 05b5 14000000 		.4byte	.LVL79
 5851 05b9 16000000 		.4byte	.LVL80
 5852 05bd 0100     		.2byte	0x1
 5853 05bf 53       		.byte	0x53
 5854 05c0 16000000 		.4byte	.LVL80
 5855 05c4 C2000000 		.4byte	.LVL117
 5856 05c8 0100     		.2byte	0x1
 5857 05ca 5B       		.byte	0x5b
 5858 05cb 00000000 		.4byte	0
 5859 05cf 00000000 		.4byte	0
 5860              	.LLST34:
 5861 05d3 2E000000 		.4byte	.LVL85
 5862 05d7 52000000 		.4byte	.LVL94
 5863 05db 0100     		.2byte	0x1
 5864 05dd 53       		.byte	0x53
 5865 05de 74000000 		.4byte	.LVL101
 5866 05e2 BA000000 		.4byte	.LVL112
 5867 05e6 0100     		.2byte	0x1
 5868 05e8 54       		.byte	0x54
 5869 05e9 00000000 		.4byte	0
 5870 05ed 00000000 		.4byte	0
 5871              	.LLST35:
 5872 05f1 30000000 		.4byte	.LVL120
 5873 05f5 3A000000 		.4byte	.LVL122
 5874 05f9 0100     		.2byte	0x1
 5875 05fb 53       		.byte	0x53
 5876 05fc 3A000000 		.4byte	.LVL122
 5877 0600 3C000000 		.4byte	.LVL123
 5878 0604 0200     		.2byte	0x2
 5879 0606 75       		.byte	0x75
 5880 0607 00       		.sleb128 0
 5881 0608 7A000000 		.4byte	.LVL126
 5882 060c 86000000 		.4byte	.LVL128
 5883 0610 0100     		.2byte	0x1
 5884 0612 53       		.byte	0x53
 5885 0613 86000000 		.4byte	.LVL128
 5886 0617 88000000 		.4byte	.LVL129
 5887 061b 0500     		.2byte	0x5
 5888 061d 0C       		.byte	0xc
 5889 061e 94020B40 		.4byte	0x400b0294
 5890 0622 8A000000 		.4byte	.LVL130
 5891 0626 90000000 		.4byte	.LVL132
 5892 062a 0100     		.2byte	0x1
 5893 062c 53       		.byte	0x53
 5894 062d 90000000 		.4byte	.LVL132
 5895 0631 96000000 		.4byte	.LVL133
 5896 0635 0200     		.2byte	0x2
 5897 0637 75       		.byte	0x75
 5898 0638 00       		.sleb128 0
 5899 0639 00000000 		.4byte	0
 5900 063d 00000000 		.4byte	0
 5901              	.LLST36:
 5902 0641 00000000 		.4byte	.LVL137
 5903 0645 0F000000 		.4byte	.LVL139-1
 5904 0649 0100     		.2byte	0x1
 5905 064b 50       		.byte	0x50
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 158


 5906 064c 0F000000 		.4byte	.LVL139-1
 5907 0650 1E000000 		.4byte	.LVL142
 5908 0654 0100     		.2byte	0x1
 5909 0656 57       		.byte	0x57
 5910 0657 1E000000 		.4byte	.LVL142
 5911 065b 60000000 		.4byte	.LFE6
 5912 065f 0400     		.2byte	0x4
 5913 0661 F3       		.byte	0xf3
 5914 0662 01       		.uleb128 0x1
 5915 0663 50       		.byte	0x50
 5916 0664 9F       		.byte	0x9f
 5917 0665 00000000 		.4byte	0
 5918 0669 00000000 		.4byte	0
 5919              	.LLST37:
 5920 066d 10000000 		.4byte	.LVL139
 5921 0671 29000000 		.4byte	.LVL145-1
 5922 0675 0100     		.2byte	0x1
 5923 0677 50       		.byte	0x50
 5924 0678 2E000000 		.4byte	.LVL146
 5925 067c 45000000 		.4byte	.LVL151-1
 5926 0680 0100     		.2byte	0x1
 5927 0682 50       		.byte	0x50
 5928 0683 00000000 		.4byte	0
 5929 0687 00000000 		.4byte	0
 5930              	.LLST38:
 5931 068b 0C000000 		.4byte	.LVL138
 5932 068f 46000000 		.4byte	.LVL152
 5933 0693 0100     		.2byte	0x1
 5934 0695 55       		.byte	0x55
 5935 0696 00000000 		.4byte	0
 5936 069a 00000000 		.4byte	0
 5937              	.LLST39:
 5938 069e 14000000 		.4byte	.LVL140
 5939 06a2 29000000 		.4byte	.LVL145-1
 5940 06a6 0100     		.2byte	0x1
 5941 06a8 52       		.byte	0x52
 5942 06a9 00000000 		.4byte	0
 5943 06ad 00000000 		.4byte	0
 5944              	.LLST40:
 5945 06b1 32000000 		.4byte	.LVL147
 5946 06b5 45000000 		.4byte	.LVL151-1
 5947 06b9 0100     		.2byte	0x1
 5948 06bb 53       		.byte	0x53
 5949 06bc 00000000 		.4byte	0
 5950 06c0 00000000 		.4byte	0
 5951              	.LLST41:
 5952 06c4 00000000 		.4byte	.LVL153
 5953 06c8 08000000 		.4byte	.LVL154
 5954 06cc 0100     		.2byte	0x1
 5955 06ce 50       		.byte	0x50
 5956 06cf 08000000 		.4byte	.LVL154
 5957 06d3 19000000 		.4byte	.LVL158-1
 5958 06d7 0100     		.2byte	0x1
 5959 06d9 53       		.byte	0x53
 5960 06da 19000000 		.4byte	.LVL158-1
 5961 06de 2A000000 		.4byte	.LFE7
 5962 06e2 0400     		.2byte	0x4
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 159


 5963 06e4 F3       		.byte	0xf3
 5964 06e5 01       		.uleb128 0x1
 5965 06e6 50       		.byte	0x50
 5966 06e7 9F       		.byte	0x9f
 5967 06e8 00000000 		.4byte	0
 5968 06ec 00000000 		.4byte	0
 5969              	.LLST42:
 5970 06f0 00000000 		.4byte	.LVL153
 5971 06f4 16000000 		.4byte	.LVL157
 5972 06f8 0100     		.2byte	0x1
 5973 06fa 51       		.byte	0x51
 5974 06fb 16000000 		.4byte	.LVL157
 5975 06ff 2A000000 		.4byte	.LFE7
 5976 0703 0400     		.2byte	0x4
 5977 0705 F3       		.byte	0xf3
 5978 0706 01       		.uleb128 0x1
 5979 0707 51       		.byte	0x51
 5980 0708 9F       		.byte	0x9f
 5981 0709 00000000 		.4byte	0
 5982 070d 00000000 		.4byte	0
 5983              	.LLST43:
 5984 0711 00000000 		.4byte	.LVL153
 5985 0715 19000000 		.4byte	.LVL158-1
 5986 0719 0100     		.2byte	0x1
 5987 071b 52       		.byte	0x52
 5988 071c 19000000 		.4byte	.LVL158-1
 5989 0720 1C000000 		.4byte	.LVL159
 5990 0724 0100     		.2byte	0x1
 5991 0726 54       		.byte	0x54
 5992 0727 1C000000 		.4byte	.LVL159
 5993 072b 28000000 		.4byte	.LVL162
 5994 072f 0300     		.2byte	0x3
 5995 0731 74       		.byte	0x74
 5996 0732 05       		.sleb128 5
 5997 0733 9F       		.byte	0x9f
 5998 0734 28000000 		.4byte	.LVL162
 5999 0738 2A000000 		.4byte	.LFE7
 6000 073c 0400     		.2byte	0x4
 6001 073e F3       		.byte	0xf3
 6002 073f 01       		.uleb128 0x1
 6003 0740 52       		.byte	0x52
 6004 0741 9F       		.byte	0x9f
 6005 0742 00000000 		.4byte	0
 6006 0746 00000000 		.4byte	0
 6007              	.LLST44:
 6008 074a 0A000000 		.4byte	.LVL155
 6009 074e 19000000 		.4byte	.LVL158-1
 6010 0752 0100     		.2byte	0x1
 6011 0754 50       		.byte	0x50
 6012 0755 1A000000 		.4byte	.LVL158
 6013 0759 28000000 		.4byte	.LVL161
 6014 075d 0100     		.2byte	0x1
 6015 075f 50       		.byte	0x50
 6016 0760 00000000 		.4byte	0
 6017 0764 00000000 		.4byte	0
 6018              	.LLST45:
 6019 0768 10000000 		.4byte	.LVL164
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 160


 6020 076c 31000000 		.4byte	.LVL172-1
 6021 0770 0100     		.2byte	0x1
 6022 0772 51       		.byte	0x51
 6023 0773 00000000 		.4byte	0
 6024 0777 00000000 		.4byte	0
 6025              	.LLST46:
 6026 077b 12000000 		.4byte	.LVL165
 6027 077f 22000000 		.4byte	.LVL168
 6028 0783 0100     		.2byte	0x1
 6029 0785 53       		.byte	0x53
 6030 0786 22000000 		.4byte	.LVL168
 6031 078a 24000000 		.4byte	.LVL169
 6032 078e 0300     		.2byte	0x3
 6033 0790 73       		.byte	0x73
 6034 0791 05       		.sleb128 5
 6035 0792 9F       		.byte	0x9f
 6036 0793 00000000 		.4byte	0
 6037 0797 00000000 		.4byte	0
 6038              	.LLST47:
 6039 079b 14000000 		.4byte	.LVL166
 6040 079f 31000000 		.4byte	.LVL172-1
 6041 07a3 0100     		.2byte	0x1
 6042 07a5 50       		.byte	0x50
 6043 07a6 00000000 		.4byte	0
 6044 07aa 00000000 		.4byte	0
 6045              	.LLST48:
 6046 07ae 0E000000 		.4byte	.LVL163
 6047 07b2 12000000 		.4byte	.LVL165
 6048 07b6 0100     		.2byte	0x1
 6049 07b8 53       		.byte	0x53
 6050 07b9 00000000 		.4byte	0
 6051 07bd 00000000 		.4byte	0
 6052              	.LLST49:
 6053 07c1 00000000 		.4byte	.LVL173
 6054 07c5 06000000 		.4byte	.LVL174
 6055 07c9 0100     		.2byte	0x1
 6056 07cb 50       		.byte	0x50
 6057 07cc 06000000 		.4byte	.LVL174
 6058 07d0 0D000000 		.4byte	.LVL175-1
 6059 07d4 0100     		.2byte	0x1
 6060 07d6 53       		.byte	0x53
 6061 07d7 0D000000 		.4byte	.LVL175-1
 6062 07db 1C000000 		.4byte	.LFE9
 6063 07df 0400     		.2byte	0x4
 6064 07e1 F3       		.byte	0xf3
 6065 07e2 01       		.uleb128 0x1
 6066 07e3 50       		.byte	0x50
 6067 07e4 9F       		.byte	0x9f
 6068 07e5 00000000 		.4byte	0
 6069 07e9 00000000 		.4byte	0
 6070              	.LLST50:
 6071 07ed 0E000000 		.4byte	.LVL175
 6072 07f1 10000000 		.4byte	.LVL176
 6073 07f5 0100     		.2byte	0x1
 6074 07f7 50       		.byte	0x50
 6075 07f8 00000000 		.4byte	0
 6076 07fc 00000000 		.4byte	0
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 161


 6077              	.LLST51:
 6078 0800 06000000 		.4byte	.LVL174
 6079 0804 0D000000 		.4byte	.LVL175-1
 6080 0808 0100     		.2byte	0x1
 6081 080a 50       		.byte	0x50
 6082 080b 00000000 		.4byte	0
 6083 080f 00000000 		.4byte	0
 6084              	.LLST52:
 6085 0813 40000000 		.4byte	.LVL178
 6086 0817 44000000 		.4byte	.LVL179
 6087 081b 0300     		.2byte	0x3
 6088 081d 08       		.byte	0x8
 6089 081e F0       		.byte	0xf0
 6090 081f 9F       		.byte	0x9f
 6091 0820 44000000 		.4byte	.LVL179
 6092 0824 5A000000 		.4byte	.LVL181
 6093 0828 0100     		.2byte	0x1
 6094 082a 53       		.byte	0x53
 6095 082b 00000000 		.4byte	0
 6096 082f 00000000 		.4byte	0
 6097              	.LLST53:
 6098 0833 A4000000 		.4byte	.LVL184
 6099 0837 A8000000 		.4byte	.LVL185
 6100 083b 0300     		.2byte	0x3
 6101 083d 08       		.byte	0x8
 6102 083e F0       		.byte	0xf0
 6103 083f 9F       		.byte	0x9f
 6104 0840 A8000000 		.4byte	.LVL185
 6105 0844 BA000000 		.4byte	.LVL187
 6106 0848 0100     		.2byte	0x1
 6107 084a 53       		.byte	0x53
 6108 084b 00000000 		.4byte	0
 6109 084f 00000000 		.4byte	0
 6110              	.LLST54:
 6111 0853 00000000 		.4byte	.LVL190
 6112 0857 0B000000 		.4byte	.LVL193-1
 6113 085b 0100     		.2byte	0x1
 6114 085d 50       		.byte	0x50
 6115 085e 0B000000 		.4byte	.LVL193-1
 6116 0862 32000000 		.4byte	.LVL200
 6117 0866 0100     		.2byte	0x1
 6118 0868 54       		.byte	0x54
 6119 0869 32000000 		.4byte	.LVL200
 6120 086d 34000000 		.4byte	.LFE17
 6121 0871 0400     		.2byte	0x4
 6122 0873 F3       		.byte	0xf3
 6123 0874 01       		.uleb128 0x1
 6124 0875 50       		.byte	0x50
 6125 0876 9F       		.byte	0x9f
 6126 0877 00000000 		.4byte	0
 6127 087b 00000000 		.4byte	0
 6128              	.LLST55:
 6129 087f 10000000 		.4byte	.LVL194
 6130 0883 16000000 		.4byte	.LVL195
 6131 0887 0100     		.2byte	0x1
 6132 0889 53       		.byte	0x53
 6133 088a 18000000 		.4byte	.LVL196
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 162


 6134 088e 1E000000 		.4byte	.LVL197
 6135 0892 0100     		.2byte	0x1
 6136 0894 52       		.byte	0x52
 6137 0895 1E000000 		.4byte	.LVL197
 6138 0899 31000000 		.4byte	.LVL199-1
 6139 089d 0100     		.2byte	0x1
 6140 089f 53       		.byte	0x53
 6141 08a0 00000000 		.4byte	0
 6142 08a4 00000000 		.4byte	0
 6143              	.LLST56:
 6144 08a8 0C000000 		.4byte	.LVL193
 6145 08ac 31000000 		.4byte	.LVL199-1
 6146 08b0 0100     		.2byte	0x1
 6147 08b2 50       		.byte	0x50
 6148 08b3 00000000 		.4byte	0
 6149 08b7 00000000 		.4byte	0
 6150              	.LLST57:
 6151 08bb 06000000 		.4byte	.LVL191
 6152 08bf 32000000 		.4byte	.LVL201
 6153 08c3 0100     		.2byte	0x1
 6154 08c5 55       		.byte	0x55
 6155 08c6 00000000 		.4byte	0
 6156 08ca 00000000 		.4byte	0
 6157              	.LLST58:
 6158 08ce 08000000 		.4byte	.LVL192
 6159 08d2 20000000 		.4byte	.LVL198
 6160 08d6 0100     		.2byte	0x1
 6161 08d8 56       		.byte	0x56
 6162 08d9 00000000 		.4byte	0
 6163 08dd 00000000 		.4byte	0
 6164              	.LLST59:
 6165 08e1 0E000000 		.4byte	.LVL202
 6166 08e5 76000000 		.4byte	.LVL208
 6167 08e9 0100     		.2byte	0x1
 6168 08eb 57       		.byte	0x57
 6169 08ec 00000000 		.4byte	0
 6170 08f0 00000000 		.4byte	0
 6171              	.LLST60:
 6172 08f4 00000000 		.4byte	.LVL209
 6173 08f8 04000000 		.4byte	.LVL210
 6174 08fc 0100     		.2byte	0x1
 6175 08fe 50       		.byte	0x50
 6176 08ff 04000000 		.4byte	.LVL210
 6177 0903 24000000 		.4byte	.LFE15
 6178 0907 0400     		.2byte	0x4
 6179 0909 F3       		.byte	0xf3
 6180 090a 01       		.uleb128 0x1
 6181 090b 50       		.byte	0x50
 6182 090c 9F       		.byte	0x9f
 6183 090d 00000000 		.4byte	0
 6184 0911 00000000 		.4byte	0
 6185              	.LLST61:
 6186 0915 00000000 		.4byte	.LVL209
 6187 0919 0C000000 		.4byte	.LVL211
 6188 091d 0100     		.2byte	0x1
 6189 091f 51       		.byte	0x51
 6190 0920 0C000000 		.4byte	.LVL211
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 163


 6191 0924 24000000 		.4byte	.LFE15
 6192 0928 0400     		.2byte	0x4
 6193 092a F3       		.byte	0xf3
 6194 092b 01       		.uleb128 0x1
 6195 092c 51       		.byte	0x51
 6196 092d 9F       		.byte	0x9f
 6197 092e 00000000 		.4byte	0
 6198 0932 00000000 		.4byte	0
 6199              	.LLST62:
 6200 0936 00000000 		.4byte	.LVL213
 6201 093a 0B000000 		.4byte	.LVL216-1
 6202 093e 0100     		.2byte	0x1
 6203 0940 50       		.byte	0x50
 6204 0941 0B000000 		.4byte	.LVL216-1
 6205 0945 50000000 		.4byte	.LVL227
 6206 0949 0100     		.2byte	0x1
 6207 094b 54       		.byte	0x54
 6208 094c 50000000 		.4byte	.LVL227
 6209 0950 64000000 		.4byte	.LFE18
 6210 0954 0400     		.2byte	0x4
 6211 0956 F3       		.byte	0xf3
 6212 0957 01       		.uleb128 0x1
 6213 0958 50       		.byte	0x50
 6214 0959 9F       		.byte	0x9f
 6215 095a 00000000 		.4byte	0
 6216 095e 00000000 		.4byte	0
 6217              	.LLST63:
 6218 0962 0C000000 		.4byte	.LVL216
 6219 0966 5B000000 		.4byte	.LVL228-1
 6220 096a 0100     		.2byte	0x1
 6221 096c 50       		.byte	0x50
 6222 096d 00000000 		.4byte	0
 6223 0971 00000000 		.4byte	0
 6224              	.LLST64:
 6225 0975 06000000 		.4byte	.LVL214
 6226 0979 5C000000 		.4byte	.LVL230
 6227 097d 0100     		.2byte	0x1
 6228 097f 56       		.byte	0x56
 6229 0980 00000000 		.4byte	0
 6230 0984 00000000 		.4byte	0
 6231              	.LLST65:
 6232 0988 08000000 		.4byte	.LVL215
 6233 098c 5C000000 		.4byte	.LVL229
 6234 0990 0100     		.2byte	0x1
 6235 0992 55       		.byte	0x55
 6236 0993 00000000 		.4byte	0
 6237 0997 00000000 		.4byte	0
 6238              	.LLST66:
 6239 099b 10000000 		.4byte	.LVL217
 6240 099f 4C000000 		.4byte	.LVL226
 6241 09a3 0100     		.2byte	0x1
 6242 09a5 51       		.byte	0x51
 6243 09a6 00000000 		.4byte	0
 6244 09aa 00000000 		.4byte	0
 6245              	.LLST67:
 6246 09ae 1A000000 		.4byte	.LVL219
 6247 09b2 2E000000 		.4byte	.LVL221
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 164


 6248 09b6 0100     		.2byte	0x1
 6249 09b8 53       		.byte	0x53
 6250 09b9 38000000 		.4byte	.LVL223
 6251 09bd 4A000000 		.4byte	.LVL225
 6252 09c1 0100     		.2byte	0x1
 6253 09c3 53       		.byte	0x53
 6254 09c4 00000000 		.4byte	0
 6255 09c8 00000000 		.4byte	0
 6256              	.LLST68:
 6257 09cc 00000000 		.4byte	.LVL232
 6258 09d0 0C000000 		.4byte	.LVL234
 6259 09d4 0100     		.2byte	0x1
 6260 09d6 50       		.byte	0x50
 6261 09d7 0C000000 		.4byte	.LVL234
 6262 09db 54000000 		.4byte	.LFE10
 6263 09df 0400     		.2byte	0x4
 6264 09e1 F3       		.byte	0xf3
 6265 09e2 01       		.uleb128 0x1
 6266 09e3 50       		.byte	0x50
 6267 09e4 9F       		.byte	0x9f
 6268 09e5 00000000 		.4byte	0
 6269 09e9 00000000 		.4byte	0
 6270              	.LLST69:
 6271 09ed 0A000000 		.4byte	.LVL233
 6272 09f1 40000000 		.4byte	.LVL239
 6273 09f5 0100     		.2byte	0x1
 6274 09f7 55       		.byte	0x55
 6275 09f8 40000000 		.4byte	.LVL239
 6276 09fc 40000000 		.4byte	.LVL240
 6277 0a00 0A00     		.2byte	0xa
 6278 0a02 F3       		.byte	0xf3
 6279 0a03 01       		.uleb128 0x1
 6280 0a04 50       		.byte	0x50
 6281 0a05 35       		.byte	0x35
 6282 0a06 24       		.byte	0x24
 6283 0a07 76       		.byte	0x76
 6284 0a08 00       		.sleb128 0
 6285 0a09 22       		.byte	0x22
 6286 0a0a 23       		.byte	0x23
 6287 0a0b 04       		.uleb128 0x4
 6288 0a0c 00000000 		.4byte	0
 6289 0a10 00000000 		.4byte	0
 6290              	.LLST70:
 6291 0a14 00000000 		.4byte	.LVL241
 6292 0a18 25000000 		.4byte	.LVL244-1
 6293 0a1c 0100     		.2byte	0x1
 6294 0a1e 50       		.byte	0x50
 6295 0a1f 25000000 		.4byte	.LVL244-1
 6296 0a23 6C000000 		.4byte	.LFE11
 6297 0a27 0400     		.2byte	0x4
 6298 0a29 F3       		.byte	0xf3
 6299 0a2a 01       		.uleb128 0x1
 6300 0a2b 50       		.byte	0x50
 6301 0a2c 9F       		.byte	0x9f
 6302 0a2d 00000000 		.4byte	0
 6303 0a31 00000000 		.4byte	0
 6304              	.LLST71:
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 165


 6305 0a35 00000000 		.4byte	.LVL241
 6306 0a39 0C000000 		.4byte	.LVL243
 6307 0a3d 0100     		.2byte	0x1
 6308 0a3f 51       		.byte	0x51
 6309 0a40 0C000000 		.4byte	.LVL243
 6310 0a44 6C000000 		.4byte	.LFE11
 6311 0a48 0400     		.2byte	0x4
 6312 0a4a F3       		.byte	0xf3
 6313 0a4b 01       		.uleb128 0x1
 6314 0a4c 51       		.byte	0x51
 6315 0a4d 9F       		.byte	0x9f
 6316 0a4e 00000000 		.4byte	0
 6317 0a52 00000000 		.4byte	0
 6318              	.LLST72:
 6319 0a56 0A000000 		.4byte	.LVL242
 6320 0a5a 50000000 		.4byte	.LVL248
 6321 0a5e 0100     		.2byte	0x1
 6322 0a60 55       		.byte	0x55
 6323 0a61 00000000 		.4byte	0
 6324 0a65 00000000 		.4byte	0
 6325              	.LLST73:
 6326 0a69 00000000 		.4byte	.LVL249
 6327 0a6d 1C000000 		.4byte	.LVL256
 6328 0a71 0100     		.2byte	0x1
 6329 0a73 50       		.byte	0x50
 6330 0a74 1C000000 		.4byte	.LVL256
 6331 0a78 60010000 		.4byte	.LFE22
 6332 0a7c 0200     		.2byte	0x2
 6333 0a7e 91       		.byte	0x91
 6334 0a7f 5C       		.sleb128 -36
 6335 0a80 00000000 		.4byte	0
 6336 0a84 00000000 		.4byte	0
 6337              	.LLST74:
 6338 0a88 00000000 		.4byte	.LVL249
 6339 0a8c 36000000 		.4byte	.LVL261
 6340 0a90 0100     		.2byte	0x1
 6341 0a92 51       		.byte	0x51
 6342 0a93 36000000 		.4byte	.LVL261
 6343 0a97 60010000 		.4byte	.LFE22
 6344 0a9b 0400     		.2byte	0x4
 6345 0a9d F3       		.byte	0xf3
 6346 0a9e 01       		.uleb128 0x1
 6347 0a9f 51       		.byte	0x51
 6348 0aa0 9F       		.byte	0x9f
 6349 0aa1 00000000 		.4byte	0
 6350 0aa5 00000000 		.4byte	0
 6351              	.LLST75:
 6352 0aa9 40000000 		.4byte	.LVL263
 6353 0aad 46000000 		.4byte	.LVL264
 6354 0ab1 0200     		.2byte	0x2
 6355 0ab3 30       		.byte	0x30
 6356 0ab4 9F       		.byte	0x9f
 6357 0ab5 46000000 		.4byte	.LVL264
 6358 0ab9 4C000000 		.4byte	.LVL265
 6359 0abd 0100     		.2byte	0x1
 6360 0abf 52       		.byte	0x52
 6361 0ac0 4C000000 		.4byte	.LVL265
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 166


 6362 0ac4 4C010000 		.4byte	.LVL300
 6363 0ac8 0200     		.2byte	0x2
 6364 0aca 7D       		.byte	0x7d
 6365 0acb 00       		.sleb128 0
 6366 0acc 4C010000 		.4byte	.LVL300
 6367 0ad0 60010000 		.4byte	.LFE22
 6368 0ad4 0200     		.2byte	0x2
 6369 0ad6 91       		.byte	0x91
 6370 0ad7 58       		.sleb128 -40
 6371 0ad8 00000000 		.4byte	0
 6372 0adc 00000000 		.4byte	0
 6373              	.LLST76:
 6374 0ae0 18000000 		.4byte	.LVL254
 6375 0ae4 1C000000 		.4byte	.LVL256
 6376 0ae8 0200     		.2byte	0x2
 6377 0aea 31       		.byte	0x31
 6378 0aeb 9F       		.byte	0x9f
 6379 0aec 1C000000 		.4byte	.LVL256
 6380 0af0 24000000 		.4byte	.LVL258
 6381 0af4 0100     		.2byte	0x1
 6382 0af6 52       		.byte	0x52
 6383 0af7 24000000 		.4byte	.LVL258
 6384 0afb 26000000 		.4byte	.LVL259
 6385 0aff 0100     		.2byte	0x1
 6386 0b01 53       		.byte	0x53
 6387 0b02 26000000 		.4byte	.LVL259
 6388 0b06 2E000000 		.4byte	.LVL260
 6389 0b0a 0100     		.2byte	0x1
 6390 0b0c 52       		.byte	0x52
 6391 0b0d 5C000000 		.4byte	.LVL266
 6392 0b11 60000000 		.4byte	.LVL267
 6393 0b15 0200     		.2byte	0x2
 6394 0b17 31       		.byte	0x31
 6395 0b18 9F       		.byte	0x9f
 6396 0b19 60000000 		.4byte	.LVL267
 6397 0b1d 6A000000 		.4byte	.LVL268
 6398 0b21 0100     		.2byte	0x1
 6399 0b23 52       		.byte	0x52
 6400 0b24 6A000000 		.4byte	.LVL268
 6401 0b28 6C000000 		.4byte	.LVL269
 6402 0b2c 0100     		.2byte	0x1
 6403 0b2e 53       		.byte	0x53
 6404 0b2f 6C000000 		.4byte	.LVL269
 6405 0b33 79000000 		.4byte	.LVL271-1
 6406 0b37 0100     		.2byte	0x1
 6407 0b39 52       		.byte	0x52
 6408 0b3a 9A000000 		.4byte	.LVL277
 6409 0b3e AE000000 		.4byte	.LVL278
 6410 0b42 0100     		.2byte	0x1
 6411 0b44 52       		.byte	0x52
 6412 0b45 B0000000 		.4byte	.LVL279
 6413 0b49 B2000000 		.4byte	.LVL280
 6414 0b4d 0100     		.2byte	0x1
 6415 0b4f 53       		.byte	0x53
 6416 0b50 B2000000 		.4byte	.LVL280
 6417 0b54 B8000000 		.4byte	.LVL281
 6418 0b58 0100     		.2byte	0x1
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 167


 6419 0b5a 52       		.byte	0x52
 6420 0b5b B8000000 		.4byte	.LVL281
 6421 0b5f BC000000 		.4byte	.LVL282
 6422 0b63 0200     		.2byte	0x2
 6423 0b65 31       		.byte	0x31
 6424 0b66 9F       		.byte	0x9f
 6425 0b67 BC000000 		.4byte	.LVL282
 6426 0b6b DC000000 		.4byte	.LVL283
 6427 0b6f 0100     		.2byte	0x1
 6428 0b71 52       		.byte	0x52
 6429 0b72 DC000000 		.4byte	.LVL283
 6430 0b76 DE000000 		.4byte	.LVL284
 6431 0b7a 0100     		.2byte	0x1
 6432 0b7c 53       		.byte	0x53
 6433 0b7d DE000000 		.4byte	.LVL284
 6434 0b81 FA000000 		.4byte	.LVL287
 6435 0b85 0100     		.2byte	0x1
 6436 0b87 52       		.byte	0x52
 6437 0b88 FA000000 		.4byte	.LVL287
 6438 0b8c FC000000 		.4byte	.LVL288
 6439 0b90 0100     		.2byte	0x1
 6440 0b92 53       		.byte	0x53
 6441 0b93 FC000000 		.4byte	.LVL288
 6442 0b97 07010000 		.4byte	.LVL289-1
 6443 0b9b 0100     		.2byte	0x1
 6444 0b9d 52       		.byte	0x52
 6445 0b9e 38010000 		.4byte	.LVL295
 6446 0ba2 44010000 		.4byte	.LVL298
 6447 0ba6 0100     		.2byte	0x1
 6448 0ba8 52       		.byte	0x52
 6449 0ba9 44010000 		.4byte	.LVL298
 6450 0bad 46010000 		.4byte	.LVL299
 6451 0bb1 0100     		.2byte	0x1
 6452 0bb3 53       		.byte	0x53
 6453 0bb4 46010000 		.4byte	.LVL299
 6454 0bb8 60010000 		.4byte	.LFE22
 6455 0bbc 0100     		.2byte	0x1
 6456 0bbe 52       		.byte	0x52
 6457 0bbf 00000000 		.4byte	0
 6458 0bc3 00000000 		.4byte	0
 6459              	.LLST77:
 6460 0bc7 5C000000 		.4byte	.LVL266
 6461 0bcb 72000000 		.4byte	.LVL270
 6462 0bcf 0300     		.2byte	0x3
 6463 0bd1 08       		.byte	0x8
 6464 0bd2 40       		.byte	0x40
 6465 0bd3 9F       		.byte	0x9f
 6466 0bd4 72000000 		.4byte	.LVL270
 6467 0bd8 24010000 		.4byte	.LVL294
 6468 0bdc 0100     		.2byte	0x1
 6469 0bde 54       		.byte	0x54
 6470 0bdf 00000000 		.4byte	0
 6471 0be3 00000000 		.4byte	0
 6472              	.LLST78:
 6473 0be7 40000000 		.4byte	.LVL263
 6474 0beb 46000000 		.4byte	.LVL264
 6475 0bef 0100     		.2byte	0x1
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 168


 6476 0bf1 50       		.byte	0x50
 6477 0bf2 46000000 		.4byte	.LVL264
 6478 0bf6 4C010000 		.4byte	.LVL302
 6479 0bfa 0100     		.2byte	0x1
 6480 0bfc 56       		.byte	0x56
 6481 0bfd 00000000 		.4byte	0
 6482 0c01 00000000 		.4byte	0
 6483              	.LLST79:
 6484 0c05 84000000 		.4byte	.LVL273
 6485 0c09 88000000 		.4byte	.LVL274
 6486 0c0d 0600     		.2byte	0x6
 6487 0c0f 0C       		.byte	0xc
 6488 0c10 00A60E00 		.4byte	0xea600
 6489 0c14 9F       		.byte	0x9f
 6490 0c15 88000000 		.4byte	.LVL274
 6491 0c19 98000000 		.4byte	.LVL276
 6492 0c1d 0100     		.2byte	0x1
 6493 0c1f 53       		.byte	0x53
 6494 0c20 98000000 		.4byte	.LVL276
 6495 0c24 9A000000 		.4byte	.LVL277
 6496 0c28 0300     		.2byte	0x3
 6497 0c2a 73       		.byte	0x73
 6498 0c2b 7F       		.sleb128 -1
 6499 0c2c 9F       		.byte	0x9f
 6500 0c2d AE000000 		.4byte	.LVL278
 6501 0c31 B0000000 		.4byte	.LVL279
 6502 0c35 0100     		.2byte	0x1
 6503 0c37 53       		.byte	0x53
 6504 0c38 0C010000 		.4byte	.LVL290
 6505 0c3c 10010000 		.4byte	.LVL291
 6506 0c40 0600     		.2byte	0x6
 6507 0c42 0C       		.byte	0xc
 6508 0c43 00A60E00 		.4byte	0xea600
 6509 0c47 9F       		.byte	0x9f
 6510 0c48 10010000 		.4byte	.LVL291
 6511 0c4c 20010000 		.4byte	.LVL293
 6512 0c50 0100     		.2byte	0x1
 6513 0c52 53       		.byte	0x53
 6514 0c53 00000000 		.4byte	0
 6515 0c57 00000000 		.4byte	0
 6516              	.LLST80:
 6517 0c5b 18000000 		.4byte	.LVL254
 6518 0c5f 4C010000 		.4byte	.LVL301
 6519 0c63 0100     		.2byte	0x1
 6520 0c65 55       		.byte	0x55
 6521 0c66 4C010000 		.4byte	.LVL301
 6522 0c6a 4C010000 		.4byte	.LVL303
 6523 0c6e 0300     		.2byte	0x3
 6524 0c70 7A       		.byte	0x7a
 6525 0c71 09       		.sleb128 9
 6526 0c72 9F       		.byte	0x9f
 6527 0c73 00000000 		.4byte	0
 6528 0c77 00000000 		.4byte	0
 6529              	.LLST81:
 6530 0c7b 18000000 		.4byte	.LVL254
 6531 0c7f 20000000 		.4byte	.LVL257
 6532 0c83 0300     		.2byte	0x3
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 169


 6533 0c85 91       		.byte	0x91
 6534 0c86 64       		.sleb128 -28
 6535 0c87 9F       		.byte	0x9f
 6536 0c88 20000000 		.4byte	.LVL257
 6537 0c8c 24000000 		.4byte	.LVL258
 6538 0c90 0100     		.2byte	0x1
 6539 0c92 53       		.byte	0x53
 6540 0c93 24000000 		.4byte	.LVL258
 6541 0c97 EC000000 		.4byte	.LVL285
 6542 0c9b 0300     		.2byte	0x3
 6543 0c9d 91       		.byte	0x91
 6544 0c9e 64       		.sleb128 -28
 6545 0c9f 9F       		.byte	0x9f
 6546 0ca0 EC000000 		.4byte	.LVL285
 6547 0ca4 EE000000 		.4byte	.LVL286
 6548 0ca8 0100     		.2byte	0x1
 6549 0caa 53       		.byte	0x53
 6550 0cab EE000000 		.4byte	.LVL286
 6551 0caf 3A010000 		.4byte	.LVL296
 6552 0cb3 0300     		.2byte	0x3
 6553 0cb5 91       		.byte	0x91
 6554 0cb6 64       		.sleb128 -28
 6555 0cb7 9F       		.byte	0x9f
 6556 0cb8 3A010000 		.4byte	.LVL296
 6557 0cbc 3E010000 		.4byte	.LVL297
 6558 0cc0 0100     		.2byte	0x1
 6559 0cc2 53       		.byte	0x53
 6560 0cc3 3E010000 		.4byte	.LVL297
 6561 0cc7 60010000 		.4byte	.LFE22
 6562 0ccb 0300     		.2byte	0x3
 6563 0ccd 91       		.byte	0x91
 6564 0cce 64       		.sleb128 -28
 6565 0ccf 9F       		.byte	0x9f
 6566 0cd0 00000000 		.4byte	0
 6567 0cd4 00000000 		.4byte	0
 6568              	.LLST82:
 6569 0cd8 5C000000 		.4byte	.LVL266
 6570 0cdc 24010000 		.4byte	.LVL294
 6571 0ce0 0100     		.2byte	0x1
 6572 0ce2 57       		.byte	0x57
 6573 0ce3 00000000 		.4byte	0
 6574 0ce7 00000000 		.4byte	0
 6575              	.LLST83:
 6576 0ceb 10000000 		.4byte	.LVL251
 6577 0cef 12000000 		.4byte	.LVL252
 6578 0cf3 0100     		.2byte	0x1
 6579 0cf5 53       		.byte	0x53
 6580 0cf6 00000000 		.4byte	0
 6581 0cfa 00000000 		.4byte	0
 6582              	.LLST84:
 6583 0cfe 14000000 		.4byte	.LVL253
 6584 0d02 1A000000 		.4byte	.LVL255
 6585 0d06 0100     		.2byte	0x1
 6586 0d08 53       		.byte	0x53
 6587 0d09 1A000000 		.4byte	.LVL255
 6588 0d0d 4C010000 		.4byte	.LVL303
 6589 0d11 0100     		.2byte	0x1
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 170


 6590 0d13 5A       		.byte	0x5a
 6591 0d14 00000000 		.4byte	0
 6592 0d18 00000000 		.4byte	0
 6593              	.LLST85:
 6594 0d1c 00000000 		.4byte	.LVL304
 6595 0d20 04000000 		.4byte	.LVL305
 6596 0d24 0100     		.2byte	0x1
 6597 0d26 50       		.byte	0x50
 6598 0d27 04000000 		.4byte	.LVL305
 6599 0d2b 24000000 		.4byte	.LFE16
 6600 0d2f 0400     		.2byte	0x4
 6601 0d31 F3       		.byte	0xf3
 6602 0d32 01       		.uleb128 0x1
 6603 0d33 50       		.byte	0x50
 6604 0d34 9F       		.byte	0x9f
 6605 0d35 00000000 		.4byte	0
 6606 0d39 00000000 		.4byte	0
 6607              	.LLST86:
 6608 0d3d 00000000 		.4byte	.LVL304
 6609 0d41 0C000000 		.4byte	.LVL306
 6610 0d45 0100     		.2byte	0x1
 6611 0d47 51       		.byte	0x51
 6612 0d48 0C000000 		.4byte	.LVL306
 6613 0d4c 24000000 		.4byte	.LFE16
 6614 0d50 0400     		.2byte	0x4
 6615 0d52 F3       		.byte	0xf3
 6616 0d53 01       		.uleb128 0x1
 6617 0d54 51       		.byte	0x51
 6618 0d55 9F       		.byte	0x9f
 6619 0d56 00000000 		.4byte	0
 6620 0d5a 00000000 		.4byte	0
 6621              	.LLST87:
 6622 0d5e 00000000 		.4byte	.LVL308
 6623 0d62 1A000000 		.4byte	.LVL311
 6624 0d66 0100     		.2byte	0x1
 6625 0d68 50       		.byte	0x50
 6626 0d69 1A000000 		.4byte	.LVL311
 6627 0d6d 5E000000 		.4byte	.LVL321
 6628 0d71 0100     		.2byte	0x1
 6629 0d73 54       		.byte	0x54
 6630 0d74 5E000000 		.4byte	.LVL321
 6631 0d78 60000000 		.4byte	.LVL322
 6632 0d7c 0100     		.2byte	0x1
 6633 0d7e 50       		.byte	0x50
 6634 0d7f 60000000 		.4byte	.LVL322
 6635 0d83 64000000 		.4byte	.LVL325
 6636 0d87 0100     		.2byte	0x1
 6637 0d89 54       		.byte	0x54
 6638 0d8a 64000000 		.4byte	.LVL325
 6639 0d8e 74000000 		.4byte	.LFE23
 6640 0d92 0400     		.2byte	0x4
 6641 0d94 F3       		.byte	0xf3
 6642 0d95 01       		.uleb128 0x1
 6643 0d96 50       		.byte	0x50
 6644 0d97 9F       		.byte	0x9f
 6645 0d98 00000000 		.4byte	0
 6646 0d9c 00000000 		.4byte	0
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 171


 6647              	.LLST88:
 6648 0da0 00000000 		.4byte	.LVL308
 6649 0da4 1A000000 		.4byte	.LVL311
 6650 0da8 0100     		.2byte	0x1
 6651 0daa 51       		.byte	0x51
 6652 0dab 1A000000 		.4byte	.LVL311
 6653 0daf 5E000000 		.4byte	.LVL321
 6654 0db3 0100     		.2byte	0x1
 6655 0db5 55       		.byte	0x55
 6656 0db6 5E000000 		.4byte	.LVL321
 6657 0dba 62000000 		.4byte	.LVL323
 6658 0dbe 0100     		.2byte	0x1
 6659 0dc0 51       		.byte	0x51
 6660 0dc1 62000000 		.4byte	.LVL323
 6661 0dc5 64000000 		.4byte	.LVL326
 6662 0dc9 0100     		.2byte	0x1
 6663 0dcb 55       		.byte	0x55
 6664 0dcc 64000000 		.4byte	.LVL326
 6665 0dd0 74000000 		.4byte	.LFE23
 6666 0dd4 0400     		.2byte	0x4
 6667 0dd6 F3       		.byte	0xf3
 6668 0dd7 01       		.uleb128 0x1
 6669 0dd8 51       		.byte	0x51
 6670 0dd9 9F       		.byte	0x9f
 6671 0dda 00000000 		.4byte	0
 6672 0dde 00000000 		.4byte	0
 6673              	.LLST89:
 6674 0de2 06000000 		.4byte	.LVL309
 6675 0de6 5C000000 		.4byte	.LVL320
 6676 0dea 0200     		.2byte	0x2
 6677 0dec 30       		.byte	0x30
 6678 0ded 9F       		.byte	0x9f
 6679 0dee 5C000000 		.4byte	.LVL320
 6680 0df2 5E000000 		.4byte	.LVL321
 6681 0df6 0100     		.2byte	0x1
 6682 0df8 50       		.byte	0x50
 6683 0df9 5E000000 		.4byte	.LVL321
 6684 0dfd 64000000 		.4byte	.LVL324
 6685 0e01 0200     		.2byte	0x2
 6686 0e03 30       		.byte	0x30
 6687 0e04 9F       		.byte	0x9f
 6688 0e05 64000000 		.4byte	.LVL324
 6689 0e09 74000000 		.4byte	.LFE23
 6690 0e0d 0100     		.2byte	0x1
 6691 0e0f 50       		.byte	0x50
 6692 0e10 00000000 		.4byte	0
 6693 0e14 00000000 		.4byte	0
 6694              	.LLST90:
 6695 0e18 3E000000 		.4byte	.LVL317
 6696 0e1c 42000000 		.4byte	.LVL318
 6697 0e20 0600     		.2byte	0x6
 6698 0e22 0C       		.byte	0xc
 6699 0e23 00366E01 		.4byte	0x16e3600
 6700 0e27 9F       		.byte	0x9f
 6701 0e28 42000000 		.4byte	.LVL318
 6702 0e2c 5B000000 		.4byte	.LVL320-1
 6703 0e30 0100     		.2byte	0x1
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 172


 6704 0e32 53       		.byte	0x53
 6705 0e33 62000000 		.4byte	.LVL323
 6706 0e37 64000000 		.4byte	.LVL324
 6707 0e3b 0100     		.2byte	0x1
 6708 0e3d 53       		.byte	0x53
 6709 0e3e 00000000 		.4byte	0
 6710 0e42 00000000 		.4byte	0
 6711              	.LLST91:
 6712 0e46 28000000 		.4byte	.LVL313
 6713 0e4a 30000000 		.4byte	.LVL314
 6714 0e4e 0100     		.2byte	0x1
 6715 0e50 50       		.byte	0x50
 6716 0e51 00000000 		.4byte	0
 6717 0e55 00000000 		.4byte	0
 6718              	.LLST92:
 6719 0e59 0C000000 		.4byte	.LVL310
 6720 0e5d 64000000 		.4byte	.LVL327
 6721 0e61 0100     		.2byte	0x1
 6722 0e63 56       		.byte	0x56
 6723 0e64 00000000 		.4byte	0
 6724 0e68 00000000 		.4byte	0
 6725              		.section	.debug_aranges,"",%progbits
 6726 0000 CC000000 		.4byte	0xcc
 6727 0004 0200     		.2byte	0x2
 6728 0006 00000000 		.4byte	.Ldebug_info0
 6729 000a 04       		.byte	0x4
 6730 000b 00       		.byte	0
 6731 000c 0000     		.2byte	0
 6732 000e 0000     		.2byte	0
 6733 0010 00000000 		.4byte	.LFB1
 6734 0014 10000000 		.4byte	.LFE1-.LFB1
 6735 0018 00000000 		.4byte	.LFB2
 6736 001c 50000000 		.4byte	.LFE2-.LFB2
 6737 0020 00000000 		.4byte	.LFB3
 6738 0024 1C000000 		.4byte	.LFE3-.LFB3
 6739 0028 00000000 		.4byte	.LFB19
 6740 002c 98000000 		.4byte	.LFE19-.LFB19
 6741 0030 00000000 		.4byte	.LFB20
 6742 0034 9C000000 		.4byte	.LFE20-.LFB20
 6743 0038 00000000 		.4byte	.LFB21
 6744 003c CC000000 		.4byte	.LFE21-.LFB21
 6745 0040 00000000 		.4byte	.LFB4
 6746 0044 3C010000 		.4byte	.LFE4-.LFB4
 6747 0048 00000000 		.4byte	.LFB6
 6748 004c 60000000 		.4byte	.LFE6-.LFB6
 6749 0050 00000000 		.4byte	.LFB7
 6750 0054 2A000000 		.4byte	.LFE7-.LFB7
 6751 0058 00000000 		.4byte	.LFB8
 6752 005c 3C000000 		.4byte	.LFE8-.LFB8
 6753 0060 00000000 		.4byte	.LFB9
 6754 0064 1C000000 		.4byte	.LFE9-.LFB9
 6755 0068 00000000 		.4byte	.LFB12
 6756 006c F8000000 		.4byte	.LFE12-.LFB12
 6757 0070 00000000 		.4byte	.LFB13
 6758 0074 20000000 		.4byte	.LFE13-.LFB13
 6759 0078 00000000 		.4byte	.LFB17
 6760 007c 34000000 		.4byte	.LFE17-.LFB17
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 173


 6761 0080 00000000 		.4byte	.LFB14
 6762 0084 94000000 		.4byte	.LFE14-.LFB14
 6763 0088 00000000 		.4byte	.LFB15
 6764 008c 24000000 		.4byte	.LFE15-.LFB15
 6765 0090 00000000 		.4byte	.LFB18
 6766 0094 64000000 		.4byte	.LFE18-.LFB18
 6767 0098 00000000 		.4byte	.LFB5
 6768 009c 24000000 		.4byte	.LFE5-.LFB5
 6769 00a0 00000000 		.4byte	.LFB10
 6770 00a4 54000000 		.4byte	.LFE10-.LFB10
 6771 00a8 00000000 		.4byte	.LFB11
 6772 00ac 6C000000 		.4byte	.LFE11-.LFB11
 6773 00b0 00000000 		.4byte	.LFB22
 6774 00b4 60010000 		.4byte	.LFE22-.LFB22
 6775 00b8 00000000 		.4byte	.LFB16
 6776 00bc 24000000 		.4byte	.LFE16-.LFB16
 6777 00c0 00000000 		.4byte	.LFB23
 6778 00c4 74000000 		.4byte	.LFE23-.LFB23
 6779 00c8 00000000 		.4byte	0
 6780 00cc 00000000 		.4byte	0
 6781              		.section	.debug_ranges,"",%progbits
 6782              	.Ldebug_ranges0:
 6783 0000 00000000 		.4byte	.LFB1
 6784 0004 10000000 		.4byte	.LFE1
 6785 0008 00000000 		.4byte	.LFB2
 6786 000c 50000000 		.4byte	.LFE2
 6787 0010 00000000 		.4byte	.LFB3
 6788 0014 1C000000 		.4byte	.LFE3
 6789 0018 00000000 		.4byte	.LFB19
 6790 001c 98000000 		.4byte	.LFE19
 6791 0020 00000000 		.4byte	.LFB20
 6792 0024 9C000000 		.4byte	.LFE20
 6793 0028 00000000 		.4byte	.LFB21
 6794 002c CC000000 		.4byte	.LFE21
 6795 0030 00000000 		.4byte	.LFB4
 6796 0034 3C010000 		.4byte	.LFE4
 6797 0038 00000000 		.4byte	.LFB6
 6798 003c 60000000 		.4byte	.LFE6
 6799 0040 00000000 		.4byte	.LFB7
 6800 0044 2A000000 		.4byte	.LFE7
 6801 0048 00000000 		.4byte	.LFB8
 6802 004c 3C000000 		.4byte	.LFE8
 6803 0050 00000000 		.4byte	.LFB9
 6804 0054 1C000000 		.4byte	.LFE9
 6805 0058 00000000 		.4byte	.LFB12
 6806 005c F8000000 		.4byte	.LFE12
 6807 0060 00000000 		.4byte	.LFB13
 6808 0064 20000000 		.4byte	.LFE13
 6809 0068 00000000 		.4byte	.LFB17
 6810 006c 34000000 		.4byte	.LFE17
 6811 0070 00000000 		.4byte	.LFB14
 6812 0074 94000000 		.4byte	.LFE14
 6813 0078 00000000 		.4byte	.LFB15
 6814 007c 24000000 		.4byte	.LFE15
 6815 0080 00000000 		.4byte	.LFB18
 6816 0084 64000000 		.4byte	.LFE18
 6817 0088 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 174


 6818 008c 24000000 		.4byte	.LFE5
 6819 0090 00000000 		.4byte	.LFB10
 6820 0094 54000000 		.4byte	.LFE10
 6821 0098 00000000 		.4byte	.LFB11
 6822 009c 6C000000 		.4byte	.LFE11
 6823 00a0 00000000 		.4byte	.LFB22
 6824 00a4 60010000 		.4byte	.LFE22
 6825 00a8 00000000 		.4byte	.LFB16
 6826 00ac 24000000 		.4byte	.LFE16
 6827 00b0 00000000 		.4byte	.LFB23
 6828 00b4 74000000 		.4byte	.LFE23
 6829 00b8 00000000 		.4byte	0
 6830 00bc 00000000 		.4byte	0
 6831              		.section	.debug_line,"",%progbits
 6832              	.Ldebug_line0:
 6833 0000 E3040000 		.section	.debug_str,"MS",%progbits,1
 6833      0200D600 
 6833      00000201 
 6833      FB0E0D00 
 6833      01010101 
 6834              	.LASF139:
 6835 0000 69646163 		.ascii	"idacBRegValue\000"
 6835      42526567 
 6835      56616C75 
 6835      6500
 6836              	.LASF150:
 6837 000e 736E7341 		.ascii	"snsAddrPtr\000"
 6837      64647250 
 6837      747200
 6838              	.LASF143:
 6839 0019 43617053 		.ascii	"CapSense_SsCSDCalculateScanDuration\000"
 6839      656E7365 
 6839      5F537343 
 6839      53444361 
 6839      6C63756C 
 6840              	.LASF175:
 6841 003d 43617053 		.ascii	"CapSense_widgetIndex\000"
 6841      656E7365 
 6841      5F776964 
 6841      67657449 
 6841      6E646578 
 6842              	.LASF72:
 6843 0052 736E7254 		.ascii	"snrTestWidgetId\000"
 6843      65737457 
 6843      69646765 
 6843      74496400 
 6844              	.LASF27:
 6845 0062 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 6845      656E7365 
 6845      5F554E44 
 6845      4546494E 
 6845      45445F45 
 6846              	.LASF196:
 6847 0077 463A5C43 		.ascii	"F:\\CapSense_Tasks\\Task_2.cydsn\000"
 6847      61705365 
 6847      6E73655F 
 6847      5461736B 
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 175


 6847      735C5461 
 6848              	.LASF131:
 6849 0096 694D6F64 		.ascii	"iMod\000"
 6849      00
 6850              	.LASF8:
 6851 009b 756E7369 		.ascii	"unsigned int\000"
 6851      676E6564 
 6851      20696E74 
 6851      00
 6852              	.LASF63:
 6853 00a8 7363616E 		.ascii	"scanCounter\000"
 6853      436F756E 
 6853      74657200 
 6854              	.LASF123:
 6855 00b4 72617469 		.ascii	"ratio\000"
 6855      6F00
 6856              	.LASF61:
 6857 00ba 6877436C 		.ascii	"hwClock\000"
 6857      6F636B00 
 6858              	.LASF76:
 6859 00c2 7363616E 		.ascii	"scanCsdISC\000"
 6859      43736449 
 6859      534300
 6860              	.LASF136:
 6861 00cd 696E7465 		.ascii	"interruptState\000"
 6861      72727570 
 6861      74537461 
 6861      746500
 6862              	.LASF197:
 6863 00dc 43617053 		.ascii	"CapSense_SsCSDConfigIDACs\000"
 6863      656E7365 
 6863      5F537343 
 6863      5344436F 
 6863      6E666967 
 6864              	.LASF118:
 6865 00f6 70747246 		.ascii	"ptrFlashWidget\000"
 6865      6C617368 
 6865      57696467 
 6865      657400
 6866              	.LASF172:
 6867 0105 43617053 		.ascii	"CapSense_eleCsdDisconnectFlag\000"
 6867      656E7365 
 6867      5F656C65 
 6867      43736444 
 6867      6973636F 
 6868              	.LASF190:
 6869 0123 4379496E 		.ascii	"CyIntDisable\000"
 6869      74446973 
 6869      61626C65 
 6869      00
 6870              	.LASF185:
 6871 0130 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 6871      656E7365 
 6871      5F537353 
 6871      65744D6F 
 6871      64436C6B 
 6872              	.LASF152:
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 176


 6873 0151 70696E4D 		.ascii	"pinModeShift\000"
 6873      6F646553 
 6873      68696674 
 6873      00
 6874              	.LASF114:
 6875 015e 736E7349 		.ascii	"snsIndex\000"
 6875      6E646578 
 6875      00
 6876              	.LASF127:
 6877 0167 43617053 		.ascii	"CapSense_SsCSDNormalizeIdac\000"
 6877      656E7365 
 6877      5F537343 
 6877      53444E6F 
 6877      726D616C 
 6878              	.LASF51:
 6879 0183 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 6879      656E7365 
 6879      5F52414D 
 6879      5F57445F 
 6879      4C495354 
 6880              	.LASF156:
 6881 019f 73656E73 		.ascii	"sensorId\000"
 6881      6F724964 
 6881      00
 6882              	.LASF135:
 6883 01a8 70747257 		.ascii	"ptrWdgt\000"
 6883      64677400 
 6884              	.LASF40:
 6885 01b0 69646163 		.ascii	"idacGainIndex\000"
 6885      4761696E 
 6885      496E6465 
 6885      7800
 6886              	.LASF155:
 6887 01be 43617053 		.ascii	"CapSense_SsCSDConnectSensorExt\000"
 6887      656E7365 
 6887      5F537343 
 6887      5344436F 
 6887      6E6E6563 
 6888              	.LASF12:
 6889 01dd 666C6F61 		.ascii	"float\000"
 6889      7400
 6890              	.LASF144:
 6891 01e3 43617053 		.ascii	"CapSense_SsCSDTriggerScan\000"
 6891      656E7365 
 6891      5F537343 
 6891      53445472 
 6891      69676765 
 6892              	.LASF87:
 6893 01fd 73686966 		.ascii	"shift\000"
 6893      7400
 6894              	.LASF194:
 6895 0203 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6895      43313120 
 6895      352E342E 
 6895      31203230 
 6895      31363036 
 6896 0236 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 177


 6896      20726576 
 6896      6973696F 
 6896      6E203233 
 6896      37373135 
 6897 0269 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 6897      67202D66 
 6897      66756E63 
 6897      74696F6E 
 6897      2D736563 
 6898              	.LASF140:
 6899 0295 736E7343 		.ascii	"snsClkSrc\000"
 6899      6C6B5372 
 6899      6300
 6900              	.LASF146:
 6901 029f 77617463 		.ascii	"watchdogCounter\000"
 6901      68646F67 
 6901      436F756E 
 6901      74657200 
 6902              	.LASF161:
 6903 02af 43617053 		.ascii	"CapSense_CSDSetupWidget\000"
 6903      656E7365 
 6903      5F435344 
 6903      53657475 
 6903      70576964 
 6904              	.LASF153:
 6905 02c7 70696E48 		.ascii	"pinHSIOMShift\000"
 6905      53494F4D 
 6905      53686966 
 6905      7400
 6906              	.LASF191:
 6907 02d5 43794465 		.ascii	"CyDelayUs\000"
 6907      6C617955 
 6907      7300
 6908              	.LASF71:
 6909 02df 736E734C 		.ascii	"snsList\000"
 6909      69737400 
 6910              	.LASF192:
 6911 02e7 43617053 		.ascii	"CapSense_ISR_StartEx\000"
 6911      656E7365 
 6911      5F495352 
 6911      5F537461 
 6911      72744578 
 6912              	.LASF7:
 6913 02fc 6C6F6E67 		.ascii	"long long unsigned int\000"
 6913      206C6F6E 
 6913      6720756E 
 6913      7369676E 
 6913      65642069 
 6914              	.LASF176:
 6915 0313 43617053 		.ascii	"CapSense_sensorIndex\000"
 6915      656E7365 
 6915      5F73656E 
 6915      736F7249 
 6915      6E646578 
 6916              	.LASF88:
 6917 0328 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 6917      656E7365 
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 178


 6917      5F464C41 
 6917      53485F49 
 6917      4F5F5354 
 6918              	.LASF73:
 6919 0341 736E7254 		.ascii	"snrTestSensorId\000"
 6919      65737453 
 6919      656E736F 
 6919      72496400 
 6920              	.LASF98:
 6921 0351 70747232 		.ascii	"ptr2NoiseEnvlp\000"
 6921      4E6F6973 
 6921      65456E76 
 6921      6C7000
 6922              	.LASF164:
 6923 0360 63616C4D 		.ascii	"calMask\000"
 6923      61736B00 
 6924              	.LASF96:
 6925 0368 77646774 		.ascii	"wdgtType\000"
 6925      54797065 
 6925      00
 6926              	.LASF162:
 6927 0371 43617053 		.ascii	"CapSense_CSDSetupWidgetExt\000"
 6927      656E7365 
 6927      5F435344 
 6927      53657475 
 6927      70576964 
 6928              	.LASF145:
 6929 038c 43617053 		.ascii	"CapSense_SsCSDCmodPrecharge\000"
 6929      656E7365 
 6929      5F537343 
 6929      5344436D 
 6929      6F645072 
 6930              	.LASF113:
 6931 03a8 72617763 		.ascii	"rawcount\000"
 6931      6F756E74 
 6931      00
 6932              	.LASF151:
 6933 03b1 6E657752 		.ascii	"newRegisterValue\000"
 6933      65676973 
 6933      74657256 
 6933      616C7565 
 6933      00
 6934              	.LASF69:
 6935 03c2 6D6F6443 		.ascii	"modCsdClk\000"
 6935      7364436C 
 6935      6B00
 6936              	.LASF57:
 6937 03cc 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 6937      656E7365 
 6937      5F52414D 
 6937      5F534E53 
 6937      5F535452 
 6938              	.LASF119:
 6939 03e4 70747252 		.ascii	"ptrRamWidget\000"
 6939      616D5769 
 6939      64676574 
 6939      00
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 179


 6940              	.LASF110:
 6941 03f1 74617267 		.ascii	"target\000"
 6941      657400
 6942              	.LASF81:
 6943 03f8 64725074 		.ascii	"drPtr\000"
 6943      7200
 6944              	.LASF193:
 6945 03fe 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 6945      656E7365 
 6945      5F537353 
 6945      77697463 
 6945      6853656E 
 6946              	.LASF44:
 6947 041b 73696750 		.ascii	"sigPFC\000"
 6947      464300
 6948              	.LASF36:
 6949 0422 68797374 		.ascii	"hysteresis\000"
 6949      65726573 
 6949      697300
 6950              	.LASF130:
 6951 042d 7261774C 		.ascii	"rawLevel\000"
 6951      6576656C 
 6951      00
 6952              	.LASF99:
 6953 0436 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 6953      656E7365 
 6953      5F464C41 
 6953      53485F57 
 6953      445F5354 
 6954              	.LASF38:
 6955 044f 6C6F7742 		.ascii	"lowBslnRst\000"
 6955      736C6E52 
 6955      737400
 6956              	.LASF128:
 6957 045a 6D696E52 		.ascii	"minRaw\000"
 6957      617700
 6958              	.LASF134:
 6959 0461 43617053 		.ascii	"CapSense_SsCSDSetUpIdacs\000"
 6959      656E7365 
 6959      5F537343 
 6959      53445365 
 6959      74557049 
 6960              	.LASF95:
 6961 047a 746F7461 		.ascii	"totalNumSns\000"
 6961      6C4E756D 
 6961      536E7300 
 6962              	.LASF168:
 6963 0486 43617053 		.ascii	"CapSense_SsCSDDisconnectSnsExt\000"
 6963      656E7365 
 6963      5F537343 
 6963      53444469 
 6963      73636F6E 
 6964              	.LASF26:
 6965 04a5 534D4152 		.ascii	"SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT\000"
 6965      5453454E 
 6965      53455F43 
 6965      53445F4E 
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 180


 6965      4F495345 
 6966              	.LASF126:
 6967 04ca 6761696E 		.ascii	"gainIndex\000"
 6967      496E6465 
 6967      7800
 6968              	.LASF34:
 6969 04d4 6E6F6973 		.ascii	"noiseTh\000"
 6969      65546800 
 6970              	.LASF188:
 6971 04dc 4379496E 		.ascii	"CyIntClearPending\000"
 6971      74436C65 
 6971      61725065 
 6971      6E64696E 
 6971      6700
 6972              	.LASF14:
 6973 04ee 63686172 		.ascii	"char\000"
 6973      00
 6974              	.LASF187:
 6975 04f3 43794578 		.ascii	"CyExitCriticalSection\000"
 6975      69744372 
 6975      69746963 
 6975      616C5365 
 6975      6374696F 
 6976              	.LASF183:
 6977 0509 43617053 		.ascii	"CapSense_DischargeExtCapacitors\000"
 6977      656E7365 
 6977      5F446973 
 6977      63686172 
 6977      67654578 
 6978              	.LASF169:
 6979 0529 43617053 		.ascii	"CapSense_SsCSDGetNumberOfConversions\000"
 6979      656E7365 
 6979      5F537343 
 6979      53444765 
 6979      744E756D 
 6980              	.LASF124:
 6981 054e 6D617849 		.ascii	"maxIdac\000"
 6981      64616300 
 6982              	.LASF85:
 6983 0556 6873696F 		.ascii	"hsiomShift\000"
 6983      6D536869 
 6983      667400
 6984              	.LASF10:
 6985 0561 75696E74 		.ascii	"uint16\000"
 6985      313600
 6986              	.LASF141:
 6987 0568 636F6E76 		.ascii	"conversionsNum\000"
 6987      65727369 
 6987      6F6E734E 
 6987      756D00
 6988              	.LASF120:
 6989 0577 70747252 		.ascii	"ptrRamSensor\000"
 6989      616D5365 
 6989      6E736F72 
 6989      00
 6990              	.LASF32:
 6991 0584 7265736F 		.ascii	"resolution\000"
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 181


 6991      6C757469 
 6991      6F6E00
 6992              	.LASF64:
 6993 058f 73746174 		.ascii	"status\000"
 6993      757300
 6994              	.LASF18:
 6995 0596 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 6995      656E7365 
 6995      5F4C4F57 
 6995      5F42534C 
 6995      4E5F5253 
 6996              	.LASF56:
 6997 05b1 69646163 		.ascii	"idacComp\000"
 6997      436F6D70 
 6997      00
 6998              	.LASF80:
 6999 05ba 70635074 		.ascii	"pcPtr\000"
 6999      7200
 7000              	.LASF6:
 7001 05c0 6C6F6E67 		.ascii	"long long int\000"
 7001      206C6F6E 
 7001      6720696E 
 7001      7400
 7002              	.LASF97:
 7003 05ce 6E756D43 		.ascii	"numCols\000"
 7003      6F6C7300 
 7004              	.LASF133:
 7005 05d6 43617053 		.ascii	"CapSense_SsCSDInitialize\000"
 7005      656E7365 
 7005      5F537343 
 7005      5344496E 
 7005      69746961 
 7006              	.LASF37:
 7007 05ef 6F6E4465 		.ascii	"onDebounce\000"
 7007      626F756E 
 7007      636500
 7008              	.LASF116:
 7009 05fa 75707065 		.ascii	"upperLimit\000"
 7009      724C696D 
 7009      697400
 7010              	.LASF163:
 7011 0605 43617053 		.ascii	"CapSense_SsCSDCalibrate\000"
 7011      656E7365 
 7011      5F537343 
 7011      53444361 
 7011      6C696272 
 7012              	.LASF112:
 7013 061d 63616C69 		.ascii	"calibrateStatus\000"
 7013      62726174 
 7013      65537461 
 7013      74757300 
 7014              	.LASF70:
 7015 062d 77646774 		.ascii	"wdgtList\000"
 7015      4C697374 
 7015      00
 7016              	.LASF101:
 7017 0636 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 182


 7017      656E7365 
 7017      5F464C41 
 7017      53485F53 
 7017      54525543 
 7018              	.LASF184:
 7019 064c 43617053 		.ascii	"CapSense_WriteBitsSafe\000"
 7019      656E7365 
 7019      5F577269 
 7019      74654269 
 7019      74735361 
 7020              	.LASF173:
 7021 0663 43617053 		.ascii	"CapSense_dsRam\000"
 7021      656E7365 
 7021      5F647352 
 7021      616D00
 7022              	.LASF75:
 7023 0672 736E7254 		.ascii	"snrTestRawCount\000"
 7023      65737452 
 7023      6177436F 
 7023      756E7400 
 7024              	.LASF181:
 7025 0682 43617053 		.ascii	"CapSense_configCsd\000"
 7025      656E7365 
 7025      5F636F6E 
 7025      66696743 
 7025      736400
 7026              	.LASF35:
 7027 0695 6E4E6F69 		.ascii	"nNoiseTh\000"
 7027      73655468 
 7027      00
 7028              	.LASF68:
 7029 069e 63736430 		.ascii	"csd0Config\000"
 7029      436F6E66 
 7029      696700
 7030              	.LASF121:
 7031 06a9 43617053 		.ascii	"CapSense_SsCSDCalibrateCheck\000"
 7031      656E7365 
 7031      5F537343 
 7031      53444361 
 7031      6C696272 
 7032              	.LASF46:
 7033 06c6 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 7033      656E7365 
 7033      5F52414D 
 7033      5F57445F 
 7033      42415345 
 7034              	.LASF115:
 7035 06e2 66726571 		.ascii	"freqChannel\000"
 7035      4368616E 
 7035      6E656C00 
 7036              	.LASF79:
 7037 06ee 6873696F 		.ascii	"hsiomPtr\000"
 7037      6D507472 
 7037      00
 7038              	.LASF11:
 7039 06f7 75696E74 		.ascii	"uint32\000"
 7039      333200
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 183


 7040              	.LASF92:
 7041 06fe 70747232 		.ascii	"ptr2FltrHistory\000"
 7041      466C7472 
 7041      48697374 
 7041      6F727900 
 7042              	.LASF104:
 7043 070e 6761696E 		.ascii	"gainValue\000"
 7043      56616C75 
 7043      6500
 7044              	.LASF179:
 7045 0718 43617053 		.ascii	"CapSense_curSnsIOPtr\000"
 7045      656E7365 
 7045      5F637572 
 7045      536E7349 
 7045      4F507472 
 7046              	.LASF84:
 7047 072d 6D61736B 		.ascii	"mask\000"
 7047      00
 7048              	.LASF117:
 7049 0732 6C6F7765 		.ascii	"lowerLimit\000"
 7049      724C696D 
 7049      697400
 7050              	.LASF167:
 7051 073d 7074724D 		.ascii	"ptrMaxIdac\000"
 7051      61784964 
 7051      616300
 7052              	.LASF129:
 7053 0748 6D617852 		.ascii	"maxRawLevel\000"
 7053      61774C65 
 7053      76656C00 
 7054              	.LASF111:
 7055 0754 73616D70 		.ascii	"sampleClkFreqHz\000"
 7055      6C65436C 
 7055      6B467265 
 7055      71487A00 
 7056              	.LASF195:
 7057 0764 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.c\000"
 7057      72617465 
 7057      645F536F 
 7057      75726365 
 7057      5C50536F 
 7058              	.LASF31:
 7059 0794 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 7059      656E7365 
 7059      5F53454E 
 7059      53455F4D 
 7059      4554484F 
 7060              	.LASF102:
 7061 07b0 6C6F6E67 		.ascii	"long double\000"
 7061      20646F75 
 7061      626C6500 
 7062              	.LASF142:
 7063 07bc 43617053 		.ascii	"CapSense_SsCSDConfigClock\000"
 7063      656E7365 
 7063      5F537343 
 7063      5344436F 
 7063      6E666967 
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 184


 7064              	.LASF16:
 7065 07d6 72656733 		.ascii	"reg32\000"
 7065      3200
 7066              	.LASF74:
 7067 07dc 736E7254 		.ascii	"snrTestScanCounter\000"
 7067      65737453 
 7067      63616E43 
 7067      6F756E74 
 7067      657200
 7068              	.LASF59:
 7069 07ef 636F6E66 		.ascii	"configId\000"
 7069      69674964 
 7069      00
 7070              	.LASF91:
 7071 07f8 70747232 		.ascii	"ptr2SnsRam\000"
 7071      536E7352 
 7071      616D00
 7072              	.LASF67:
 7073 0803 736E7353 		.ascii	"snsStatus\000"
 7073      74617475 
 7073      7300
 7074              	.LASF42:
 7075 080d 736E7343 		.ascii	"snsClkSource\000"
 7075      6C6B536F 
 7075      75726365 
 7075      00
 7076              	.LASF160:
 7077 081a 43617053 		.ascii	"CapSense_SsCSDElectrodeCheck\000"
 7077      656E7365 
 7077      5F537343 
 7077      5344456C 
 7077      65637472 
 7078              	.LASF2:
 7079 0837 73686F72 		.ascii	"short int\000"
 7079      7420696E 
 7079      7400
 7080              	.LASF159:
 7081 0841 6E657748 		.ascii	"newHsiomRegValue\000"
 7081      73696F6D 
 7081      52656756 
 7081      616C7565 
 7081      00
 7082              	.LASF78:
 7083 0852 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 7083      656E7365 
 7083      5F52414D 
 7083      5F535452 
 7083      55435400 
 7084              	.LASF157:
 7085 0866 43617053 		.ascii	"CapSense_CSDDisconnectSns\000"
 7085      656E7365 
 7085      5F435344 
 7085      44697363 
 7085      6F6E6E65 
 7086              	.LASF107:
 7087 0880 43617053 		.ascii	"CapSense_SsCSDSetModeSnsClockDivider\000"
 7087      656E7365 
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 185


 7087      5F537343 
 7087      53445365 
 7087      744D6F64 
 7088              	.LASF182:
 7089 08a5 43617053 		.ascii	"CapSense_SsSetAllIOsState\000"
 7089      656E7365 
 7089      5F537353 
 7089      6574416C 
 7089      6C494F73 
 7090              	.LASF4:
 7091 08bf 6C6F6E67 		.ascii	"long int\000"
 7091      20696E74 
 7091      00
 7092              	.LASF65:
 7093 08c8 77646774 		.ascii	"wdgtEnable\000"
 7093      456E6162 
 7093      6C6500
 7094              	.LASF54:
 7095 08d3 64696666 		.ascii	"diff\000"
 7095      00
 7096              	.LASF125:
 7097 08d8 6D696E49 		.ascii	"minIdac\000"
 7097      64616300 
 7098              	.LASF62:
 7099 08e0 74756E65 		.ascii	"tunerCmd\000"
 7099      72436D64 
 7099      00
 7100              	.LASF165:
 7101 08e9 74656D70 		.ascii	"temp\000"
 7101      00
 7102              	.LASF29:
 7103 08ee 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 7103      656E7365 
 7103      5F53454E 
 7103      53455F4D 
 7103      4554484F 
 7104              	.LASF82:
 7105 090a 70735074 		.ascii	"psPtr\000"
 7105      7200
 7106              	.LASF138:
 7107 0910 69646163 		.ascii	"idacARegValue\000"
 7107      41526567 
 7107      56616C75 
 7107      6500
 7108              	.LASF48:
 7109 091e 62757474 		.ascii	"button0\000"
 7109      6F6E3000 
 7110              	.LASF49:
 7111 0926 62757474 		.ascii	"button1\000"
 7111      6F6E3100 
 7112              	.LASF50:
 7113 092e 62757474 		.ascii	"button2\000"
 7113      6F6E3200 
 7114              	.LASF170:
 7115 0936 43617053 		.ascii	"CapSense_CSDCalibrateWidget\000"
 7115      656E7365 
 7115      5F435344 
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 186


 7115      43616C69 
 7115      62726174 
 7116              	.LASF103:
 7117 0952 6761696E 		.ascii	"gainReg\000"
 7117      52656700 
 7118              	.LASF174:
 7119 095a 43617053 		.ascii	"CapSense_dsFlash\000"
 7119      656E7365 
 7119      5F647346 
 7119      6C617368 
 7119      00
 7120              	.LASF43:
 7121 096b 66696E67 		.ascii	"fingerCap\000"
 7121      65724361 
 7121      7000
 7122              	.LASF148:
 7123 0975 43617053 		.ascii	"CapSense_CSDScanExt\000"
 7123      656E7365 
 7123      5F435344 
 7123      5363616E 
 7123      45787400 
 7124              	.LASF66:
 7125 0989 77646774 		.ascii	"wdgtStatus\000"
 7125      53746174 
 7125      757300
 7126              	.LASF149:
 7127 0994 43617053 		.ascii	"CapSense_CSDConnectSns\000"
 7127      656E7365 
 7127      5F435344 
 7127      436F6E6E 
 7127      65637453 
 7128              	.LASF28:
 7129 09ab 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 7129      656E7365 
 7129      5F53454E 
 7129      53455F4D 
 7129      4554484F 
 7130              	.LASF45:
 7131 09c7 73697A65 		.ascii	"sizetype\000"
 7131      74797065 
 7131      00
 7132              	.LASF86:
 7133 09d0 64725368 		.ascii	"drShift\000"
 7133      69667400 
 7134              	.LASF5:
 7135 09d8 6C6F6E67 		.ascii	"long unsigned int\000"
 7135      20756E73 
 7135      69676E65 
 7135      6420696E 
 7135      7400
 7136              	.LASF39:
 7137 09ea 69646163 		.ascii	"idacMod\000"
 7137      4D6F6400 
 7138              	.LASF122:
 7139 09f2 43617053 		.ascii	"CapSense_SsCSDSwitchIdacGain\000"
 7139      656E7365 
 7139      5F537343 
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 187


 7139      53445377 
 7139      69746368 
 7140              	.LASF93:
 7141 0a0f 70747232 		.ascii	"ptr2DebounceArr\000"
 7141      4465626F 
 7141      756E6365 
 7141      41727200 
 7142              	.LASF33:
 7143 0a1f 66696E67 		.ascii	"fingerTh\000"
 7143      65725468 
 7143      00
 7144              	.LASF53:
 7145 0a28 62736C6E 		.ascii	"bslnExt\000"
 7145      45787400 
 7146              	.LASF105:
 7147 0a30 43617053 		.ascii	"CapSense_IDAC_GAIN_TABLE_STRUCT\000"
 7147      656E7365 
 7147      5F494441 
 7147      435F4741 
 7147      494E5F54 
 7148              	.LASF47:
 7149 0a50 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 7149      656E7365 
 7149      5F52414D 
 7149      5F57445F 
 7149      42555454 
 7150              	.LASF15:
 7151 0a6e 63797374 		.ascii	"cystatus\000"
 7151      61747573 
 7151      00
 7152              	.LASF108:
 7153 0a77 43617053 		.ascii	"CapSense_SsCSDSetFilterDelay\000"
 7153      656E7365 
 7153      5F537343 
 7153      53445365 
 7153      7446696C 
 7154              	.LASF1:
 7155 0a94 756E7369 		.ascii	"unsigned char\000"
 7155      676E6564 
 7155      20636861 
 7155      7200
 7156              	.LASF94:
 7157 0aa2 73746174 		.ascii	"staticConfig\000"
 7157      6963436F 
 7157      6E666967 
 7157      00
 7158              	.LASF77:
 7159 0aaf 7363616E 		.ascii	"scanCurrentISC\000"
 7159      43757272 
 7159      656E7449 
 7159      534300
 7160              	.LASF90:
 7161 0abe 70747232 		.ascii	"ptr2WdgtRam\000"
 7161      57646774 
 7161      52616D00 
 7162              	.LASF17:
 7163 0aca 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 188


 7163      656E7365 
 7163      5F544852 
 7163      4553484F 
 7163      4C445F54 
 7164              	.LASF154:
 7165 0ae2 43617053 		.ascii	"CapSense_CSDScan\000"
 7165      656E7365 
 7165      5F435344 
 7165      5363616E 
 7165      00
 7166              	.LASF30:
 7167 0af3 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
 7167      656E7365 
 7167      5F53454E 
 7167      53455F4D 
 7167      4554484F 
 7168              	.LASF83:
 7169 0b10 6873696F 		.ascii	"hsiomMask\000"
 7169      6D4D6173 
 7169      6B00
 7170              	.LASF189:
 7171 0b1a 4379496E 		.ascii	"CyIntEnable\000"
 7171      74456E61 
 7171      626C6500 
 7172              	.LASF41:
 7173 0b26 736E7343 		.ascii	"snsClk\000"
 7173      6C6B00
 7174              	.LASF171:
 7175 0b2d 6761696E 		.ascii	"gainSwitch\000"
 7175      53776974 
 7175      636800
 7176              	.LASF186:
 7177 0b38 4379456E 		.ascii	"CyEnterCriticalSection\000"
 7177      74657243 
 7177      72697469 
 7177      63616C53 
 7177      65637469 
 7178              	.LASF177:
 7179 0b4f 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 7179      656E7365 
 7179      5F637572 
 7179      52616D53 
 7179      6E735074 
 7180              	.LASF0:
 7181 0b65 7369676E 		.ascii	"signed char\000"
 7181      65642063 
 7181      68617200 
 7182              	.LASF178:
 7183 0b71 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 7183      656E7365 
 7183      5F736361 
 7183      6E467265 
 7183      71496E64 
 7184              	.LASF52:
 7185 0b88 62736C6E 		.ascii	"bsln\000"
 7185      00
 7186              	.LASF3:
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 189


 7187 0b8d 73686F72 		.ascii	"short unsigned int\000"
 7187      7420756E 
 7187      7369676E 
 7187      65642069 
 7187      6E7400
 7188              	.LASF147:
 7189 0ba0 43617053 		.ascii	"CapSense_SsCSDStartSample\000"
 7189      656E7365 
 7189      5F537343 
 7189      53445374 
 7189      61727453 
 7190              	.LASF89:
 7191 0bba 70747232 		.ascii	"ptr2SnsFlash\000"
 7191      536E7346 
 7191      6C617368 
 7191      00
 7192              	.LASF132:
 7193 0bc7 6E657752 		.ascii	"newRegValue\000"
 7193      65675661 
 7193      6C756500 
 7194              	.LASF9:
 7195 0bd3 75696E74 		.ascii	"uint8\000"
 7195      3800
 7196              	.LASF13:
 7197 0bd9 646F7562 		.ascii	"double\000"
 7197      6C6500
 7198              	.LASF55:
 7199 0be0 6E656742 		.ascii	"negBslnRstCnt\000"
 7199      736C6E52 
 7199      7374436E 
 7199      7400
 7200              	.LASF19:
 7201 0bee 70617261 		.ascii	"param0\000"
 7201      6D3000
 7202              	.LASF20:
 7203 0bf5 70617261 		.ascii	"param1\000"
 7203      6D3100
 7204              	.LASF21:
 7205 0bfc 70617261 		.ascii	"param2\000"
 7205      6D3200
 7206              	.LASF22:
 7207 0c03 70617261 		.ascii	"param3\000"
 7207      6D3300
 7208              	.LASF23:
 7209 0c0a 70617261 		.ascii	"param4\000"
 7209      6D3400
 7210              	.LASF24:
 7211 0c11 70617261 		.ascii	"param5\000"
 7211      6D3500
 7212              	.LASF25:
 7213 0c18 70617261 		.ascii	"param6\000"
 7213      6D3600
 7214              	.LASF166:
 7215 0c1f 70747249 		.ascii	"ptrIdacMod\000"
 7215      6461634D 
 7215      6F6400
 7216              	.LASF106:
ARM GAS  C:\Users\adm\AppData\Local\Temp\cc69SnMR.s 			page 190


 7217 0c2a 736E7343 		.ascii	"snsClkDivider\000"
 7217      6C6B4469 
 7217      76696465 
 7217      7200
 7218              	.LASF137:
 7219 0c38 69646163 		.ascii	"idacGain\000"
 7219      4761696E 
 7219      00
 7220              	.LASF60:
 7221 0c41 64657669 		.ascii	"deviceId\000"
 7221      63654964 
 7221      00
 7222              	.LASF109:
 7223 0c4a 77696467 		.ascii	"widgetId\000"
 7223      65744964 
 7223      00
 7224              	.LASF158:
 7225 0c53 6E657750 		.ascii	"newPcRegValue\000"
 7225      63526567 
 7225      56616C75 
 7225      6500
 7226              	.LASF180:
 7227 0c61 43617053 		.ascii	"CapSense_idacGainTable\000"
 7227      656E7365 
 7227      5F696461 
 7227      63476169 
 7227      6E546162 
 7228              	.LASF58:
 7229 0c78 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 7229      656E7365 
 7229      5F52414D 
 7229      5F534E53 
 7229      5F4C4953 
 7230              	.LASF100:
 7231 0c95 77646774 		.ascii	"wdgtArray\000"
 7231      41727261 
 7231      7900
 7232              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
